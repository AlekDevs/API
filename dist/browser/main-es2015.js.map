{"version":3,"sources":["./src/app/services/channel.service.ts","./src/app/pages/home/home.component.ts","./src/app/pages/home/home.component.html","./src/app/dashboard/me/friends-list/friends-list.component.html","./src/app/dashboard/me/friends-list/friends-list.component.ts","./src/app/dashboard/guilds/member-list/member-list.animations.ts","./src/app/authentication/sign-up/sign-up.component.ts","./src/app/authentication/sign-up/sign-up.component.html","./src/app/dashboard/components/guild-navbar/guild-navbar.component.ts","./src/app/dashboard/components/guild-navbar/guild-navbar.component.html","./src/app/dashboard/messages/message/message.component.ts","./src/app/dashboard/messages/message/message.component.html","./src/app/services/guild.service.ts","./src/app/dashboard/text-based-channel.ts","./src/app/services/events/channel-event.service.ts","./src/app/pipes/mini-date.pipe.ts","./src/app/dashboard/components/guild-icon/guild-icon.component.ts","./src/app/dashboard/components/guild-icon/guild-icon.component.html","./src/app/utils/zippy/zippy.component.animations.ts","./src/app/dialog/create-channel/create-channel.component.ts","./src/app/dialog/create-channel/create-channel.component.html","./src/environments/environment.ts","./src/app/dashboard/messages/message-embed/message-embed.component.ts","./src/app/dashboard/messages/message-embed/message-embed.component.html","./src/app/services/events/guild-event.service.ts","./src/app/dashboard/me/user-account/user-account.component.ts","./src/app/dashboard/me/user-account/user-account.component.html","./src/app/services/dialog.service.ts","./src/app/dialog/create-guild/create-guild.component.ts","./src/app/dialog/create-guild/create-guild.component.html","./src/app/dashboard/guilds/guild-sidebar/guild-sidebar.component.html","./src/app/dashboard/guilds/guild-sidebar/guild-sidebar.component.ts","./src/app/pipes/camel-to-sentence-case.pipe.ts","./src/app/countdown.pipe.ts","./src/app/authentication/logout/logout.component.ts","./src/app/authentication/logout/logout.component.html","./src/app/guards/dashboard-auth.guard.ts","./src/app/authentication/sign-up/username.validators.ts","./src/app/dashboard/me/me-sidebar/me-sidebar.component.html","./src/app/dashboard/me/me-sidebar/me-sidebar.component.ts","./src/app/dashboard/components/member-username/member-username.component.html","./src/app/dashboard/components/member-username/member-username.component.ts","./src/app/dashboard/guilds/guild-settings/roles/roles.component.ts","./src/app/dashboard/guilds/guild-settings/roles/roles.component.html","./src/app/dialog/add-friend/add-friend.component.ts","./src/app/dialog/add-friend/add-friend.component.html","./src/app/dashboard/guilds/guild-settings/overview/guild-settings.component.ts","./src/app/dashboard/guilds/guild-settings/overview/guild-settings.component.html","./src/app/dashboard/guilds/member-list/member-list.component.ts","./src/app/dashboard/guilds/member-list/member-list.component.html","./src/app/pages/developers/application/application.component.ts","./src/app/pages/developers/application/application.component.html","./src/app/services/http-wrapper.ts","./src/app/services/developers.service.ts","./src/app/pipes/clean-date-time.pipe.ts","./src/app/dashboard/components/dashboard-navbar/dashboard-navbar.component.ts","./src/app/dashboard/components/dashboard-navbar/dashboard-navbar.component.html","./src/app/utils/external-redirect.ts","./src/app/guards/guild-auth.guard.ts","./src/app/services/ws.service.ts","./src/app/dashboard/guilds/text-channel/text-channel.component.ts","./src/app/dashboard/guilds/text-channel/text-channel.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/services/ping.service.ts","./src/app/pages/developers/bot-user/bot-user.component.ts","./src/app/pages/developers/bot-user/bot-user.component.html","./src/app/authentication/sign-up/password.validators.ts","./src/app/authentication/auth/auth.component.ts","./src/app/authentication/auth/auth.component.html","./src/app/services/sound.service.ts","./src/app/config.ts","./src/app/pipes/timestamp.pipe.ts","./src/app/services/theme.service.ts","./src/app/pages/why/why.component.ts","./src/app/pipes/snake-to-sentence-case.pipe.ts","./src/app/app.module.ts","./src/app/pages/invite/invite.component.html","./src/app/pages/invite/invite.component.ts","./src/app/guards/dmchannel-auth.guard.ts","./src/app/authentication/verify/verify.component.ts","./src/app/authentication/verify/verify.component.html","./src/app/pages/developers/developers.component.ts","./src/app/pages/developers/developers.component.html","./src/app/dashboard/components/module-config.ts","./src/app/dashboard/guilds/guild-overview/guild-overview.component.html","./src/app/dashboard/guilds/guild-overview/guild-overview.component.ts","./src/app/dashboard/me/dmchannel/dm.component.ts","./src/app/dashboard/me/dmchannel/dm.component.html","./src/app/dashboard/components/channel-tab/channel-tab.component.html","./src/app/dashboard/components/channel-tab/channel-tab.component.ts","./src/app/utils/coming-soon/coming-soon.component.ts","./src/app/utils/coming-soon/coming-soon.component.html","./src/app/services/events/event.service.ts","./src/app/pipes/truncated.pipe.ts","./src/app/dashboard/me/user-settings/user-settings.component.ts","./src/app/dashboard/me/user-settings/user-settings.component.html","./src/app/types/entity-types.ts","./src/app/services/user-auth.service.ts","./src/app/components/navbar/navbar.component.ts","./src/app/components/navbar/navbar.component.html","./src/app/services/log.service.ts","./src/app/utils/spinner/spinner.component.ts","./src/app/utils/spinner/spinner.component.html","./src/app/dashboard/components/sidebar/sidebar.component.html","./src/app/dashboard/components/sidebar/sidebar.component.ts","./src/app/material-module.ts","./src/app/dashboard/components/avatar-url/avatar-url.component.ts","./src/app/dashboard/components/avatar-url/avatar-url.component.html","./src/app/dashboard/guilds/voice-channel/voice-channel.component.html","./src/app/dashboard/guilds/voice-channel/voice-channel.component.ts","./src/app/cool/lighthouse/lighthouse.component.ts","./src/app/cool/lighthouse/lighthouse.component.html","./src/app/authentication/login/login.component.ts","./src/app/authentication/login/login.component.html","./src/app/dashboard/guilds/guild-settings/invites/invites.component.html","./src/app/dashboard/guilds/guild-settings/invites/invites.component.ts","./src/app/utils/utils.ts","./src/app/dashboard/guilds/guild-settings/bot-list/bot-list.component.ts","./src/app/dashboard/guilds/guild-settings/bot-list/bot-list.component.html","./src/app/services/events/my-event.service.ts","./src/app/dashboard/components/settings-sidebar/settings-sidebar.component.ts","./src/app/dashboard/components/settings-sidebar/settings-sidebar.component.html","./src/app/services/user.service.ts","./src/app/dashboard/components/save-changes/save-changes.component.ts","./src/app/dashboard/components/save-changes/save-changes.component.html","./src/app/dialog/profile/profile.component.ts","./src/app/dialog/profile/profile.component.html","./src/app/guards/can-deactivate-dashboard.guard.ts","./src/app/dashboard/me/me-overview/me-overview.component.html","./src/app/dashboard/me/me-overview/me-overview.component.ts","./src/app/services/invite.service.ts","./src/app/services/permissions.service.ts","./src/app/services/message.service.ts","./src/app/dashboard/components/user-config.ts","./src/app/pages/not-found/not-found.component.ts","./src/app/pages/not-found/not-found.component.html","./src/app/pipes/duration-string.pipe.ts","./src/app/utils/zippy/zippy.component.ts","./src/app/utils/zippy/zippy.component.html","./src/app/app-routing.module.ts","./src/app/guards/developers-auth.guard.ts","./src/app/cool/submarine/submarine.component.ts","./src/app/cool/submarine/submarine.component.html","./src/app/utils/waves/waves.component.ts","./src/app/utils/waves/waves.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object","./src/app/dialog/create-invite/create-invite.component.ts","./src/app/dialog/create-invite/create-invite.component.html"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { environment } from 'src/environments/environment';\nimport { ChannelTypes, Lean } from '../types/entity-types';\nimport { GuildService } from './guild.service';\nimport { HTTPWrapper } from './http-wrapper';\nimport { UserService } from './user.service';\nimport { WSService } from './ws.service';\n\n@Injectable({ providedIn: 'root' })\nexport class ChannelService extends HTTPWrapper<Lean.Channel> {\n  protected endpoint = `${environment.endpoint}/channels`;\n  public typingUserIds = new Map<string, string[]>();\n  \n  protected _arr: Lean.Channel[] = [];\n  public get channels(): Lean.Channel[] {\n    return this._arr = this.guildService.guilds\n      .flatMap(c => c.channels)\n      .concat(this._arr);\n  }\n  public get dmChannels(): ChannelTypes.DM[] {\n    return this.channels.filter(c => c.type === 'DM') as ChannelTypes.DM[];\n  }\n\n  constructor(\n    http: HttpClient,\n    ws: WSService,\n    private guildService: GuildService,\n    private userService: UserService,\n  ) { super(http, ws); }\n\n  public getDM(recipientId: string): ChannelTypes.DM {\n    return this.dmChannels.find(c =>c.memberIds.includes(recipientId)\n      && c.memberIds.includes(this.userService.self._id));\n  }\n\n  public startTyping(channelId: string, userId: string) {\n    // const isSelf = this.userService.self._id === userId;\n    // if (isSelf) return;\n\n    this.getTyping(channelId).push(userId);\n\n    setTimeout(() => this.stopTyping(channelId, userId), 5.1 * 1000);\n  }\n  public stopTyping(channelId: string, userId: string) {\n    const channelUsers = this.getTyping(channelId);\n    const index = channelUsers.indexOf(userId);\n\n    channelUsers.splice(index, 1);\n  }\n  public getTyping(channelId: string) {\n    return this.typingUserIds.get(channelId)\n      ?? this.typingUserIds\n        .set(channelId, [])\n        .get(channelId);\n  }\n\n  public getRecipient(channelId: string) {\n    const channel = this.getCached(channelId);\n    const recipientId = channel.memberIds\n      .find(id => id !== this.userService.self._id);\n    return this.userService.getCached(recipientId);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css', './home.component.mobile.css']\r\n})\r\nexport class HomeComponent {\r\n  version = environment.version;\r\n\r\n  constructor() {\r\n    document.title = 'Accord - Like Discord, But Customizable';\r\n  }\r\n}\r\n","<navbar></navbar>\r\n\r\n<header class=\"container\">\r\n  <div class=\"jumbotron\">\r\n    <h1 class=\"display-4\">Chat With Ease</h1>\r\n    <p class=\"lead\">\r\n      Seamlessly chat with friends within seconds. <br>\r\n      Accord is easy to use, and customizable.\r\n    </p>\r\n    <button routerLink=\"/login\" class=\"bg-success text-dark\" mat-button>Get Started</button>\r\n    <a href=\"#features\">\r\n      <button class=\"bg-info ml-2 text-light\" mat-button>Features</button>\r\n    </a>\r\n  </div>\r\n</header>\r\n\r\n<waves></waves>\r\n<section id=\"features\" class=\"main\">\r\n  <div class=\"container\">\r\n    <div class=\"text-center\">\r\n      <h2 class=\"display-4\">\r\n        <span class=\"text-muted\">Ditch </span>\r\n        <span class=\"text-light\">Discord</span>\r\n        <span class=\"text-secondary\">, Go </span>\r\n        <span>Accord</span>\r\n        <span class=\"text-muted\">.</span>\r\n      </h2>\r\n      <p class=\"lead\"></p>\r\n    </div>\r\n    <hr>\r\n  \r\n    <div class=\"row\">\r\n      <div class=\"mt-5 col-md-6 col-sm-12\">\r\n        <mat-card class=\"bg-transparent shadow-none\">\r\n          <img\r\n            src=\"assets/img/home/themes.webp\"\r\n            alt=\"Themes\"\r\n            mat-card-image>\r\n          <mat-card-title>\r\n            <i class=\"lni lni-paint-roller\"></i>\r\n            <span> Customize to Your <strong>Accord</strong></span>\r\n          </mat-card-title>\r\n          <mat-card-subtitle>Choose from a wide range of premade themes to customize your experience.</mat-card-subtitle>\r\n        </mat-card>\r\n      </div>\r\n    \r\n      <div class=\"mt-5 col-md-6 col-sm-12\">\r\n        <mat-card class=\"bg-transparent shadow-none\">\r\n          <img\r\n            src=\"assets/img/home/manage_guilds.webp\"\r\n            alt=\"Themes\"\r\n            mat-card-image>\r\n          <mat-card-title>\r\n            <i class=\"fas fa-hashtag\"></i> \r\n            <span> Manage Your Guilds</span>\r\n          </mat-card-title>\r\n          <mat-card-subtitle>Manage your guilds to your accord, and chat with your friends, or others.</mat-card-subtitle>\r\n        </mat-card>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <hr>\r\n\r\n  <div class=\"col-12\">\r\n    <div class=\"d-flex justify-content-center\">\r\n      <button\r\n        routerLink=\"/login\"\r\n        class=\"bg-success text-dark\"\r\n        mat-button>Get Started</button>\r\n    </div>\r\n  </div>\r\n\r\n  <app-submarine></app-submarine>\r\n</section>\r\n  \r\n<footer>\r\n  <span>&copy; 2021 accord.app</span>\r\n  <span class=\"float-right text-secondary cursor-pointer\">{{ version }}</span>\r\n</footer>","<div class=\"px-4\">\r\n  <div [ngSwitch]=\"tab\">\r\n    <div *ngSwitchCase=\"'ONLINE'\">\r\n      <div class=\"category pl-0 mb-2\">Online—{{ onlineFriends.length }}</div>\r\n      \r\n      <div *ngFor=\"let friend of onlineFriends\">\r\n        <div class=\"float-right\">\r\n          <button\r\n            [routerLink]=\"'/channels/@me/' + channelService.getDM(friend._id)?._id\"\r\n            matTooltip=\"Message\"\r\n            class=\"round px-0\" mat-button>\r\n            <i class=\"lni lni-bubble\"></i>\r\n          </button>\r\n          <button\r\n            matTooltip=\"Remove Friend\"\r\n            (click)=\"remove(friend._id)\"\r\n            class=\"round px-0 ml-2\" mat-button><i class=\"lni lni-close\"></i></button>\r\n        </div>\r\n        <member-username\r\n          [routerLink]=\"'/channels/@me/' + channelService.getDM(friend._id)?._id\"\r\n          [user]=\"users.getCached(friend._id)\"></member-username>\r\n      </div>\r\n      <div\r\n        *ngIf=\"users.friends.length <= 0\"\r\n        class=\"text-muted\">\r\n        <i class=\"fas fa-info-circle mr-2\"></i>\r\n        <span>No friends online.</span>\r\n      </div>  \r\n    </div>\r\n    \r\n    <div *ngSwitchCase=\"'ALL'\">\r\n      <div class=\"category pl-0 mb-2\">All—{{ users.friends.length }}</div>\r\n\r\n      <div *ngFor=\"let friend of users.friends\">\r\n        <div class=\"float-right\">\r\n          <button\r\n            [routerLink]=\"'/channels/@me/' + channelService.getDM(friend._id)?._id\"\r\n            matTooltip=\"Message\"\r\n            class=\"round px-0\" mat-button>\r\n            <i class=\"lni lni-bubble\"></i>\r\n          </button>\r\n          <button\r\n            matTooltip=\"Remove Friend\"\r\n            (click)=\"remove(friend._id)\"\r\n            class=\"round px-0 ml-2\" mat-button><i class=\"lni lni-close\"></i></button>\r\n        </div>\r\n        <member-username [user]=\"users.getCached(friend._id)\"></member-username>\r\n      </div>\r\n\r\n      <div\r\n        *ngIf=\"users.friends.length <= 0\"\r\n        class=\"text-muted\">\r\n        <i class=\"fas fa-info-circle mr-2\"></i>\r\n        <span>No friends here yet.</span>\r\n      </div>  \r\n    </div>\r\n     \r\n    <div *ngSwitchCase=\"'PENDING'\">\r\n      <div class=\"category pl-0 mb-2\">Pending—{{ users.friendRequests.length }}</div>\r\n\r\n      <div *ngFor=\"let friend of users.friendRequests\">\r\n        <div class=\"float-right\">\r\n          <button\r\n            *ngIf=\"!isOutgoing(friend)\"\r\n            (click)=\"add(friend.username)\"\r\n            class=\"round bg-success px-0\" mat-button>\r\n            <i class=\"lni lni-checkmark-circle\" aria-hidden=\"true\"></i>\r\n          </button>\r\n\r\n          <button\r\n            (click)=\"remove(friend._id)\"\r\n            class=\"round px-0 ml-2\" mat-button>\r\n            <i class=\"lni lni-close\"></i>\r\n          </button>\r\n        </div>\r\n        \r\n        <span class=\"badge badge-secondary\">{{ isOutgoing(friend) ? 'OUTGOING' : 'INCOMING' }}</span>\r\n        <member-username\r\n          [user]=\"friend\"\r\n          [statusOverride]=\"isOutgoing(friend) ? 'Outgoing Friend Request' : 'Incoming Friend Request'\"></member-username>\r\n      </div>\r\n        \r\n      <div\r\n        *ngIf=\"users.friendRequests.length <= 0\"\r\n        class=\"text-muted\">\r\n        <i class=\"fas fa-info-circle mr-2\"></i>\r\n        <span>No friend requests sent.</span>\r\n      </div>\r\n    </div>\r\n       \r\n    <div *ngSwitchCase=\"'BLOCKED'\">\r\n      <div class=\"category pl-0 mb-2\">Blocked—{{ blockedUsers.length }}</div>\r\n\r\n      <div *ngFor=\"let user of blockedUsers\">\r\n        <div class=\"float-right\">\r\n          <i (click)=\"users.unblock(user._id)\"\r\n            matTooltip=\"Unblock\"\r\n            class=\"cursor-pointer lni lni-close\"></i>\r\n        </div>\r\n        <member-username [user]=\"user\"></member-username>\r\n      </div>\r\n\r\n      <div\r\n        *ngIf=\"blockedUsers.length <= 0\"\r\n        class=\"text-muted\">\r\n        <i class=\"fas fa-info-circle mr-2\"></i>\r\n        <span>No blocked users.</span>\r\n      </div>      \r\n    </div>\r\n  </div>\r\n</div>","import { Component, Input } from '@angular/core';\nimport { ChannelService } from 'src/app/services/channel.service';\nimport { UserService } from 'src/app/services/user.service';\nimport { WSService } from 'src/app/services/ws.service';\nimport { Lean } from 'src/app/types/entity-types';\n\n@Component({\n  selector: 'friends-list',\n  templateUrl: './friends-list.component.html',\n  styleUrls: ['./friends-list.component.css']\n})\nexport class FriendsListComponent {\n  @Input() public tab: TabType;\n\n  public get blockedUsers() {\n    return this.users.self.ignored?.userIds\n      ?.map(id => this.users.getCached(id));\n  }\n  public get onlineFriends() {\n    return this.users.friends.filter(f => f.status !== 'OFFLINE');\n  }\n\n  constructor(\n    public channelService: ChannelService,\n    public users: UserService,\n    private ws: WSService,\n  ) {}\n\n  public async add(username: string) {\n    await this.ws.emitAsync('ADD_FRIEND', { username }, this);\n  }\n  public async remove(friendId: string) {\n    await this.ws.emitAsync('REMOVE_FRIEND', { friendId }, this);\n  }\n\n  public isOutgoing(friend: Lean.User) {\n    return this.users.self.friendRequestIds.includes(friend._id);\n  }\n}\n\nexport type TabType = 'ONLINE' | 'ALL' | 'PENDING' | 'BLOCKED';\n","import { style, state, trigger, animate, transition } from '@angular/animations';\r\n\r\nexport const widthExpandCollapse = trigger('expandCollapse', [\r\n  state('collapsed', style({ width: '0px' })),\r\n  state('expanded', style({ width: '100%' })),\r\n  transition('collapsed <=> expanded', [ animate('300ms ease') ]),\r\n]);\r\n","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Credentials, UserAuthService } from '../../services/user-auth.service';\nimport { PasswordValidators } from './password.validators';\nimport { UsernameValidators } from './username.validators';\nimport { hacker } from 'faker';\nimport { UserService } from '../../services/user.service';\nimport { patterns } from 'src/app/types/entity-types';\nimport { generateUsername } from 'src/app/utils/utils';\n\n@Component({\n  selector: 'sign-up',\n  templateUrl: './sign-up.component.html',\n  styleUrls: ['./sign-up.component.css']\n})\nexport class SignUpComponent {\n  public form = new FormGroup({\n    username: new FormControl(generateUsername(), [\n      Validators.required,\n      Validators.minLength(2),\n      Validators.maxLength(32),\n      Validators.pattern(patterns.username),\n    ], this.usernameValidators.shouldBeUnique.bind(this.usernameValidators)),\n    password: new FormControl('', [\n      Validators.required,\n      Validators.minLength(8),\n      Validators.pattern(patterns.password),\n    ]),\n    confirmPassword: new FormControl('', Validators.required)\n  }, { validators: PasswordValidators.passwordsShouldMatch });\n\n  public get username() { return this.form.get('username'); }\n  public get password() { return this.form.get('password'); }\n  public get confirmPassword() { return this.form.get('confirmPassword'); }\n\n  public get redirect() {\n    return this.route.snapshot.queryParamMap.get('redirect')\n      ?? '/channels/@me';\n  }\n\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private auth: UserAuthService,\n    private usernameValidators: UsernameValidators,\n  ) {}\n\n  public async signUp() {\n    const user: Credentials = this.form.value;\n    if (this.form.invalid) return;\n\n    await this.auth.signUp(user);\n    await this.auth.login(user);\n    await this.router.navigate([this.redirect]);\n  }\n}\n","<navbar></navbar>\n<section class=\"container text-center pb-5\">\n  <div class=\"py-2 mt-5 d-none d-sm-block\"></div>\n\n  <div class=\"text-info mt-5\">\n    <i class=\"fas fa-info-circle text-info\"></i>\n    Max users have been reached for Alpha testing and sign-up may be available in the near future.\n    <br>If you cannot sign-up then this is why.\n  </div>\n\n  <form\n    #f=\"ngForm\"\n    [formGroup]=\"form\"\n    (ngSubmit)=\"signUp()\"\n    class=\"mt-5\">\n    <h2 class=\"display-4 mb-4\">Sign Up</h2>\n    <div class=\"form-group\">\n      <mat-form-field appearance=\"outline\">\n        <mat-label for=\"username\">Username</mat-label>\n        <input formControlName=\"username\"\n          id=\"username\" type=\"text\" autocomplete=\"username\" matInput>\n        <mat-hint *ngIf=\"username.pending\"><i class=\"lni lni-circle-notch fa-spin\"></i> Checking</mat-hint>\n        <mat-error *ngIf=\"username.errors?.required\">Username is required.</mat-error>\n        <mat-error *ngIf=\"username.errors?.minlength\">Username should be minimum {{ username.errors.minlength.requiredLength }} characters.</mat-error>\n        <mat-error *ngIf=\"username.errors?.shouldBeUnique\">Username is already taken.</mat-error>\n        <mat-error *ngIf=\"username.errors?.pattern\">Username should follow the <a routerLink=\"/docs/usernames\">username rules</a>.</mat-error>\n      </mat-form-field>\n    </div>\n\n    <div class=\"form-group\">\n      <mat-form-field appearance=\"outline\">\n        <mat-label for=\"password\">Password</mat-label>\n        <input formControlName=\"password\"\n          id=\"password\" type=\"password\" autocomplete=\"new-password\" matInput>\n        <mat-hint>Minimum 8 characters.</mat-hint>\n        <mat-error *ngIf=\"password.errors?.required\">Password is required.</mat-error>\n        <mat-error *ngIf=\"password.errors?.minlength\">Password should be minimum {{ password.errors.minlength.requiredLength }} characters.</mat-error>\n        <mat-error *ngIf=\"password.errors?.pattern?.requiredPattern === '/(?=.*[a-z])/gm'\">Password should include lowercase characters.</mat-error>\n        <mat-error *ngIf=\"password.errors?.pattern?.requiredPattern === '/(?=.*[A-Z])/gm'\">Password should include uppercase characters.</mat-error>\n        <mat-error *ngIf=\"password.errors?.pattern?.requiredPattern === '/(?=.*[0-9])/gm'\">Password should include numbers.</mat-error>\n        <mat-error *ngIf=\"password.errors?.pattern?.requiredPattern === '/(?=.*[!@#$%^&*])/gm'\">Password should include symbols.</mat-error>\n      </mat-form-field>\n    </div>\n\n    <div class=\"form-group\">\n      <mat-form-field appearance=\"outline\">\n        <mat-label for=\"confirmPassword\">Confirm Password</mat-label>\n        <input formControlName=\"confirmPassword\"\n          id=\"confirmPassword\" type=\"password\"  autocomplete=\"new-password\" matInput>\n        <mat-hint>Repeat password.</mat-hint>\n        <mat-error *ngIf=\"confirmPassword.errors?.required\">Confirm Password is required.</mat-error>\n      </mat-form-field>\n    </div>\n\n    <div class=\"form-group\">\n      <label for=\"agreed\"></label>\n      <mat-checkbox id=\"agreed\" class=\"mr-2\" #agreed></mat-checkbox>\n      <span>I agree to the <a href=\"https://docs.accord.app/legal/alpha\">Alpha Terms</a>, <a routerLink=\"/terms\">TOS</a>, and <a routerLink=\"/privacy\">privacy policy</a>.</span>\n    </div>\n\n    <div\n      *ngIf=\"form.errors\"\n      class=\"mb-4\">\n      <span\n        *ngIf=\"form.get('confirmPassword').dirty && form.errors?.passwordMismatch\"\n        class=\"text-warning rounded alert border-warning\">Passwords should match.</span>\n    </div>\n\n    <button\n      [disabled]=\"!agreed.checked\"\n      class=\"bg-primary text-center\"\n      type=\"submit\"\n      mat-button>Sign Up</button>\n  </form>\n</section>","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { getConfig } from 'src/app/config';\nimport { Lean } from 'src/app/types/entity-types';\n\n@Component({\n  selector: 'app-guild-navbar',\n  templateUrl: './guild-navbar.component.html',\n  styleUrls: ['./guild-navbar.component.css'],\n})\nexport class GuildNavbarComponent {\n  @Input() public activeChannel: Lean.Channel;\n  @Input() public guild: Lean.Guild;\n  @Output() public toggleMemberList = new EventEmitter();\n  \n  public get memberIcon() {\n    return (getConfig('memberListExpanded'))\n      ? 'lni-users'\n      : 'lni-users text-muted';\n  }\n}\n","<dashboard-navbar *ngIf=\"guild\">\n  <strong>{{ guild.name }}</strong>\n  \n  <span *ngIf=\"activeChannel\">\n    <i class=\"lni lni-chevron-right mx-2\"></i>\n    <i class=\"fas fa-hashtag text-muted pr-1\"></i>\n    <strong>{{ activeChannel.name }}</strong>\n  </span>\n\n  <div class=\"float-right\">\n    <i (click)=\"toggleMemberList.emit()\"\n      matTooltip=\"Toggle Members\"\n      class=\"lni cursor-pointer\"\n      [class]=\"memberIcon\"></i>\n  </div>\n</dashboard-navbar>","import { Component, ElementRef, Input, OnInit, ViewChild } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatMenu, MatMenuTrigger } from '@angular/material/menu';\r\nimport { toHTML } from 'discord-markdown';\r\nimport { textEmoji } from 'markdown-to-text-emoji';\r\nimport { ProfileComponent } from 'src/app/dialog/profile/profile.component';\r\nimport { DialogService } from 'src/app/services/dialog.service';\r\nimport { GuildService } from 'src/app/services/guild.service';\r\nimport { LogService } from 'src/app/services/log.service';\r\nimport { PermissionsService } from 'src/app/services/permissions.service';\r\nimport { UserService } from 'src/app/services/user.service';\r\nimport { WSService } from 'src/app/services/ws.service';\r\nimport { Lean } from 'src/app/types/entity-types';\r\n\r\n@Component({\r\n  selector: 'message',\r\n  templateUrl: './message.component.html',\r\n  styleUrls: ['./message.component.css']\r\n})\r\nexport class MessageComponent implements OnInit {\r\n  @Input() public message: Lean.Message;\r\n  @Input() public isExtra = false;\r\n  @Input() public guild: Lean.Guild;\r\n  @Input() public member: Lean.GuildMember;\r\n  @Input() public avatarURL: string;\r\n\r\n  @ViewChild('newMessage')\r\n  public newMessage: ElementRef;\r\n  @ViewChild('contextMenu')\r\n  public contextMenu: MatMenu;\r\n\r\n  public embed: MessageEmbed;\r\n  public contextMenuPosition = { x: '0px', y: '0px' };\r\n  public author: Lean.User;\r\n\r\n  private _isEditing = false;\r\n  public get isEditing() {\r\n    return this._isEditing;\r\n  }\r\n  public set isEditing(value: boolean) {\r\n    this._isEditing = value;\r\n    const div: HTMLDivElement = this.newMessage.nativeElement;\r\n    if (value) div.focus();\r\n  }\r\n  \r\n  public get roleColor(): string {\r\n    if (!this.guild) return;\r\n\r\n    const roleId = this.member?.roleIds[this.member?.roleIds.length - 1];\r\n    return this.guild.roles.find(r => r._id == roleId)?.color;\r\n  }\r\n  \r\n  public get timeString() {\r\n    const date = new Date(this.message.createdAt);\r\n    return `${date.toString().slice(16, 21)}`;\r\n  }\r\n\r\n  public get isMentioned() {\r\n    return document.querySelector(`#message-${this.message._id} .self-mention`);\r\n  }\r\n\r\n  public get updatedAt() {\r\n    return new Date(this.message.updatedAt)?.toLocaleString();\r\n  }\r\n\r\n  public get processed() {\r\n    if (this.isEditing) return this.message.content;\r\n\r\n    const getRole = (id: string) => this.guild?.roles.find(r => r._id === id);\r\n    const getUser = (id: string) => this.userService.getAsync(id);\r\n\r\n    const getMention = (html: string, condition: boolean) => {\r\n      return (condition)\r\n        ? `<span matTooltip=\"test\" class=\"self-mention\">${html}</span>`\r\n        : html;\r\n    };\r\n\r\n    const recipientHasRole = this.guildService\r\n      .getMember(this.guild?._id, this.userService.self._id)?.roleIds\r\n      .some(id => this.guild?.roles.some(r => r._id === id));\r\n  \r\n    return toHTML(textEmoji(this.message.content), {\r\n      discordCallback: {\r\n        user: async (node) => getMention(\r\n          `@${(await getUser(node.id))?.username ?? `Invalid User`}`,\r\n          this.userService.self._id === node.id),\r\n\r\n        role: (node) => getMention(\r\n          `@${getRole(node.id)?.name ?? `Invalid Role`}`,\r\n          recipientHasRole),\r\n\r\n        everyone: (node) => getMention(`@everyone`, true),\r\n        here: (node) => getMention(`@here`, this.userService.self.status !== 'OFFLINE')\r\n      }\r\n    });\r\n  }\r\n\r\n  public get selfIsAuthor() {\r\n    return this.author?._id === this.userService.self._id;\r\n  }\r\n\r\n  public get canManage() {\r\n    return this.selfIsAuthor\r\n      || (this.guild && this.perms.can(this.guild._id, 'MANAGE_MESSAGES'));\r\n  }\r\n\r\n  constructor(\r\n    private log: LogService,\r\n    private guildService: GuildService,\r\n    public userService: UserService,\r\n    private ws: WSService,\r\n    private perms: PermissionsService,\r\n    public dialog: DialogService,\r\n  ) {}\r\n\r\n  public async ngOnInit() {\r\n    this.author = await this.userService.getAsync(this.message.authorId);\r\n  }\r\n\r\n  public removeEmbed() {\r\n    this.message.embed = null;\r\n    \r\n    this.ws.emit('MESSAGE_UPDATE', {\r\n      messageId: this.message._id,\r\n      partialMessage: this.message,\r\n      withEmbed: false\r\n    }, this);\r\n  }\r\n\r\n  public delete() {\r\n    this.ws.emit('MESSAGE_DELETE', { messageId: this.message._id }, this);\r\n\r\n    document\r\n      .querySelector(`#message${this.message._id}`)\r\n      ?.remove();\r\n\r\n    this.ws.on('MESSAGE_DELETE', async ({ messageId }) => {\r\n      if (messageId === this.message._id)\r\n        await this.log.success();\r\n    }, this);\r\n  }\r\n\r\n  public async edit(value: string, $event?: KeyboardEvent) {\r\n    if ($event && ($event.shiftKey || $event.code !== 'Enter')) return;\r\n\r\n    this.isEditing = false;\r\n    this.message.content = value;\r\n    this.message.updatedAt = new Date();\r\n\r\n    this.ws.emit('MESSAGE_UPDATE', {\r\n      messageId: this.message._id,\r\n      partialMessage: { content: this.message.content },\r\n      withEmbed: Boolean(this.message.embed),\r\n    }, this);\r\n\r\n    this.ws.on('MESSAGE_UPDATE', async ({ message }) => {\r\n      if (message.content === this.message.content)\r\n        await this.log.success();\r\n    }, this);\r\n  }\r\n\r\n  public async toggleEditing($event?: KeyboardEvent) {\r\n    (this.isEditing)\r\n      ? await this.edit(this.newMessage.nativeElement.innerText, $event)\r\n      : this.isEditing = true;\r\n  }\r\n\r\n  public openMenu(event: MouseEvent, menuTrigger: MatMenuTrigger) {\r\n    event.preventDefault();\r\n    this.contextMenuPosition.x = event.clientX + 'px';\r\n    this.contextMenuPosition.y = event.clientY + 'px';\r\n    menuTrigger.menu.focusFirstItem('mouse');\r\n    menuTrigger.openMenu();\r\n  }\r\n}\r\n\r\ninterface MessageEmbed {\r\n  title: string;\r\n  description: string;\r\n  image: string;\r\n  url: string;\r\n}\r\n","<div\r\n  *ngIf=\"author\"\r\n  #menuTrigger=\"matMenuTrigger\"\r\n  [matMenuTriggerFor]=\"contextMenu\"\r\n  (contextmenu)=\"openMenu($event, menuTrigger)\">\r\n  <div\r\n    *ngIf=\"!isExtra; else extraMessage\"\r\n    [id]=\"'message-' + message._id\"\r\n    (click)=\"$event.stopPropagation()\">\r\n    <div\r\n      class=\"message-group\"\r\n      [ngClass]=\"{ 'd-mention': isMentioned }\">\r\n      <app-avatar-url\r\n        (click)=\"dialog.profile({ user: author })\"\r\n        matTooltip=\"View Profile\"\r\n        size=\"40px\"\r\n        [user]=\"(avatarURL) ? { username: author.username, avatarURL: avatarURL } : author\"></app-avatar-url>\r\n      <div class=\"comment\">\r\n        <div class=\"message first\">\r\n          <h2 style=\"line-height: 16px;\">\r\n            <span class=\"username-wrapper v-btm\">\r\n              <strong\r\n                [style.color]=\"roleColor\"\r\n                class=\"username\">{{ author.username }}</strong>\r\n              <div *ngIf=\"author.bot && author.username !== '2PG'\"\r\n                class=\"username-badge badge badge-secondary ml-1\">BOT</div>\r\n              <div *ngIf=\"author.bot && author.username === '2PG'\"\r\n                class=\"username-badge badge badge-secondary ml-1\">SYSTEM</div>\r\n            </span>\r\n            <span class=\"highlight-separator\"> - </span>\r\n            <span class=\"timestamp\">{{ message.createdAt | timestamp }}</span>\r\n            <ng-container *ngTemplateOutlet=\"edited\"></ng-container>\r\n          </h2>\r\n\r\n          <ng-container *ngTemplateOutlet=\"messageContent\"></ng-container>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<ng-template #extraMessage>\r\n  <div\r\n    [id]=\"'message-' + message._id\"\r\n    class=\"extra-message\"\r\n    [ngClass]=\"{ 'd-mention': isMentioned }\"\r\n    (click)=\"$event.stopPropagation()\">\r\n    <span class=\"content\">\r\n      <span\r\n        class=\"timestamp no-select\"\r\n        [matTooltip]=\"message.createdAt\">\r\n        <span>{{ timeString }}</span>\r\n        <ng-container *ngTemplateOutlet=\"edited\"></ng-container>\r\n      </span>\r\n      <ng-container *ngTemplateOutlet=\"messageContent\"></ng-container>\r\n    </span>\r\n  </div>\r\n</ng-template>\r\n\r\n<ng-template #edited>\r\n  <span\r\n    *ngIf=\"message.updatedAt\"\r\n    [matTooltip]=\"'Edited - ' + updatedAt\"\r\n    class=\"edit-indicator cursor-pointer ml-1\"\r\n    #edited>\r\n    <i class=\"lni lni-pencil-alt text-muted\"></i>\r\n  </span>\r\n</ng-template>\r\n\r\n<ng-template #messageContent>\r\n  <div\r\n    (keydown)=\"toggleEditing($event)\"\r\n    [contentEditable]=\"isEditing && canManage\"\r\n    [innerHtml]=\"processed\"\r\n    class=\"message-text d-inline\"\r\n    #newMessage>\r\n  </div>\r\n\r\n  <message-embed\r\n    (close)=\"removeEmbed()\"\r\n    [canManage]=\"canManage\"\r\n    [message]=\"message\"></message-embed>\r\n</ng-template>\r\n\r\n<mat-menu\r\n  [style.left]=\"contextMenuPosition.x\"\r\n  [style.top]=\"contextMenuPosition.y\"\r\n  #contextMenu>\r\n  <h6 class=\"p-2 text-center overflow-hidden context-content\"\r\n    [innerHTML]=\"processed\"></h6>\r\n\r\n  <div\r\n    *ngIf=\"canManage && author?._id === userService.self._id\">\r\n    <button\r\n      (click)=\"toggleEditing()\"\r\n      mat-menu-item>\r\n      <i class=\"lni lni-pencil-alt text-warning mr-1\"></i>\r\n      <span>{{ (isEditing) ? 'Finish Editing' : 'Edit' }}</span>\r\n    </button>\r\n  </div>\r\n  <div *ngIf=\"canManage\">\r\n    <button\r\n      (click)=\"delete()\"\r\n      mat-menu-item>\r\n      <i class=\"lni lni-close text-danger mr-1\"></i>\r\n      <span>Delete</span>\r\n    </button>\r\n  \r\n    <hr>\r\n  </div>\r\n\r\n  <div (click)=\"$event.stopPropagation()\" class=\"p-2\">\r\n    <i class=\"lni lni-dev\"></i>\r\n    <code> {{ message._id }}</code>\r\n  </div>\r\n</mat-menu>\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from 'src/environments/environment';\r\nimport { UserService } from './user.service';\r\nimport { Lean } from '../types/entity-types';\r\nimport { HTTPWrapper } from './http-wrapper';\r\nimport { WSService } from './ws.service';\r\nimport { array } from '../utils/utils';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class GuildService extends HTTPWrapper<Lean.Guild> {\r\n  protected endpoint = environment.endpoint + '/guilds';\r\n  \r\n  protected _arr: Lean.Guild[] = [];\r\n  public get guilds() {\r\n    return this._arr.filter(array.distinctBy('_id'));\r\n  }\r\n  \r\n  constructor(\r\n    http: HttpClient,\r\n    ws: WSService,\r\n    private userService: UserService,\r\n  ) { super(http, ws); }\r\n\r\n  public getGuildFromChannel(channelId: string): Lean.Guild | undefined {\r\n    return this.guilds\r\n      ?.find(g => g.channels\r\n        .find(c => c._id === channelId));\r\n  }\r\n\r\n  public getSelfMember(guildId: string): Lean.GuildMember {\r\n    return this.getMember(guildId, this.userService.self._id);\r\n  }\r\n\r\n  public getMember(guildId: string, userId: string): Lean.GuildMember {\r\n    const guild = this.getCached(guildId);\r\n    return guild?.members.find(m => m.userId === userId);\r\n  }\r\n  public getMemberInGuild(guildId: string, memberId: string): Lean.GuildMember {\r\n    const guild = this.getCached(guildId);\r\n    return guild?.members.find(m => m._id === memberId);\r\n  }\r\n\r\n  public async ownsGuild(guildId: string, userId: string) {\r\n    const guild = await this.getAsync(guildId);\r\n    return guild.ownerId === userId;\r\n  }\r\n\r\n  public getInvites(guildId: string): Promise<Lean.Invite[]> {\r\n    return this.http.get(`${this.endpoint}/${guildId}/invites`, this.headers).toPromise() as any;\r\n  }\r\n\r\n  public addBot(guildId: string, botId: string): Promise<any> {\r\n    return this.http\r\n      .get(`${this.endpoint}/${guildId}/authorize/user?client_id=${botId}`, this.headers)\r\n      .toPromise() as any;\r\n  }\r\n\r\n  public async leave(guildId: string) {\r\n    const guild = this.getCached(guildId);\r\n    const confirmation = confirm(`Leave ${guild.name}?`);\r\n    if (!confirmation) return;\r\n\r\n    await this.kick(guildId, this.userService.self._id);\r\n  }\r\n\r\n  public async kick(guildId: string, userId: string) {\r\n    const member = this.getMember(guildId, userId);\r\n    await this.ws.emitAsync('GUILD_MEMBER_REMOVE', {\r\n      guildId,\r\n      memberId: member._id,\r\n    }, this);\r\n  }\r\n\r\n  public deleteGuild(guildId: string) {\r\n    return this.ws.emitAsync('GUILD_DELETE', { guildId }, this);\r\n  }\r\n}\r\n","import { Component, ElementRef, Input, OnInit, ViewChild } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { GuildService } from '../services/guild.service';\nimport { LogService } from '../services/log.service';\nimport { PingService } from '../services/ping.service';\nimport { PermissionsService } from '../services/permissions.service';\nimport { SoundService } from '../services/sound.service';\nimport { UserService } from '../services/user.service';\nimport { WSService } from '../services/ws.service';\nimport { MessageService } from '../services/message.service';\nimport { ChannelService } from '../services/channel.service';\nimport { Lean } from '../types/entity-types';\n\n@Component({ template: '' })\nexport class TextBasedChannel implements OnInit {\n  public channel: Lean.Channel;\n  public guild: Lean.Guild;\n  private messageBatchSize = 25;\n  \n  @ViewChild('message')\n  private messageInput: ElementRef;\n  \n  public chatBox = new FormControl();\n  public emojiPickerOpen = false;\n  public ready = false;\n  public messages: Lean.Message[];\n  private lastTypedAt = null;\n\n  public get typingUsernames() {\n    return this.channelService\n      .getTyping(this.channel._id)\n      .map(id => this.userService.getCached(id).username);\n  }\n\n  public get loadedAllMessages() {\n    return this.messages\n      || this.messages.length <= 0\n      || this.messages.length % this.messageBatchSize !== 0;\n  }\n  public get recipient() {\n    return this.channelService.getRecipient(this.channel._id);\n  }\n  public get title() {\n    return (this.channel.type === 'DM')\n      ? `@me + @${this.recipient.username}`\n      : `${this.guild.name} > #${this.channel.name}`;\n  }\n\n  constructor(\n    protected route: ActivatedRoute,\n    protected channelService: ChannelService,\n    protected messageService: MessageService,\n    public guildService: GuildService,\n    protected log: LogService,\n    protected router: Router,\n    public perms: PermissionsService,\n    public pings: PingService,\n    public sounds: SoundService,\n    public userService: UserService,\n    protected ws: WSService,\n  ) {}\n\n  public async ngOnInit() {\n    this.route.paramMap.subscribe(async (paramMap) => {\n      const guildId = paramMap.get('guildId');\n      const channelId = paramMap.get('channelId');\n\n      this.guild = this.guildService.getCached(guildId);\n      this.channel = await this.channelService.getAsync(channelId);\n\n      await this.init();\n    });\n  }\n\n  private async init() {\n    if (this.channel.type === 'VOICE')\n      return this.router.navigate(['..']);\n\n    document.title = this.title;\n      \n    this.pings.markAsRead(this.channel._id);\n    this.messages = await this.messageService.getAllAsync(this.channel._id);    \n\n    this.ws.on('MESSAGE_CREATE', () => this.scrollToMessage(50), this);\n    \n    this.ready = true;\n    this.scrollToMessage();\n  }\n\n  private scrollToMessage(timeout = 100) {\n    setTimeout(() => {\n      try {\n        const messages = document.querySelector('.messages');\n        const height = messages.scrollHeight;\n        messages.scrollTop = height;        \n      } catch {}\n    }, timeout);\n  }\n\n  public async chat(content: string) {\n    if (!content.trim()) return;\n    \n    const firstNewLines = /\\s+/;\n    const lastNewLines = /\\s+$/;\n\n    content = content\n      .replace(firstNewLines, '')\n      .replace(lastNewLines, '');\n    this.messageInput.nativeElement.value = '';\n\n    this.ws.emit('MESSAGE_CREATE', {\n      channelId: this.channel._id,\n      partialMessage: { content },\n    }, this);\n    await this.sounds.message();\n\n    this.channelService.stopTyping(this.channel._id, this.userService.self._id);\n  }\n\n  public async loadMoreMessages() {\n    if (this.loadedAllMessages) return;\n\n    await this.messageService\n      .overrideFetchAll(this.channel._id, {\n        start: this.messages.length,\n        end: this.messages.length + this.messageBatchSize\n      });\n\n    this.scrollToMessage();\n  }\n  \n  public shouldCombine(index: number) {\n    const lastIndex = Math.max(0, index - 1);\n    const lastMessage = (index) ? this.messages[lastIndex] : null;\n    if (!lastMessage) return false;\n\n    const message = this.messages[index];\n    const msDifference = new Date(message.createdAt).getTime() - new Date(lastMessage?.createdAt).getTime();    \n    const minsAgo = msDifference / 60 / 1000;    \n\n    const maxTimeDifference = 5;\n    return message.authorId === lastMessage?.authorId && minsAgo < maxTimeDifference;\n  }\n\n  public async emitTyping() { \n    const sinceLastTyped = new Date().getTime() - this.lastTypedAt?.getTime();      \n    if (sinceLastTyped && sinceLastTyped < 5 * 1000) return; \n    \n    this.lastTypedAt = new Date();\n    await this.ws.emitAsync('TYPING_START', { channelId: this.channel._id }, this);\n  }\n\n  // emoji picker\n  public addEmoji({ emoji }) {\n    this.messageInput.nativeElement.value += emoji.native;\n  }\n\n  public onClick({ path }) {\n    const pickerClicked = path\n      .some(n => n\n        && n.nodeName === 'EMOJI-MART'\n        || n.classList?.contains('emoji-icon'));  \n\n    this.emojiPickerOpen = pickerClicked;\n  }\n  \n  public identifyMessage(index: number, item: Lean.Message) {\n    return item._id;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Args } from 'src/app/types/ws-types';\nimport { ChannelService } from '../channel.service';\nimport { MessageService } from '../message.service';\nimport { SoundService } from '../sound.service';\nimport { UserService } from '../user.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ChannelEventService {\n  constructor(\n    private sounds: SoundService,\n    private channelService: ChannelService,\n    private messageService: MessageService,\n  ) {}\n\n  public async ping(args: Args.Ping) {\n    await this.sounds.ping();\n  }\n\n  public async addMessage({ message }: Args.MessageCreate) { \n    this.messageService.overrideAdd([message]);\n  }\n\n  public deleteMessage({ channelId, messageId }: Args.MessageDelete) {\n    const messages = this.messageService.getAllCached(channelId);\n    const index = messages.findIndex(m => m._id === messageId);\n\n    messages.splice(index, 1);\n  }\n\n  public updateMessage({ message }: Args.MessageUpdate) {\n    const messages = this.messageService.getAllCached(message.channelId);\n    let index = messages.findIndex(m => m._id === message._id);\n\n    messages[index] = message;\n  }\n\n  public startTyping({ channelId, userId }: Args.TypingStart) {    \n    this.channelService.startTyping(channelId, userId);\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'miniDate'\r\n})\r\nexport class MiniDatePipe implements PipeTransform {\r\n  transform(dateString: string, ...args: unknown[]): unknown {\r\n    const date = new Date(dateString);\r\n    return `${date.getDate()}/${(date.getMonth() + 1)}`;    \r\n  }\r\n}\r\n","import { AfterViewInit, Component, ElementRef, Input, ViewChild } from '@angular/core';\nimport { DialogService } from 'src/app/services/dialog.service';\nimport { GuildService } from 'src/app/services/guild.service';\nimport { UserService } from 'src/app/services/user.service';\nimport { Lean } from 'src/app/types/entity-types';\nimport { environment } from 'src/environments/environment';\n\n@Component({\n  selector: 'app-guild-icon',\n  templateUrl: './guild-icon.component.html',\n  styleUrls: ['./guild-icon.component.css']\n})\nexport class GuildIconComponent implements AfterViewInit {\n  @Input() public guild: Lean.Guild;\n  @Input() public size = '52px';\n\n  @ViewChild('img')\n  private img: ElementRef;\n\n  private unknownImageURL = `${environment.endpoint}/avatars/unknown.png`;\n\n  constructor(\n    public dialogs: DialogService,\n    public guildService: GuildService,\n    public userService: UserService,\n  ) {}\n\n  public ngAfterViewInit() {\n    const image = this.img?.nativeElement as HTMLImageElement;\n    if (image)\n      image.onerror = () => image.src = this.unknownImageURL; \n  }\n}\n","<div\n  class=\"guild-icon\"\n  (contextmenu)=\"dialogs.openMenu($event, menuTrigger)\"\n  [matMenuTriggerFor]=\"contextMenu\"\n  routerLinkActive=\"active\"\n  #menuTrigger=\"matMenuTrigger\">\n  <div\n    (click)=\"$event.stopPropagation()\"\n    [routerLink]=\"'/channels/' + guild._id\">\n    <img\n      *ngIf=\"guild.iconURL\"\n      [src]=\"guild.iconURL\"\n      [alt]=\"guild.name\"\n      [style.width]=\"size\"\n      [style.height]=\"size\"\n      #img>\n    <span\n      *ngIf=\"!guild.iconURL\"\n      class=\"d-flex flex-column justify-content-center\"\n      [style.width]=\"size\"\n      [style.height]=\"size\">\n      <span>{{ guild.nameAcronym }}</span>\n    </span>\n  </div>\n</div>\n\n<mat-menu\n  matMenuContent\n  #contextMenu>\n  <h6 class=\"p-2 text-center\">{{ guild.name }}</h6>\n\n  <div *ngIf=\"guild.ownerId !== userService.self._id\">\n    <button\n      (click)=\"guildService.leave(guild._id)\"\n      class=\"text-danger p-2\"\n      mat-menu-item>\n      <i class=\"lni lni-exit\"></i>\n      <span> Leave</span>\n    </button>\n    \n    <hr>\n  </div>\n\n  <div (click)=\"$event.stopPropagation()\" class=\"p-2\">\n    <i class=\"lni lni-dev\"></i>\n    <code> {{ guild._id }}</code>\n  </div>\n</mat-menu>","import { style, state, trigger, animate, transition } from '@angular/animations';\r\n\r\nexport const expandCollapse = trigger('expandCollapse', [\r\n  state('collapsed', style({\r\n    height: 0,\r\n    padding: '0 20px'\r\n  })),\r\n  state('expanded', style({ height: '*' })),\r\n  transition('collapsed <=> expanded', [ animate('200ms ease') ]),\r\n]);","import { Component, Inject, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { Router } from '@angular/router';\nimport { GuildService } from 'src/app/services/guild.service';\nimport { LogService } from 'src/app/services/log.service';\nimport { WSService } from 'src/app/services/ws.service';\nimport { Lean, patterns } from 'src/app/types/entity-types';\n\n@Component({\n  selector: 'app-create-channel',\n  templateUrl: './create-channel.component.html',\n  styleUrls: ['./create-channel.component.css']\n})\nexport class CreateChannelComponent {\n  // TODO: use different form for voice channel\n  public form = new FormGroup({\n    name: new FormControl('chat', [\n      Validators.pattern(patterns.textChannelName),\n      Validators.required,\n    ]),\n    type: new FormControl('TEXT'),\n  });\n\n  public processing = false;\n\n  constructor(\n    public dialogRef: MatDialogRef<CreateChannelComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: {\n      guild: Lean.Guild,\n    },\n    private ws: WSService,\n  ) {}\n\n  public async create() {\n    if (this.form.invalid) return;\n\n    await this.ws.emitAsync('CHANNEL_CREATE', {\n      partialChannel: this.form.value,\n      guildId: this.data.guild._id\n    }, this);\n\n    this.dialogRef.close();\n  }\n}\n","<h1 class=\"text-center\" mat-dialog-title>Create Channel</h1>\n\n<div class=\"text-center\" mat-dialog-content>\n  <form\n    (keyup.enter)=\"create()\"\n    #f=\"ngForm\"\n    [formGroup]=\"form\">\n    <mat-form-field appearance=\"outline\">\n      <mat-label>Name</mat-label>\n      <input formControlName=\"name\" type=\"text\" matInput #nameInput>\n      <mat-error *ngIf=\"form.get('name').invalid\">Required, and should be less than 32 characters.</mat-error>\n    </mat-form-field>\n\n    <mat-form-field appearance=\"outline\">\n      <mat-label>Type</mat-label>\n      <mat-select\n        formControlName=\"type\"\n        (select)=\"nameInput.setValue('')\">\n        <mat-option value=\"TEXT\" selected>Text</mat-option>\n        <!-- <mat-option value=\"VOICE\">Voice</mat-option> -->\n      </mat-select>\n    </mat-form-field>\n  </form>\n</div>\n\n<div class=\"d-flex justify-content-center\" mat-dialog-actions>\n  <button\n    id=\"createChannelButton\"\n    (click)=\"create()\"\n    class=\"btn btn-success mt-2\"\n    [disabled]=\"processing\">Create</button>\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  docsURL: 'https://docs.accord.app',\r\n  production: false,\r\n  endpoint: 'http://localhost:3000/api/v1',\r\n  rootEndpoint: 'http://localhost:3000',\r\n  githubURL: 'https://github.com/accorddotapp',\r\n  version: 'v0.1.8a',\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { Component, EventEmitter, Input,  Output } from '@angular/core';\n\n@Component({\n  selector: 'message-embed',\n  templateUrl: './message-embed.component.html',\n  styleUrls: ['./message-embed.component.css']\n})\nexport class MessageEmbedComponent {\n  @Input() message;\n  @Output() close = new EventEmitter<string>();\n  @Input() canManage;\n}\n","<div class=\"embed-wrapper\" *ngIf=\"message.embed\">\n    <span *ngIf=\"canManage\"\n        (click)=\"close.emit(message._id)\"\n        class=\"hide-embed text-muted cursor-pointer\">×</span>\n    <div class=\"embed\">\n      <a class=\"title\" [href]=\"message.embed.url\">{{ message.embed.title || 'Untitled' }}</a>\n      <div *ngIf=\"message.embed.description\"\n          class=\"description\">{{ message.embed.description }}</div>\n      <img *ngIf=\"message.embed.image\"\n          [src]=\"message.embed.image\" onerror=\"this.onerror=null;this.hidden = true\">\n    </div>\n</div>","import { Injectable } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Args } from 'src/app/types/ws-types';\nimport { ChannelService } from '../channel.service';\nimport { GuildService } from '../guild.service';\nimport { UserService } from '../user.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GuildEventService {\n  constructor(\n    private guildService: GuildService,\n    private userService: UserService,\n  ) {}\n\n  public createRole({ guildId, role }: Args.GuildRoleCreate) {\n    const guild = this.guildService.getCached(guildId);\n    guild.roles.push(role);\n  }\n\n  public deleteRole({ guildId, roleId }: Args.GuildRoleDelete) {\n    const guild = this.guildService.getCached(guildId);\n    const index = guild.roles.findIndex(r => r._id === roleId);\n    guild.roles.splice(index, 1);\n  }\n\n  public updateRole({ guildId, roleId, partialRole }: Args.GuildRoleUpdate) {\n    const guild = this.guildService.getCached(guildId);\n    const index = guild.roles.findIndex(r => r._id === roleId);\n    guild.roles[index] = {\n      ...guild.roles[index],\n      ...partialRole,\n    };\n    \n  }\n\n  public async addMember({ member }: Args.GuildMemberAdd) {\n    const newUser = await this.userService.getAsync(member.userId);\n    this.userService.add(newUser);\n\n    const guild = this.guildService.getCached(member.guildId);\n    guild.members.push(member);\n  }\n\n  public async removeMember({ memberId, guildId }: Args.GuildMemberRemove) {\n    const guild = this.guildService.getCached(guildId);\n    const index = guild.members.findIndex(m => m._id === memberId);\n\n    guild.members.splice(index, 1);\n  }\n  \n  public updateMember({ guildId, partialMember, memberId }: Args.GuildMemberUpdate) {\n    const guild = this.guildService.getCached(guildId);\n    const oldMember = this.guildService.getMemberInGuild(guildId, memberId);\n    const index = guild.members.findIndex(m => m._id === memberId);    \n\n    return guild.members[index] = { ...oldMember, ...partialMember };\n  }\n\n  public addChannel({ channel }: Args.ChannelCreate) {\n    const guild = this.guildService.getCached(channel.guildId);\n    guild.channels.push(channel);\n  }\n  public deleteChannel({ guildId, channelId }: Args.ChannelDelete) {\n    const guild = this.guildService.getCached(guildId);\n    const index = guild.channels.findIndex(c => c._id === channelId);\n\n    guild.channels.splice(index, 1);\n  }\n\n  public update({ guildId, partialGuild }: Args.GuildUpdate) {\n    this.guildService.upsert(guildId, partialGuild);\n  }\n  \n  public async delete({ guildId }: Args.GuildDelete | Args.GuildLeave) {\n    while (this.guildService.getCached(guildId))\n      this.guildService.delete(guildId);    \n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { PasswordValidators } from 'src/app/authentication/sign-up/password.validators';\nimport { UsernameValidators } from 'src/app/authentication/sign-up/username.validators';\nimport { LogService } from 'src/app/services/log.service';\nimport { UserAuthService } from 'src/app/services/user-auth.service';\nimport { UserService } from 'src/app/services/user.service';\nimport { patterns, UserTypes } from 'src/app/types/entity-types';\n\n@Component({\n  selector: 'app-user-account',\n  templateUrl: './user-account.component.html',\n  styleUrls: ['./user-account.component.css']\n})\nexport class UserAccountComponent implements OnInit {\n  public passwordForm = new FormGroup({\n    oldPassword: new FormControl('', [ Validators.required ]),\n    newPassword: new FormControl('', [\n      Validators.pattern(patterns.password),\n      Validators.required,\n    ]),\n  }, [ PasswordValidators.newPasswordShouldNotMatch ]);\n  public processingEmail = false;\n  public processingPassword = false;\n  public form: FormGroup;\n\n  constructor(\n    public userService: UserService,\n    private usernameValidators: UsernameValidators,\n    private userAuthService: UserAuthService,\n    private log: LogService,\n  ) {}\n  \n  public buildForm(user: UserTypes.Self): FormGroup | Promise<FormGroup> {\n    return new FormGroup({\n      email: new FormControl(user.email, [\n        Validators.pattern(patterns.email),\n      ], [ this.usernameValidators.emailInUse.bind(this.usernameValidators) ]),\n    });\n  }\n\n  public async ngOnInit() {\n    await this.userService.init();\n\n    this.form = await this.buildForm(this.userService.self);\n  }\n\n  public async changeEmail() {\n    try {      \n      if (this.form.invalid) return;      \n  \n      const email = this.form.get('email').value;\n      this.processingEmail = await this.userAuthService.sendVerifyEmail(email);\n      await this.log.success('Email sent.');\n    } catch {\n      this.passwordForm.setErrors({ invalidEmail: true }); \n      await this.log.error('Failed to send email.');     \n    }\n  }\n\n  public async changePassword() {\n    try {      \n      if (this.passwordForm.invalid) return;\n      if (!this.userService.self.verified)\n        throw new TypeError('A verified email is needed to reset password.');\n  \n      const email = this.form.get('email').value;\n      const oldPassword = this.passwordForm.get('oldPassword').value;\n      const newPassword = this.passwordForm.get('newPassword').value;\n      this.processingPassword = await this.userAuthService\n        .changePassword(email, oldPassword, newPassword);\n\n      await this.log.success('Password succesfully changed.');\n    } catch (error) {\n      await this.log.error(error.message);\n      this.passwordForm.setErrors({ oldPasswordInvalid: true });\n    }\n  }\n}\n","<app-settings-sidebar\n  *ngIf=\"userService.self\"\n  tabType=\"user\">\n  <div class=\"content\">\n    <h5 class=\"mb-4\">Your Account</h5>\n    <div class=\"row\">\n      <div class=\"col-lg-6 col-md-12\">\n        <form\n          *ngIf=\"form\"\n          #f=\"ngForm\"\n          (submit)=\"changeEmail()\"\n          [formGroup]=\"form\">\n          <h6>Change Email</h6>\n          <mat-form-field appearance=\"outline\">\n            <mat-label>Email</mat-label>\n            <input formControlName=\"email\" type=\"email\" matInput>\n            <mat-hint *ngIf=\"form.get('email').pending\"><i class=\"lni lni-circle-notch fa-spin\"></i> Checking</mat-hint>\n            <mat-error *ngIf=\"form.get('email').errors?.emailInUse\">Email is already in use.</mat-error>\n            <mat-error *ngIf=\"form.get('email').errors?.pattern\">Email must be valid.</mat-error>\n          </mat-form-field>\n\n          <button\n            [disabled]=\"processingEmail\"\n            matTooltip=\"Send\"\n            class=\"ml-2 bg-success\"\n            mat-button><i class=\"lni lni-envelope text-dark\"></i></button>\n        </form>\n\n        <div>\n          <span\n            *ngIf=\"userService.self.verified\"\n            class=\"border border-success rounded p-3\">\n            <i class=\"lni lni-checkmark-circle text-success\"></i>\n            <span> Your account is verified by email.</span>\n          </span>\n          <span\n            *ngIf=\"!userService.self.verified\"\n            class=\"border border-warning rounded p-3\">\n            <i class=\"lni lni-close text-danger\"></i>\n            <span> Your email is not verified.</span>\n          </span>\n        </div>\n      </div>\n\n      <div class=\"col-lg-6 col-md-12\">\n        <form\n          #f=\"ngForm\"\n          (submit)=\"changePassword()\"\n          [formGroup]=\"passwordForm\">\n          <h6>Change Password</h6>\n          <mat-form-field\n            class=\"mr-2\"\n            appearance=\"outline\">\n            <mat-label>Old Password</mat-label>\n            <mat-error *ngIf=\"passwordForm.get('oldPassword').errors?.required\">Old password is required.</mat-error>\n            <input formControlName=\"oldPassword\" type=\"password\" matInput>\n          </mat-form-field>\n\n          <mat-form-field appearance=\"outline\">\n            <mat-label>New Password</mat-label>\n            <input formControlName=\"newPassword\" type=\"password\" matInput>\n            <mat-error *ngIf=\"passwordForm.get('newPassword').errors?.required\">New password is required.</mat-error>\n            <mat-error *ngIf=\"passwordForm.get('newPassword').errors?.pattern\">New password must be valid.</mat-error>\n          </mat-form-field>\n          \n          <button\n            [disabled]=\"processingPassword\"\n            class=\"bg-warning float-right mt-3 mr-3\"\n            mat-button>Change</button>\n\n          <mat-error\n            *ngIf=\"passwordForm.get('newPassword').dirty\n              && passwordForm.errors?.passwordMatch\"\n            class=\"mb-2\">New password should not equal old password.</mat-error>\n        </form>\n      </div>\n    </div>\n  </div>\n</app-settings-sidebar>\n","import { Injectable } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatMenuTrigger } from '@angular/material/menu';\nimport { AddFriendComponent } from '../dialog/add-friend/add-friend.component';\nimport { CreateChannelComponent } from '../dialog/create-channel/create-channel.component';\nimport { CreateGuildComponent } from '../dialog/create-guild/create-guild.component';\nimport { CreateInviteComponent } from '../dialog/create-invite/create-invite.component';\nimport { ProfileComponent } from '../dialog/profile/profile.component';\nimport { Lean } from '../types/entity-types';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DialogService {\n  constructor(private dialog: MatDialog) {}\n\n  public openMenu(event: MouseEvent, menuTrigger: MatMenuTrigger) {\n    event.preventDefault();\n    menuTrigger.openMenu();\n  }\n\n  public createInvite(data: { guild: Lean.Guild }) {\n    this.dialog.open(CreateInviteComponent, { width: '500px', data });\n  }\n\n  public createChannel(data: { guild: Lean.Guild }) {\n    this.dialog.open(CreateChannelComponent, { width: '350px', data });\n  }\n\n  public profile(data: { user: Lean.User }) {\n    this.dialog.open(ProfileComponent, { width: '500px', data });\n  }\n\n  public createGuild() {\n    this.dialog.open(CreateGuildComponent, { width: '500px' });\n  }\n\n  public addFriend() {\n    this.dialog.open(AddFriendComponent, { width: '350px' });\n  }\n}\n","import { Component, ElementRef, Inject, OnInit, ViewChild } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { LogService } from 'src/app/services/log.service';\nimport { UserService } from 'src/app/services/user.service';\nimport { WSService } from 'src/app/services/ws.service';\n\n@Component({\n  selector: 'app-create-guild',\n  templateUrl: './create-guild.component.html',\n  styleUrls: ['./create-guild.component.css']\n})\nexport class CreateGuildComponent {\n  @ViewChild('inviteInput')\n  public inviteInput: ElementRef;\n\n  public form = new FormGroup({\n    name: new FormControl(`${this.userService.self.username}'s Guild`, [\n      Validators.required,\n      Validators.maxLength(32)\n    ]),\n  });\n\n  constructor(\n    public dialogRef: MatDialogRef<CreateGuildComponent>,\n    private log: LogService,\n    private userService: UserService,\n    private ws: WSService,\n  ) {}\n\n  public async create() {\n    if (this.form.invalid) return;\n\n    this.dialogRef.close();\n\n    this.ws.emit('GUILD_CREATE', {\n      partialGuild: {\n        name: this.form.value.name,\n      },\n    }, this);\n  }\n\n  public async joinGuild() {\n    this.dialogRef.close();\n\n    await this.ws.emitAsync('GUILD_MEMBER_ADD', {\n      inviteCode: this.inviteInput.nativeElement.value,\n    }, this);\n    await this.log.success();\n  }\n}\n","<h5 id=\"addGuildLabel\" mat-dialog-title>Add Guild</h5>\n\n<div mat-dialog-content>\n  <h4 class=\"text-center\">Create a Guild</h4>\n  <div class=\"d-flex justify-content-center\">\n    <form\n      #f=\"ngForm\"\n      [formGroup]=\"form\"\n      (submit)=\"create()\">\n      <mat-form-field appearance=\"outline\">\n        <mat-label>Server Name</mat-label>\n        <input\n          formControlName=\"name\"\n          type=\"text\"\n          matInput>\n        <mat-error *ngIf=\"form.get('name').invalid\">Required, and should be less than 32 characters.</mat-error>\n      </mat-form-field>\n      <div class=\"d-flex justify-content-center\">\n        <button\n          class=\"bg-primary mt-2 mb-4\"\n          mat-button>Create</button>\n      </div>\n    </form>\n  </div>\n</div>\n\n<div mat-dialog-footer>\n  <h4 class=\"text-center\">Already have an invite?</h4>\n  <div class=\"d-flex justify-content-center\">\n    <mat-form-field appearance=\"outline\">\n      <mat-label>Invite</mat-label>\n      <input type=\"text\" matInput #inviteInput>\n    </mat-form-field>\n  </div>\n</div>\n\n<div class=\"d-flex justify-content-center\" mat-dialog-actions>\n  <button\n    (click)=\"joinGuild()\"\n    id=\"joinGuildButton\"\n    type=\"button\"\n    class=\"bg-secondary\"\n    mat-button>Join a Guild</button>\n</div>\n","<sidebar>\r\n  <div\r\n    *ngIf=\"guild\"\r\n    class=\"side-nav navbar-dark\">\r\n    <div class=\"header\">\r\n      <div class=\"dropdown\">\r\n        <button\r\n          id=\"heftyButton\"\r\n          [matMenuTriggerFor]=\"guildMenu\"\r\n          class=\"btn bg-transparent text-center\"\r\n          type=\"button\">\r\n          <h6 class=\"d-flex flex-column jusify-content-center mb-0\">\r\n            <strong>{{ guild.name }}</strong>\r\n            <i class=\"lni lni-chevron-down ml-1\"></i>\r\n          </h6>\r\n        </button>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"category\">Channels—{{ textChannels.length }}</div>\r\n    <div\r\n      *ngIf=\"perms.can(guild._id, 'VIEW_CHANNELS')\"\r\n      class=\"navbar-nav\">\r\n      <app-channel-tab\r\n        *ngFor=\"let channel of textChannels\"\r\n        [channel]=\"channel\"></app-channel-tab>\r\n    </div>\r\n  </div>\r\n    \r\n  <div id=\"content\">    \r\n    <div *ngIf=\"loaded\">\r\n      <ng-content></ng-content>\r\n    </div>\r\n    <div *ngIf=\"!loaded\">\r\n      <spinner></spinner>\r\n    </div>\r\n  </div>\r\n</sidebar>\r\n\r\n<mat-menu #guildMenu=\"matMenu\">\r\n  <a *ngIf=\"perms.can(guild._id, 'CREATE_INVITE')\"\r\n    (click)=\"dialog.createInvite({ guild: guild })\"\r\n    class=\"dropdown-item invite\"\r\n    mat-menu-item>\r\n    <i class=\"lni lni-user\"></i> Invite People</a>\r\n    \r\n  <a *ngIf=\"perms.can(guild._id, 'MANAGE_GUILD')\"\r\n    class=\"dropdown-item\"\r\n    [routerLink]=\"'/channels/' + guild._id + '/settings'\"\r\n    mat-menu-item><i class=\"lni lni-cog\"></i> Guild Settings</a>\r\n    \r\n  <a *ngIf=\"perms.can(guild._id, 'MANAGE_CHANNELS')\"\r\n    (click)=\"dialog.createChannel({ guild: guild })\"\r\n    class=\"dropdown-item\"\r\n    mat-menu-item><i class=\"lni lni-circle-plus\"></i> Create Channel</a>\r\n</mat-menu>\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { PermissionsService } from 'src/app/services/permissions.service';\r\nimport { GuildService } from '../../../services/guild.service';\r\nimport { UserService } from 'src/app/services/user.service';\r\nimport { PingService } from 'src/app/services/ping.service';\r\nimport { MatMenuTrigger } from '@angular/material/menu';\r\nimport { ChannelService } from 'src/app/services/channel.service';\r\nimport { DialogService } from 'src/app/services/dialog.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Lean } from 'src/app/types/entity-types';\r\nimport { Args, WSService } from 'src/app/services/ws.service';\r\n\r\n@Component({\r\n  selector: 'guild-sidebar',\r\n  templateUrl: './guild-sidebar.component.html',\r\n  styleUrls: ['./guild-sidebar.component.css']\r\n})\r\nexport class GuildSidebarComponent implements OnInit {\r\n  @Input('waitFor') public loaded = true;\r\n\r\n  public guild: Lean.Guild;\r\n\r\n  public get selectedChannel() {\r\n    return this.channelService.self;\r\n  }\r\n\r\n  public get textChannels() {\r\n    return this.guild.channels.filter(c => c.type === 'TEXT');\r\n  }\r\n  public get voiceChannels() {\r\n    return this.guild.channels.filter(c => c.type === 'VOICE');\r\n  }\r\n\r\n  constructor(\r\n    public route: ActivatedRoute,\r\n    public channelService: ChannelService,\r\n    public guildService: GuildService,\r\n    public perms: PermissionsService,\r\n    public userService: UserService,\r\n    public pings: PingService,\r\n    public dialog: DialogService,\r\n    private router: Router,\r\n    private ws: WSService,\r\n  ) {}\r\n\r\n  public async ngOnInit() {\r\n    this.route.paramMap.subscribe(async (paramMap) => {\r\n      const guildId = paramMap.get('guildId');\r\n      this.guild = this.guildService.getCached(guildId);\r\n      \r\n      const inGuild = this.guildService.getSelfMember(guildId);\r\n      if (!inGuild)\r\n        await this.router.navigate(['/channels/@me']);\r\n    });\r\n\r\n    this.ws\r\n      .on('GUILD_DELETE', this.returnFromGuild, this)\r\n      .on('GUILD_LEAVE', this.returnFromGuild, this);\r\n  }\r\n\r\n  private async returnFromGuild({ guildId }: Args.GuildDelete | Args.GuildLeave) {\r\n    if (guildId !== this.guild._id) return;\r\n\r\n    await this.router.navigate(['/channels/@me']);\r\n  }\r\n\r\n  public openMenu(event: MouseEvent, menuTrigger: MatMenuTrigger) {\r\n    event.preventDefault();\r\n    menuTrigger.menu.focusFirstItem('mouse');\r\n    menuTrigger.openMenu();\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { camelToSentenceCase } from '../utils/utils';\r\n\r\n@Pipe({ name: 'camelToSentenceCase' })\r\nexport class CamelToSentenceCasePipe implements PipeTransform {\r\n  transform(words: string) {\r\n    return camelToSentenceCase(words);\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'countdown'\n})\nexport class CountdownPipe implements PipeTransform {\n  public transform(value: Date) {}\n}\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { GuildService } from '../../services/guild.service';\r\nimport { UserService } from '../../services/user.service';\r\n\r\n@Component({\r\n  selector: 'app-logout',\r\n  templateUrl: './logout.component.html',\r\n  styleUrls: ['./logout.component.css']\r\n})\r\nexport class LogoutComponent implements OnInit {\r\n  constructor(\r\n    private guildService: GuildService,\r\n    private router: Router,\r\n    private userService: UserService) {}\r\n\r\n  public async ngOnInit() {\r\n    localStorage.removeItem('key');\r\n    \r\n    await this.userService.updateSelf();    \r\n    await this.guildService.fetchAll();\r\n\r\n    this.router.navigate(['/']);\r\n  }\r\n}\r\n","<spinner></spinner>","import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot } from '@angular/router';\r\nimport { UserService } from '../services/user.service';\r\nimport { GuildService } from '../services/guild.service';\r\nimport { WSService } from '../services/ws.service';\r\nimport { ChannelService } from '../services/channel.service';\r\nimport { LogService } from '../services/log.service';\r\nimport { UserAuthService } from '../services/user-auth.service';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class DashboardAuthGuard implements CanActivate {\r\n  private already = false;\r\n\r\n  constructor(\r\n    private guildService: GuildService,\r\n    private router: Router,\r\n    private userService: UserService,\r\n    private auth: UserAuthService,\r\n  ) {}\r\n\r\n  public async canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\r\n    await this.userService.init();\r\n    await this.guildService.init();\r\n\r\n    const canActivate = Boolean(this.userService.self); \r\n    if (!canActivate)\r\n      await this.router.navigateByUrl(`/login?redirect=${route.url.join('/')}`);\r\n\r\n    if (!this.already) {\r\n      this.already = true;\r\n      await this.auth.ready();\r\n    }\r\n    return canActivate;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { AbstractControl, ValidationErrors } from '@angular/forms';\r\nimport { UserService } from 'src/app/services/user.service';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class UsernameValidators {\r\n  constructor(\r\n    private userService: UserService,\r\n  ) {}\r\n\r\n  public async shouldBeUnique(control: AbstractControl): Promise<ValidationErrors> | null {\r\n    const isTaken = await this.userService.checkUsername(control.value)\r\n      && this.userService.self.username !== control.value;       \r\n    return (isTaken) ? { shouldBeUnique: true } : null;\r\n  }\r\n\r\n  public async emailInUse(control: AbstractControl) {\r\n    const inUse = await this.userService.checkEmail(control.value);\r\n    return (inUse) ? { emailInUse: true } : null;\r\n  }\r\n}\r\n","<sidebar>\r\n  <div class=\"side-nav navbar-dark\">\r\n    <div class=\"header\">\r\n      <a routerLink=\"/channels/@me\"\r\n        routerLinkActive=\"active\"\r\n        [routerLinkActiveOptions]=\"{exact: true}\"\r\n        class=\"nav-item nav-link mt-2\">\r\n        <i class=\"lni lni-users pr-2\" aria-hidden=\"true\"></i> Friends\r\n      </a>\r\n    </div>\r\n    <div class=\"navbar-nav\">\r\n      <div class=\"category\">Direct Messages—{{ channelService.dmChannels.length }}</div>\r\n      <div \r\n        *ngFor=\"let channel of channelService.dmChannels\"\r\n        class=\"mx-2 mb-1\">\r\n        <member-username\r\n          *ngIf=\"channel && getRecipient(channel)\"\r\n          class=\"cursor-pointer\"\r\n          [routerLink]=\"'/channels/@me/' + channel._id\"\r\n          [user]=\"getRecipient(channel)\"></member-username>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div id=\"content\">\r\n    <ng-content></ng-content>\r\n  </div>\r\n</sidebar>","import { Component, OnInit } from '@angular/core';\r\nimport { UserService } from '../../../services/user.service';\r\nimport { ChannelService } from 'src/app/services/channel.service';\r\nimport { Lean } from 'src/app/types/entity-types';\r\n\r\n@Component({\r\n  selector: 'dashboard-sidebar',\r\n  templateUrl: './me-sidebar.component.html',\r\n  styleUrls: ['./me-sidebar.component.css']\r\n})\r\nexport class MeSidebarComponent implements OnInit {\r\n  constructor(\r\n    public channelService: ChannelService,\r\n    public userService: UserService,\r\n  ) {}\r\n    \r\n  public async ngOnInit() {\r\n    await this.userService.init();\r\n    await this.channelService.init();\r\n  }\r\n\r\n  public getRecipient(channel: Lean.Channel) { \r\n    const userId = channel.memberIds\r\n      .filter(id => id !== this.userService.self._id)[0];\r\n    return this.userService.getCached(userId);\r\n  }\r\n}\r\n","<div\r\n  *ngIf=\"user\"\r\n  [matMenuTriggerFor]=\"contextMenu\"\r\n  #menuTrigger=\"matMenuTrigger\"\r\n  (contextmenu)=\"openMenu($event, menuTrigger)\"\r\n  class=\"member-username\"\r\n  [title]=\"user.username\"\r\n  [class]=\"(guild) ? 'user-' + user._id + ' ' + user.status?.toLowerCase() : ''\">\r\n  <div\r\n    [routerLink]=\"routerLink || './'\"\r\n    class=\"username-wrapper\"\r\n    (click)=\"$event.stopPropagation()\">\r\n    <app-avatar-url\r\n      *ngIf=\"withAvatar\"\r\n      [user]=\"user\"></app-avatar-url>\r\n    <span\r\n      class=\"status round\"\r\n      [class]=\"user.status?.toLowerCase()\"></span>\r\n    <div\r\n      [style.color]=\"member ? roleColor : 'var(--light)'\"\r\n      class=\"username\">\r\n      <span class=\"float-right text-muted\">\r\n        <i *ngIf=\"pings.isUnread(dmChannelId)\"\r\n          matTooltip=\"Unread Pings\"\r\n          class=\"lni lni-circle text-danger\"></i>\r\n      </span>\r\n  \r\n      <span class=\"username-text\">{{ user.username }}</span>\r\n      <span\r\n        *ngIf=\"user.bot\"\r\n        textContent=\"user.username === 'Accord' ? 'SYSTEM' : 'BOT'\"\r\n        class=\"ml-1 badge badge-secondary\"></span>\r\n      <span\r\n        *ngIf=\"user._id === guild?.ownerId\"\r\n        matTooltip=\"Guild Owner\"\r\n        class=\"crown pl-1\">\r\n        <i class=\"lni lni-crown text-warning\"></i>\r\n      </span>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<mat-menu\r\n  (closed)=\"guild\r\n    && perms.canManage(guild._id, user._id, 'MANAGE_ROLES')\r\n    && update()\"\r\n  #contextMenu>\r\n  <h6 class=\"p-2 text-center\">{{ user.username }}</h6>\r\n\r\n  <button\r\n    (click)=\"dialog.profile({ user: user })\"\r\n    mat-menu-item>\r\n    <i class=\"lni lni-user text-muted mr-1\"></i>\r\n    <span>View Profile</span>\r\n  </button>\r\n\r\n  <button\r\n    *ngIf=\"isBlocked && user._id !== userService.self._id\"  \r\n    (click)=\"userService.unblock(user._id)\"\r\n    mat-menu-item>\r\n    <i class=\"lni lni-ban text-muted mr-1\"></i>\r\n    <span>Unblock</span>\r\n  </button>\r\n  <button\r\n    *ngIf=\"!isBlocked && user._id !== userService.self._id\"  \r\n    (click)=\"userService.block(user._id)\"\r\n    mat-menu-item>\r\n    <i class=\"lni lni-ban text-danger mr-1\"></i>\r\n    <span>Block</span>\r\n  </button>\r\n  \r\n  <hr class=\"my-2\">\r\n  \r\n  <div *ngIf=\"guild\">\r\n    <mat-form-field\r\n      *ngIf=\"perms.canManage(guild._id, user._id, 'MANAGE_ROLES')\"  \r\n      (click)=\"$event.stopPropagation()\"\r\n      appearance=\"outline\">\r\n      <mat-label>Roles</mat-label>\r\n      <mat-select\r\n        [value]=\"member.roleIds\"\r\n        multiple\r\n        #rolesInput>\r\n        <mat-option\r\n          *ngFor=\"let role of guildRoles.reverse()\"\r\n          [value]=\"role._id\"\r\n          [style.color]=\"role.color\"\r\n          [disabled]=\"!perms.isHigher(guild._id, [role._id])\"\r\n          [attr.selected]=\"member.roleIds.includes(role._id)\">{{ role.name }}</mat-option>\r\n      </mat-select> \r\n    </mat-form-field>\r\n\r\n  </div>\r\n  <div *ngIf=\"guild\">\r\n    <button\r\n      *ngIf=\"perms.canPunish(guild._id, user._id, 'KICK_MEMBERS')\"\r\n      (click)=\"guildService.kick(guild._id, user._id)\"\r\n      mat-menu-item>\r\n      <i class=\"lni lni-close text-danger mr-1\"></i>\r\n      <span>Kick</span>\r\n    </button>\r\n  </div>\r\n  \r\n  <hr class=\"my-2\">\r\n\r\n  <div (click)=\"$event.stopPropagation()\" class=\"p-2\">\r\n    <i class=\"lni lni-dev\"></i>\r\n    <code> {{ user._id }}</code>\r\n  </div>\r\n</mat-menu>\r\n","import { Component, Input, OnInit, ViewChild } from '@angular/core';\r\nimport { MatMenuTrigger } from '@angular/material/menu';\r\nimport { MatSelect } from '@angular/material/select';\r\nimport { ChannelService } from 'src/app/services/channel.service';\r\nimport { DialogService } from 'src/app/services/dialog.service';\r\nimport { GuildService } from 'src/app/services/guild.service';\r\nimport { PermissionsService } from 'src/app/services/permissions.service';\r\nimport { PingService } from 'src/app/services/ping.service';\r\nimport { UserService } from 'src/app/services/user.service';\r\nimport { WSService } from 'src/app/services/ws.service';\r\nimport { Lean } from 'src/app/types/entity-types';\r\n\r\n@Component({\r\n  selector: 'member-username',\r\n  templateUrl: './member-username.component.html',\r\n  styleUrls: ['./member-username.component.css']\r\n})\r\nexport class MemberUsernameComponent implements OnInit {\r\n  @Input() public user: Lean.User;\r\n  @Input() public guild: Lean.Guild;\r\n  @Input() public withAvatar = true;\r\n  @Input() public voice = false;\r\n  @Input() public statusOverride: string;\r\n  @Input() public routerLink: string;\r\n\r\n  @ViewChild('rolesInput')\r\n  public rolesInput: MatSelect; \r\n\r\n  public get guildRoles() {\r\n    return this.guild.roles.filter(r => r.name !== '@everyone');\r\n  }\r\n  public get member() {\r\n    return this.guild?.members.find(m => m.userId === this.user._id);\r\n  }\r\n  public get roleColor() {\r\n    if (!this.guild) return null;\r\n\r\n    const lastRole = this.roles[this.roles.length - 1];\r\n    return lastRole?.color;\r\n  }\r\n  public get roles() {\r\n    if (!this.guild) return null;\r\n    \r\n    return this.guild.roles\r\n      .filter(r => this.member.roleIds.includes(r._id));\r\n  }\r\n  public get isBlocked() {\r\n    return this.userService.self.ignored.userIds.includes(this.user._id);\r\n  }\r\n  public get dmChannelId() {\r\n    return this.channelService.getDM(this.user._id)?._id;\r\n  }\r\n\r\n  constructor(\r\n    private channelService: ChannelService,\r\n    public perms: PermissionsService,\r\n    public pings: PingService,\r\n    public guildService: GuildService,\r\n    public userService: UserService,\r\n    private ws: WSService,\r\n    public dialog: DialogService,\r\n  ) {}\r\n\r\n  public ngOnInit() {\r\n    if (!this.user)\r\n      throw new TypeError('Input user undefined');\r\n  }\r\n\r\n  public async update() {\r\n    const roleIds = this.rolesInput.value\r\n      .filter(id => id)\r\n      .map(v => v._id ?? v);\r\n\r\n    const noChange = JSON.stringify(roleIds) === JSON.stringify(this.member.roleIds);\r\n    if (noChange) return;\r\n\r\n    await this.ws.emitAsync('GUILD_MEMBER_UPDATE', {\r\n      partialMember: { roleIds },\r\n      memberId: this.member._id,\r\n    }, this);\r\n  }\r\n\r\n  public openMenu(event: MouseEvent, menuTrigger: MatMenuTrigger) {\r\n    event.preventDefault();\r\n    menuTrigger.openMenu();\r\n  }\r\n}\r\n","import { CdkDragDrop, moveItemInArray } from '@angular/cdk/drag-drop';\nimport { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ModuleConfig } from 'src/app/dashboard/components/module-config';\nimport { GuildService } from 'src/app/services/guild.service';\nimport { LogService } from 'src/app/services/log.service';\nimport { WSService } from 'src/app/services/ws.service';\nimport { Lean, PermissionTypes } from '../../../../types/entity-types';\n\n@Component({\n  selector: 'app-roles-component',\n  templateUrl: './roles.component.html',\n  styleUrls: ['./roles.component.css', '../overview/guild-settings.component.css']\n})\nexport class RolesComponent extends ModuleConfig implements OnInit {\n  public selectedRole: Lean.Role;\n  public presetColors = [ '#6E8481', '#A2B6AD', '#576067' ];\n  public description/**: DescriptionType */ = {\n    general: {\n      'ADMINISTRATOR': `Gives all permissions. This is a dangerous permission.`,\n      'BAN_MEMBERS': 'Ability to ban members from the guild.',\n      'CREATE_INVITE': 'Ability to create invites for users to join this guild.',\n      'KICK_MEMBERS': 'Ability to kick members from this guild.',\n      'MANAGE_CHANNELS': 'Ability to create, edit, or delete channels.',\n      'MANAGE_GUILD': `Ability to edit general guild settings.`,\n      'MANAGE_ROLES': 'Ability to manage guild roles.',\n      'VIEW_CHANNELS': 'Ability to view channels.',\n    },\n    text: {\n      'MANAGE_MESSAGES': `Ability to manage message other member's messages.`,\n      'READ_MESSAGES': `Ability to read messages,`,\n      'SEND_MESSAGES': 'Ability to send messages in text channels.',\n    },\n  };\n  public permissionType = Object.keys(PermissionTypes.All);\n  public permissionsForm: FormGroup;\n\n  public get isEveryone() {\n    return this.selectedRole?.name === '@everyone';\n  }\n\n  public get permissions(): number {\n    let permissions = 0;\n    for (const formGroupName in this.permissionsForm.value)\n      for (const key in this.permissionsForm.get(formGroupName).value) {\n        const hasPermission = this.permissionsForm\n          .get(formGroupName)\n          .get(key).value;\n\n        permissions |= (hasPermission)\n          ? PermissionTypes.General[key] || PermissionTypes.Text[key] || PermissionTypes.Voice[key]\n          : 0;\n      }\n    return permissions;\n  }\n\n  constructor(\n    route: ActivatedRoute,\n    router: Router,\n    guildService: GuildService,\n    snackbar: MatSnackBar,\n    ws: WSService,\n    log: LogService) {\n      super(guildService, route, snackbar, ws, log, router);\n    }\n\n  public async ngOnInit() {\n    await super.init();\n\n    this.selectRole(this.guild.roles[0]);\n  }\n\n  public async selectRole(role: Lean.Role) {\n    this.selectedRole = role;\n    await this.reset();\n  }\n\n  public buildForm(guild: Lean.Guild): FormGroup {\n    if (!this.selectedRole)\n      return new FormGroup({});\n\n    this.permissionsForm = new FormGroup({\n      general: this.permissionGroup(this.selectedRole, PermissionTypes.General),\n      text: this.permissionGroup(this.selectedRole, PermissionTypes.Text),\n      voice: this.permissionGroup(this.selectedRole, PermissionTypes.Voice),\n    });\n    this.permissionsForm.valueChanges\n      .subscribe(() => this.openSaveChanges());\n\n    return new FormGroup({\n      color: new FormControl({\n        disabled: this.isEveryone,\n        value: this.selectedRole.color,\n      }),\n      hoisted: new FormControl({\n        disabled: this.isEveryone,\n        value: (this.isEveryone) ? false : this.selectedRole.mentionable,\n      }),\n      mentionable: new FormControl({\n        disabled: this.isEveryone,\n        value: this.selectedRole.mentionable,\n      }),\n      name: new FormControl({\n        disabled: this.isEveryone,\n        value: this.selectedRole.name,\n      }, [\n        Validators.required,\n        Validators.maxLength(32),\n        Validators.pattern(/^(?!everyone|here|someone).*$/),\n      ]),\n    });\n  }\n\n  private permissionGroup(role: Lean.Role, type: object) {\n    const hasPermission = (perm: PermissionTypes.Permission) => Boolean(role.permissions & perm);\n    \n    const group = new FormGroup({});\n    for (const perm in type) {\n      if (Number.parseInt(perm)) continue;\n      group.setControl(perm, new FormControl(hasPermission(type[perm])));\n    }    \n    return group;\n  } \n\n  public setPermissions(permissions = PermissionTypes.defaultPermissions) {\n    for (const formGroupName in this.permissionsForm.value)\n      for (const key in this.permissionsForm.get(formGroupName).value) {\n        const hasPerm = Boolean(permissions & PermissionTypes.All[key]);\n        this.permissionsForm\n          .get(formGroupName)\n          .get(key)\n          .setValue(hasPerm);\n      }\n  }\n\n  public async submit() {\n    if (this.form.invalid) return;\n\n    this.form.value.permissions = this.permissions;\n    for (const key in this.form.value)\n      this.selectedRole[key] = this.form.value[key];\n\n    await this.updateRole();\n  }\n\n  private async updateRole() {\n    const { partialRole } = await this.ws.emitAsync('GUILD_ROLE_UPDATE', {\n      roleId: this.selectedRole._id,\n      guildId: this.guildId,\n      partialRole: this.form.value,\n    }, this);\n\n    const index = this.guild.roles.findIndex(r => r._id === this.selectedRole._id);\n    this.guild.roles[index] = { ...this.guild.roles[index], ...partialRole };\n\n    this.form.patchValue(partialRole);\n  }\n\n  public async newRole() {\n    const { role } = await this.ws.emitAsync('GUILD_ROLE_CREATE', {\n      guildId: this.guildId,\n      partialRole: { ...this.form.value, name: 'New Role' },\n    }, this);\n\n    this.selectedRole = role;\n  }\n\n  public async deleteRole() {\n    await this.ws.emitAsync('GUILD_ROLE_DELETE', {\n      roleId: this.selectedRole._id,\n      guildId: this.guildId,\n    }, this);\n    await this.selectRole(this.guild.roles[0]);\n  }\n}\n\nexport type DescriptionType = {\n  general: { [key in keyof typeof PermissionTypes.General]: string };\n  text: { [key in keyof typeof PermissionTypes.Text]: string };\n  voice: { [key in keyof typeof PermissionTypes.Voice]: string };\n};\n","<app-settings-sidebar\n  tabType=\"guild\"\n  *ngIf=\"guild\"\n  [id]=\"guild._id\">\n  <div class=\"content\">\n    <div class=\"row\">\n      <div class=\"col-lg-3 side-nav navbar-dark\">\n        <div class=\"navbar-nav\">\n          <a\n            *ngFor=\"let role of guild.roles.reverse()\"\n            (click)=\"selectRole(role)\"\n            [style.color]=\"role.color + '!important'\"\n            [class.active]=\"selectedRole?._id === role._id\"\n            class=\"cursor-pointer nav-item nav-link\">{{ role.name }}</a>\n          <div class=\"float-right\">\n            <button\n              (click)=\"newRole()\"\n              class=\"btn bg-transparent bg-success text-dark mt-2 mx-3\"\n              mat-button>New Role</button>\n          </div>\n        </div>\n\n        <hr class=\"my-4\">\n\n        <p class=\"text-muted\">Members use the color of the highest role they have in this list.</p>\n      </div>\n      <div class=\"col-lg-9 role-details\">\n        <form\n          *ngIf=\"selectedRole\"\n          #f=\"ngForm\"\n          [formGroup]=\"form\">\n          <p>Roles decide what members can do in {{ guild.name }}.</p>\n          \n          <hr>\n\n          <div>\n            <div class=\"row\">\n              <div class=\"col-lg-4 col-md-12\">\n                <mat-form-field appearance=\"outline\">\n                  <mat-label>Role Name</mat-label>\n                  <input\n                    [readonly]=\"isEveryone\"\n                    formControlName=\"name\"\n                    type=\"text\"\n                    matInput\n                    validate>\n                </mat-form-field>\n              </div>\n\n              <div class=\"col-lg-4 col-md-12\">\n                <mat-form-field appearance=\"outline\">\n                  <mat-label>Role Color</mat-label>            \n                  <input\n                    (colorPickerChange)=\"openSaveChanges()\"\n                    (colorPickerChange)=\"form.get('color').setValue($event)\"\n                    [(colorPicker)]=\"presetColors[1]\"\n                    [cpPresetColors]=\"presetColors\"\n                    formControlName=\"color\"\n                    matInput\n                    validate>\n                </mat-form-field>\n              </div>\n            </div>\n\n            <p class=\"category text-muted pl-0\">Role</p>\n\n            <div>\n              <span>Display role members separately</span>\n              <mat-slide-toggle \n                formControlName=\"hoisted\"\n                class=\"float-right\"\n                validate></mat-slide-toggle>\n              <hr>\n            </div>\n            <div>\n              <span>Allow anyone to <span class=\"d-mention p-1 rounded\">@mention</span> this role</span>\n              <mat-slide-toggle\n                formControlName=\"mentionable\"\n                class=\"float-right\"\n                validate></mat-slide-toggle>\n            </div>\n            <hr>\n          </div>\n        </form>\n\n        <form\n          *ngIf=\"selectedRole\"\n          #f=\"ngForm\"\n          [formGroup]=\"permissionsForm\">\n          \n          <div *ngFor=\"let container of description | keyvalue\">\n            <p class=\"category text-muted pl-0\">{{ container.key | snakeToSentenceCase }}</p>\n            <div\n              [formGroupName]=\"container.key\"\n              class=\"form-group\">\n              <div *ngFor=\"let item of description[container.key] | keyvalue\">\n                <span [matTooltip]=\"item.value\" class=\"cursor-pointer\">\n                  <i class=\"fas fa-info-circle mr-1\"></i>\n                </span>\n                <span>{{ item.key | snakeToSentenceCase }}</span>\n                <mat-slide-toggle \n                  [formControlName]=\"item.key\"\n                  class=\"float-right\"></mat-slide-toggle>\n                <hr>\n              </div>\n            </div>\n          </div>\n\n          <div>\n            <button\n              (click)=\"setPermissions(0)\"\n              class=\"bg-light text-dark\"\n              mat-button>Clear Permissions</button>\n              <button\n                (click)=\"setPermissions()\"\n                class=\"bg-warning text-dark ml-2\"\n                mat-button>Default Permissions</button>\n            <button\n              *ngIf=\"!isEveryone\"\n              (click)=\"deleteRole()\"\n              class=\"btn bg-danger text-light ml-2\"\n              mat-button>Delete Role</button>\n          </div>\n        </form>\n      </div>\n    </div>\n  </div>\n</app-settings-sidebar>","import { Component } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { LogService } from 'src/app/services/log.service';\nimport { WSService } from 'src/app/services/ws.service';\nimport { patterns } from 'src/app/types/entity-types';\n\n@Component({\n  selector: 'app-add-friend',\n  templateUrl: './add-friend.component.html',\n  styleUrls: ['./add-friend.component.css']\n})\nexport class AddFriendComponent {\n  public addFriendForm = new FormGroup({\n    username: new FormControl('', [      \n      Validators.required,\n      Validators.minLength(2),\n      Validators.maxLength(32),\n      Validators.pattern(patterns.username),\n    ])\n  });\n\n  constructor(\n    public dialogRef: MatDialogRef<AddFriendComponent>,\n    private log: LogService,\n    private ws: WSService,\n  ) {}\n\n  public async sendFriendRequest() {\n    if (this.addFriendForm.invalid) return;\n\n    await this.ws.emitAsync('ADD_FRIEND', {\n      username: this.addFriendForm.value.username,\n    }, this);\n\n    this.dialogRef.close();\n  }\n}\n","<h1 mat-dialog-title>Add Friend</h1>\n<p class=\"text-muted\">Add a friend by their username.</p>\n\n<form\n  #f=\"ngForm\"\n  [formGroup]=\"addFriendForm\"\n  class=\"d-flex justify-content-center\"\n  (keyup.enter)=\"sendFriendRequest()\">\n  <mat-form-field appearance=\"outline\">\n    <mat-label>Username</mat-label>\n    <input formControlName=\"username\" type=\"text\" matInput>\n  </mat-form-field>\n</form>\n\n<div class=\"d-flex justify-content-center\" mat-dialog-actions>\n  <button\n    (click)=\"sendFriendRequest()\"\n    class=\"bg-success send-friend-request text-dark\"\n    mat-button\n    matSuffix>Send Request</button>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ModuleConfig } from 'src/app/dashboard/components/module-config';\nimport { GuildService } from 'src/app/services/guild.service';\nimport { LogService } from 'src/app/services/log.service';\nimport { WSService } from 'src/app/services/ws.service';\nimport { Lean } from 'src/app/types/entity-types';\n\n@Component({\n  selector: 'app-guild-settings',\n  templateUrl: './guild-settings.component.html',\n  styleUrls: ['./guild-settings.component.css']\n})\nexport class GuildSettingsComponent extends ModuleConfig implements OnInit {\n  public get previewGuild() {\n    return {\n      ...this.guild,\n      name: this.form.get('name').value || this.guild.name,\n      iconURL: this.form.get('iconURL').value || this.guild.iconURL,\n    };\n  }\n\n  constructor(\n    route: ActivatedRoute,\n    router: Router,\n    guildService: GuildService,\n    snackbar: MatSnackBar,\n    ws: WSService,\n    log: LogService,\n    ) {\n      super(guildService, route, snackbar, ws, log, router);\n    }\n\n  public async ngOnInit() {\n    await super.init();\n  }\n\n  public buildForm(guild: Lean.Guild): FormGroup | Promise<FormGroup> {\n    return new FormGroup({\n      iconURL: new FormControl(guild.iconURL),\n      name: new FormControl(guild.name, [ Validators.required, Validators.maxLength(32) ]),\n    });\n  }\n}\n","<app-settings-sidebar\n  tabType=\"guild\"\n  [id]=\"guild?._id\">\n  <div *ngIf=\"guild\" class=\"content\">\n    <h5 class=\"mb-4\">Guild Overview</h5>\n\n    <form *ngIf=\"form\"\n      #f=\"ngForm\" [formGroup]=\"form\">\n      <div class=\"row\">\n        <div class=\"col-xl-3 col-lg-4 col-md-6\">\n          <div class=\"d-flex\">\n            <app-guild-icon\n              [guild]=\"previewGuild\"\n              size=\"96px\"></app-guild-icon>\n          </div>\n        </div>\n        \n        <div class=\"col-xl-3 col-lg-4 col-md-6\">\n          <mat-form-field appearance=\"outline\">\n            <mat-label>Icon URL</mat-label>\n            <input\n              formControlName=\"iconURL\"\n              type=\"text\"\n              matInput>\n          </mat-form-field>          \n        </div>\n\n        <div class=\"col-xl-3 col-lg-4 col-md-6\">\n          <mat-form-field appearance=\"outline\">\n            <mat-label>Name</mat-label>\n            <input formControlName=\"name\" type=\"text\" matInput>\n          </mat-form-field>\n        </div>\n      </div>\n    </form>\n\n    <div class=\"my-5\"></div>\n    <h5 class=\"mb-4\">Advanced Settings</h5>\n\n    <div class=\"row\">\n      <div class=\"col-lg-4 col-md-6\">\n        <div>\n          <button\n            (click)=\"deleteGuild()\"\n            class=\"nav-item nav-link bg-danger\"\n            mat-button>\n            <i class=\"lni lni-trash mr-1\"></i>\n            <span>Delete Guild</span>\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>  \n</app-settings-sidebar>","import { Component, Input, OnInit } from '@angular/core';\nimport { getConfig, setConfig } from 'src/app/config';\nimport { UserService } from 'src/app/services/user.service';\nimport { Lean } from 'src/app/types/entity-types';\nimport { widthExpandCollapse } from './member-list.animations';\n\n@Component({\n  selector: 'app-member-list',\n  templateUrl: './member-list.component.html',\n  styleUrls: ['./member-list.component.css'],\n  animations: [ widthExpandCollapse ],\n})\nexport class MemberListComponent {\n  @Input() public guild: Lean.Guild;\n\n  private _expanded: boolean;\n  public get isExpanded() {\n    return this._expanded;\n  }\n  @Input('expanded')\n  public set isExpanded(value: boolean) {\n    setConfig('memberListExpanded', this._expanded = value);\n  }\n\n  public get onlineMembers() {\n    return this.guild.members.filter(m => {\n      const user = this.userService.getCached(m.userId);\n      return user.status === 'ONLINE';\n    });\n  }\n  public get offlineMembers() {\n    return this.guild.members.filter(m => {\n      const user = this.userService.getCached(m.userId);\n      return user.status === 'OFFLINE';\n    });\n  }\n\n  constructor(public userService: UserService) {\n    this.isExpanded ||= getConfig('memberListExpanded');\n  }\n}\n","<div\n  *ngIf=\"guild\"\n  [@expandCollapse]=\"(isExpanded) ? 'expanded' : 'collapsed'\"\n  class=\"float-right member-list\">\n  <div class=\"category\">Online—{{ onlineMembers.length }}</div>\n  <div>\n    <member-username\n      *ngFor=\"let member of onlineMembers\"\n      class=\"cursor-pointer\"\n      [user]=\"userService.getCached(member.userId)\"\n      [guild]=\"guild\"></member-username>\n  </div>\n\n  <div\n    *ngIf=\"offlineMembers.length\"\n    class=\"category\">Offline—{{ offlineMembers.length }}</div>\n  <div>\n    <member-username\n      *ngFor=\"let member of offlineMembers\"\n      class=\"cursor-pointer\"\n      [user]=\"userService.getCached(member.userId)\"\n      [guild]=\"guild\"></member-username>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { ActivatedRoute } from '@angular/router';\nimport { Subscription } from 'rxjs/internal/Subscription';\nimport { SaveChangesComponent } from 'src/app/dashboard/components/save-changes/save-changes.component';\nimport { DevelopersService } from 'src/app/services/developers.service';\nimport { Lean } from 'src/app/types/entity-types';\n\n@Component({\n  selector: 'app-application',\n  templateUrl: './application.component.html',\n  styleUrls: ['./application.component.css', '../developers.component.css']\n})\nexport class ApplicationComponent implements OnInit {\n  form = new FormGroup({\n    description: new FormControl('', [ Validators.required ]),\n    name: new FormControl('', [ Validators.required ]),\n  });\n\n  originalForm: Lean.Application;\n  app: Lean.Application;\n\n  private saveChanges$: Subscription;  \n  private valueChanges$: Subscription;  \n\n  constructor(\n    private route: ActivatedRoute,\n    public saveChanges: MatSnackBar,\n    private service: DevelopersService,\n  ) {}\n\n  async ngOnInit() {\n    const appId = this.route.snapshot.paramMap.get('id');\n    this.app = await this.service.getAsync(appId);\n    this.form.setValue({\n      description: this.app.description,\n      name: this.app.name,\n    });\n    this.originalForm = { ...this.form.value };\n\n    this.valueChanges$ = this.form.valueChanges\n      .subscribe(() => this.openSaveChanges()); \n  }\n\n  ngOnDestroy() {    \n    this.valueChanges$?.unsubscribe();\n    this.saveChanges$?.unsubscribe();\n  }\n  \n  openSaveChanges() {\n    const snackBarRef = this.saveChanges._openedSnackBarRef;\n    if (!this.form.valid || snackBarRef) return;\n\n    this.saveChanges$ = this.saveChanges\n      .openFromComponent(SaveChangesComponent)\n      .afterOpened()\n      .subscribe(() => {\n        const component = this.saveChanges._openedSnackBarRef.instance as SaveChangesComponent;\n        if (!component) return;\n\n        component.onSave.subscribe(async() => await this.submit());\n        component.onReset.subscribe(async() => await this.reset());\n      });    \n  }\n\n  async submit() {\n    try {\n      if (!this.form.valid) return;\n\n      await this.service.update(this.app._id, this.form.value);\n      this.originalForm = { ...this.form.value };  \n    } catch {\n      alert('An error occurred when submitting the form - check console');\n    }\n  }\n\n  async reset() {\n    this.form.setValue({ ...this.originalForm });\n    \n    this.valueChanges$ = this.form.valueChanges\n      .subscribe(() => this.openSaveChanges()); \n  }\n}\n","<div class=\"row\">\n  <div class=\"col-3\">\n    <div class=\"developer-sidebar\">\n      <header\n        routerLink=\"/developers\"\n        class=\"cursor-pointer my-5\">\n        <a class=\"p-2 text-muted\" routerLink=\"/developers\">\n          <i class=\"lni lni-arrow-left mt-2\"></i>\n          <strong class=\"pl-2\">DASHBOARD</strong>\n        </a>\n      </header>\n      \n      <nav class=\"side-nav mt-3\">\n        <a routerLinkActive=\"active\"\n          class=\"nav-link\"\n          [routerLink]=\"'/developers/applications/' + app._id\">\n          <i class=\"lni lni-eye\"></i> Overview</a>\n        <a routerLinkActive=\"active\"\n          class=\"nav-link\"\n          [routerLink]=\"'/developers/applications/' + app._id + '/user'\">\n          <i class=\"lni lni-robot\"></i> User</a>\n      </nav>\n    </div>\n  </div>\n\n  <div\n    *ngIf=\"app; else loading\"\n    class=\"col-6 m-4 mt-5\">\n    <header>\n      <h2>Overview</h2>\n      <p class=\"lead\">Public info about your bot listing.</p>\n    </header>\n    <form #f=\"ngForm\" [formGroup]=\"form\">\n      <mat-form-field appearance=\"outline\">\n        <mat-label>Name</mat-label>\n        <input formControlName=\"name\" type=\"text\" [value]=\"app.name\" matInput>\n      </mat-form-field>\n\n      <mat-form-field appearance=\"outline\" class=\"ml-2\">\n        <mat-label>Description</mat-label>\n        <textarea formControlName=\"description\" matInput>{{ app.description }}</textarea>\n      </mat-form-field>\n    </form>\n  </div>\n\n  <ng-template\n    class=\"col-6 d-flex justify-content-center\"\n    #loading>\n    <spinner></spinner>\n  </ng-template>\n</div>\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { GeneralTypes } from '../types/entity-types';\nimport { WSService } from './ws.service';\n\n// convention over configuration\n@Injectable({ providedIn: 'root' })\nexport abstract class HTTPWrapper<T extends GeneralTypes.SnowflakeEntity> {\n  /** Object of the client, or that is being currently used. */\n  public self?: T;\n  protected abstract endpoint: string;\n\n  protected get headers() {\n    return {\n      headers: { Authorization: `Bearer ${this.key}` }\n    };\n  }\n  protected get key() {\n    return localStorage.getItem('key');\n  }\n\n  protected abstract _arr: T[];\n  private get arr(): T[] {\n    return this._arr;\n  };\n\n  constructor(\n    protected http: HttpClient,\n    protected ws: WSService,\n  ) {}\n\n  public async init() {\n    if (this.arr.length <= 0)\n      await this.fetchAll();\n    if (!this.self)\n      await this.updateSelf?.();\n  }\n\n  public updateSelf?(): Promise<T>;\n\n  public getCached(id: string | undefined) {\n    return this.arr?.find(i => i._id === id);\n  }\n  public getAsync(id: string) {\n    return this.getCached(id) ?? this.fetch(id);\n  }\n  /** @deprecated */\n  public add(val: T) {\n    const has = this.arr.some(v => v._id === val._id);\n    if (has)\n      this.delete(val._id);\n    this.arr.push(val);\n\n    return this.arr;\n  }\n  public delete(id: string) {\n    const index = this.arr.findIndex(v => v._id === id);\n    this.arr.splice(index, 1);\n\n    return this.arr;\n  }\n\n  public upsert(id: string, value: Partial<T>): T {\n    const index = this.arr.findIndex(g => g._id === id);\n    const existing = this.arr[index];\n\n    if (this.self && this.self._id === id)\n      return this.self = { ...this.self, ...value };\n\n    if (!existing && !('_id' in value))\n      throw new TypeError('Full object required for adding');\n    \n    ('_id' in value)\n      ? this.add(value as T)\n      : this.arr[index] = { ...existing, ...value };\n\n    return existing;\n  }\n\n  public async fetch(id: string): Promise<T> {\n    if (!id)\n      throw new TypeError('ID must be defined');\n\n    return await this.http.get(`${this.endpoint}/${id}`, this.headers).toPromise() as any;\n  }\n  public async fetchAll() {\n    return this._arr = (this.key)\n      ? await this.http.get(this.endpoint, this.headers).toPromise() as any ?? []\n      : [];    \n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { Lean } from '../types/entity-types';\nimport { HTTPWrapper } from './http-wrapper';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DevelopersService extends HTTPWrapper<Lean.Application> {\n  protected readonly endpoint = `${environment.endpoint}/developers/applications`;\n\n  protected _arr: Lean.Application[];\n  // TODO: make update as current application\n  public self: Lean.Application;\n\n  public async create(): Promise<Lean.Application> {\n    return this.http.get(`${this.endpoint}/applications/new`, this.headers).toPromise() as any;\n  }\n\n  public async update(id: string, value: string): Promise<Lean.Application> {\n    return this.http.patch(`${this.endpoint}/applications/${id}`, value, this.headers).toPromise() as any;\n  }\n\n  public async regenToken(id: string): Promise<string> {\n    return this.http.get(`${this.endpoint}/applications/${id}/regen-token`, this.headers).toPromise() as any;\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({ name: 'cleanDateTime' })\r\nexport class CleanDateTimePipe implements PipeTransform {\r\n\r\n  transform(dateString: string, ...args: unknown[]) {\r\n    const date = new Date(dateString);\r\n    let hours = date.getHours().toString().padStart(2, '0');\r\n    let minutes = date.getMinutes().toString().padStart(2, '0');\r\n    let day = date.getDate().toString().padStart(2, '0');\r\n    \r\n    const month = date.toLocaleString('default', { month: 'long' });\r\n    return `${month} ${day} ${date.getFullYear()}, ${hours}:${minutes}`;\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'dashboard-navbar',\n  templateUrl: './dashboard-navbar.component.html',\n  styleUrls: ['./dashboard-navbar.component.css']\n})\nexport class DashboardNavbarComponent {}","<nav class=\"navbar navbar-expand navbar-dark\">\n  <a class=\"navbar-brand\">\n    <ng-content></ng-content>\n  </a>\n</nav>\n","import { Component } from '@angular/core';\n\nexport function externalRedirect(url: string) {\n  @Component({\n    template: ''\n  })\n  class RedirectComponent {\n    constructor() {\n      window.location.href = url;\n    }\n  }\n  return RedirectComponent;\n}","import { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, Router } from '@angular/router';\r\nimport { GuildService } from '../services/guild.service';\r\nimport { UserService } from '../services/user.service';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class GuildAuthGuard implements CanActivate {\r\n  constructor(\r\n    private guildService: GuildService,\r\n    private router: Router,\r\n    private userService: UserService) {}\r\n\r\n  public async canActivate(next: ActivatedRouteSnapshot) {\r\n    await this.userService.init();\r\n    await this.guildService.init();\r\n    \r\n    const guildId = next.paramMap.get('guildId');\r\n    const guild = await this.guildService.getAsync(guildId);      \r\n    if (!guild)\r\n      await this.router.navigate(['/channels/@me']);\r\n    \r\n    const defaultChannel = guild.channels.filter(c => c.type === 'TEXT')[0];      \r\n    const channelId = next.url[2];    \r\n    if (defaultChannel && !channelId)\r\n      await this.router.navigate([`/channels/${guildId}/${defaultChannel._id}`]);\r\n\r\n    return true;\r\n  }  \r\n}\r\n","import { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport io from 'socket.io-client';\nimport { LogService } from './log.service';\nimport { WSEventArgs, WSEventAsyncArgs, WSEventParams } from '../types/ws-types';\n\n@Injectable({ providedIn: 'root' })\nexport class WSService {\n  private socket = (io as any).connect(environment.rootEndpoint, {\n    secure: true,\n    path: '/ws',\n  });\n  private listened: string[] = [];\n\n  constructor(private log: LogService) {\n    this.socket.once('message', (content: string) => {\n      console.log(content);\n\n      if (content.includes('Not Logged In'))\n        window.location.reload();\n    });\n  }\n\n  public on<K extends keyof WSEventArgs>(eventName: K, callback: WSEventArgs[K], component: any): this {\n    const componentName = this.nameOf(component);    \n    const eventString = `${eventName}-${componentName}`;\n    if (this.listened.includes(eventString)) return this;\n\n    this.listened.push(eventString);\n\n    const listener = (...args: any[]) => {      \n      this.log.info(`RECEIVE ${eventName} - ${componentName}`, 'ws');\n      console.log(...args);      \n      return callback.call(component, ...args);\n    };\n    this.socket.on(eventName, listener);\n    \n    return this;\n  }\n\n  public emitAsync<P extends keyof WSEventParams, A extends keyof WSEventAsyncArgs>(name: P, params: WSEventParams[P], component: any): Promise<WSEventAsyncArgs[A & P]> {\n    return new Promise((resolve, reject) => {\n      this.on('message', (message: string) => {\n        if (!message.includes('Server error')) return;\n\n        // this.log.error(message);\n        return reject(message);\n      }, component);\n\n      this.on(name as keyof WSEventArgs, (args) => {\n        this.log.success();\n        return resolve(args);\n      }, component);\n\n      this.emit(name, params, component);\n    });\n  }\n\n  public emit<K extends keyof WSEventParams>(name: K, params: WSEventParams[K], component: any) {\n    this.log.info(`SEND ${name} - ${this.nameOf(component)}`, 'ws');\n    this.socket.emit(name, params);\n  }\n\n  private nameOf(component: any) {\n    return component.constructor.name;\n  }\n}\n\nexport * from '../types/ws-types';\n","import { Component } from '@angular/core';\nimport { TextBasedChannel } from '../../text-based-channel';\n\n@Component({\n  selector: 'app-text-channel',\n  templateUrl: './text-channel.component.html',\n  styleUrls: ['./text-channel.component.css']\n})\nexport class TextChannelComponent extends TextBasedChannel {}\n","<div\n  *ngIf=\"channel && messages\"\n  (click)=\"onClick($event)\">\n  <div\n    *ngIf=\"(!guild && loadedAllMessages)\n      || (guild && perms.can(guild._id, 'READ_MESSAGES')); else lackingPerms\"\n    class=\"messages\"\n    infiniteScroll\n    [scrollWindow]=\"false\"\n    (scrolledUp)=\"false && loadMoreMessages()\">\n    <div\n      class=\"jumbotron pb-0\">\n      <p class=\"lead\">\n        Start of {{ title }} message history.\n      </p>\n      <hr>\n    </div>\n\n    <spinner *ngIf=\"!loadedAllMessages\"></spinner>\n  \n    <div\n      *ngFor=\"let message of messages; index as i; trackBy: identifyMessage\"\n      class=\"message\"\n      [id]=\"'message' + message._id\">\n      <message\n        [message]=\"message\"\n        [isExtra]=\"shouldCombine(i)\"\n        [member]=\"guildService.getMember(guild?._id, message.authorId)\"\n        [guild]=\"guild\"></message>\n    </div>\n  </div>\n\n  <ng-template #lackingPerms>\n    <div class=\"messages\">\n      <div class=\"jumbotron pb-0\">\n        <p class=\"lead\">\n          <i class=\"lni lni-eye text-muted\"></i>\n          <span> Message history of {{ title }} is hidden.</span>\n        </p>\n        <hr>\n      </div>\n    </div>\n  </ng-template>\n  \n  <div\n    *ngIf=\"channel\"\n    class=\"footer\">\n    <emoji-mart\n      *ngIf=\"emojiPickerOpen\"\n      class=\"float-right\"\n      emoji=\"joy\"\n      title=\"Pick an Emoji\"\n      (click)=\"emojiPickerOpen = !emojiPickerOpen\"\n      (emojiClick)=\"addEmoji($event)\"></emoji-mart>\n  \n    <mat-form-field\n      autoFocus\n      (keyup)=\"emitTyping()\"\n      (keyup.enter)=\"chat(message.value)\"\n      appearance=\"fill\"\n      class=\"d-block\">\n      <mat-label>Message {{ title }}</mat-label>\n      <textarea\n        [disabled]=\"guild && !perms.can(guild._id, 'SEND_MESSAGES')\"\n        id=\"chatBox\"\n        matInput\n        #message></textarea>\n  \n      <mat-icon\n        (click)=\"emojiPickerOpen = true\"\n        class=\"cursor-pointer emoji-icon mb-3\"\n        align=\"end\"\n        matSuffix>\n        <i class=\"lni lni-emoji-happy\"></i>\n      </mat-icon>\n    </mat-form-field>\n  \n    <div\n      *ngIf=\"typingUsernames.length <= 0\"\n      class=\"pt-3\"></div>\n    <div\n      *ngIf=\"typingUsernames.length > 0\"\n      class=\"typing\">\n      <strong>{{ typingUsernames.join(', ') }}</strong> {{ typingUsernames.length > 1 ? 'are' : 'is' }} typing...\n    </div>\n  </div>\n  <div *ngIf=\"!channel\">\n    <spinner></spinner>\n  </div>  \n</div>\n\n","import { Component, OnInit } from '@angular/core';\r\nimport { UserService } from './services/user.service';\r\nimport { ThemeService } from './services/theme.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { LogService } from './services/log.service';\r\nimport devtools from 'devtools-detect';\r\nimport { EventService } from './services/events/event.service';\r\nimport { getConfig } from './config';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent implements OnInit {\r\n  public get sfxEnabled() {\r\n    return getConfig('sfxEnabled');\r\n  }\r\n\r\n  constructor(\r\n    private eventService: EventService,\r\n    private themeService: ThemeService,\r\n    private userService: UserService,\r\n    private route: ActivatedRoute,\r\n    private log: LogService,\r\n  ) {}\r\n\r\n  public async ngOnInit() {\r\n    this.eventService.init();\r\n\r\n    this.themeService.updateTheme();\r\n    await this.userService.updateSelf();\r\n    \r\n    this.handlePrompt();\r\n    this.consoleWarning();\r\n  }\r\n\r\n  private handlePrompt() {\r\n    this.route.queryParamMap.subscribe(async (map) => {\r\n      const success = map.get('success');\r\n      const error = map.get('error');\r\n      if (success)\r\n        await this.log.success(success);\r\n      else if (error)\r\n        await this.log.error(error);\r\n    });\r\n  }\r\n\r\n  private consoleWarning() {\r\n    const interval = setInterval(() => {\r\n      if (!devtools.isOpen) return;\r\n\r\n      this.log.consoleWarning();\r\n      clearInterval(interval);\r\n    }, 100);\r\n  }\r\n}\r\n","<div id=\"errorPopup\" class=\"rounded popup p-2\" hidden></div>\n<div id=\"successPopup\" class=\"rounded popup p-2\" hidden></div>\n\n<router-outlet></router-outlet>\n","import { Injectable } from '@angular/core';\nimport { Lean } from '../types/entity-types';\nimport { SoundService } from './sound.service';\nimport { UserService } from './user.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PingService {\n  private unread = new Map<string, string>();\n\n  constructor(\n    private sounds: SoundService,\n    private userService: UserService,\n  ) {}\n\n  public markAsRead(channelId: string) {\n    this.unread.delete(channelId);\n  }\n\n  public async add(channelId: string, lastMessageId: string) {\n    this.unread.set(channelId, lastMessageId);\n\n    await this.sounds.ping();\n  }\n\n  public lastRead(channelId: string) {\n    return this.unread.get(channelId);\n  }\n\n  public isUnread(channelId: string) {\n    return this.unread.has(channelId);\n  }\n\n  public isIgnored(message: Lean.Message, guildId?: string): boolean {\n    const user = this.userService.self;\n\n    return message.authorId === user._id\n      || user.ignored.channelIds.includes(message.channelId)\n      || user.ignored.guildIds.includes(guildId)\n      || user.ignored.userIds.includes(message.authorId);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { ActivatedRoute } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { UsernameValidators } from 'src/app/authentication/sign-up/username.validators';\nimport { SaveChangesComponent } from 'src/app/dashboard/components/save-changes/save-changes.component';\nimport { DevelopersService } from 'src/app/services/developers.service';\nimport { SoundService } from 'src/app/services/sound.service';\nimport { UserService } from 'src/app/services/user.service';\nimport { WSService } from 'src/app/services/ws.service';\nimport { Lean, patterns } from 'src/app/types/entity-types';\n\n@Component({\n  selector: 'app-bot-user',\n  templateUrl: './bot-user.component.html',\n  styleUrls: ['../application/application.component.css', '../developers.component.css']\n})\nexport class BotUserComponent implements OnInit {\n  public form = new FormGroup({\n    avatarURL: new FormControl('', [ Validators.required ]),\n    username: new FormControl('', [\n      Validators.required,\n      Validators.pattern(patterns.username),\n    ], [ this.usernameValidators.shouldBeUnique.bind(this.usernameValidators) ]),\n  });\n\n  public originalForm: Lean.Application;\n  public app: Lean.Application;\n\n  private saveChanges$: Subscription;  \n  private valueChanges$: Subscription;\n  \n  constructor(\n    private route: ActivatedRoute,\n    public saveChanges: MatSnackBar,\n    public service: DevelopersService,\n    private sounds: SoundService,\n    private ws: WSService,\n    private usernameValidators: UsernameValidators,\n  ) {}\n\n  public async ngOnInit() {\n    const appId = this.route.snapshot.paramMap.get('id');\n\n    this.app = await this.service.getAsync(appId);\n    this.form.setValue({\n      avatarURL: this.app.user.avatarURL,\n      username: this.app.user.username,\n    });\n    this.originalForm = { ...this.form.value };\n\n    this.valueChanges$ = this.form.valueChanges\n      .subscribe(() => this.openSaveChanges()); \n  }\n\n  public ngOnDestroy() {    \n    this.valueChanges$?.unsubscribe();\n    this.saveChanges$?.unsubscribe();\n  }\n  \n  public openSaveChanges() {\n    const snackBarRef = this.saveChanges._openedSnackBarRef;    \n    if (this.form.invalid || snackBarRef) return;\n\n    this.saveChanges$ = this.saveChanges\n      .openFromComponent(SaveChangesComponent)\n      .afterOpened()\n      .subscribe(() => {\n        const component = this.saveChanges._openedSnackBarRef.instance as SaveChangesComponent;\n        if (!component) return;\n\n        component.onSave.subscribe(async() => await this.submit());\n        component.onReset.subscribe(async() => await this.reset());\n      });    \n  }\n\n  public async submit() {\n    if (this.form.invalid) return;\n\n    this.ws.emit('USER_UPDATE', {\n      key: this.app.token,\n      partialUser: this.form.value,\n    }, this);\n    this.originalForm = { ...this.form.value };\n    \n    await this.sounds.success();\n  }\n\n  public async reset() {\n    this.form.setValue({ ...this.originalForm });\n    \n    this.valueChanges$ = this.form.valueChanges\n      .subscribe(() => this.openSaveChanges()); \n  }\n\n  public async regenToken() {\n    this.app.token = await this.service.regenToken(this.app._id);\n  }\n\n  public copyToken() {\n    navigator.clipboard.writeText(this.app.token);\n  }\n}\n","<div class=\"row\">\n  <div class=\"col-3\">\n    <div class=\"developer-sidebar\">\n      <header\n        routerLink=\"/developers\"\n        class=\"cursor-pointer my-5\">\n        <a class=\"p-2 text-muted\" routerLink=\"/developers\">\n          <i class=\"lni lni-arrow-left mt-2\"></i>\n          <strong class=\"pl-2\">DASHBOARD</strong>\n        </a>\n      </header>\n      \n      <nav *ngIf=\"app\" class=\"side-nav mt-3\">\n        <a routerLinkActive=\"active\"\n          class=\"nav-link\"\n          [routerLink]=\"'/developers/applications/' + app._id\">\n          <i class=\"lni lni-eye\"></i> Overview</a>\n        <a routerLinkActive=\"active\"\n          class=\"nav-link\"\n          [routerLink]=\"'/developers/applications/' + app._id + '/user'\">\n          <i class=\"lni lni-robot\"></i> User</a>\n      </nav>\n    </div>\n  </div>\n\n  <div\n    *ngIf=\"app; else loading\"\n    class=\"col-8 m-4 mt-5\">\n    <header>\n      <h2>Bot User</h2>\n      <p class=\"lead\">General info about your bot user.</p>\n    </header>\n\n    <form #f=\"ngForm\" [formGroup]=\"form\" class=\"overflow-hidden\">\n      <div class=\"row\">\n        <div class=\"col-6\">\n          <app-avatar-url\n            [user]=\"{ avatarURL: form.get('avatarURL').value }\"\n            size=\"96px\"></app-avatar-url>\n    \n          <mat-form-field appearance=\"outline\" class=\"ml-3\">\n            <mat-label>Avatar URL</mat-label>\n            <input\n              formControlName=\"avatarURL\"\n              type=\"url\"\n              matInput>\n          </mat-form-field>\n        </div>\n        \n        <div class=\"col-6\">\n          <mat-form-field appearance=\"outline\">\n            <mat-label>Username</mat-label>\n            <input formControlName=\"username\" type=\"text\" matInput>\n            <mat-hint *ngIf=\"form.get('username').pending\"><i class=\"lni lni-circle-notch fa-spin\"></i> Checking</mat-hint>\n            <mat-error *ngIf=\"form.get('username').errors?.required\">Username is required.</mat-error>\n            <mat-error *ngIf=\"form.get('username').errors?.shouldBeUnique\">Username is already taken.</mat-error>\n            <mat-error *ngIf=\"form.get('username').errors?.pattern\">Username should follow the <a routerLink=\"/docs/usernames\">username rules</a>.</mat-error>\n          </mat-form-field>\n        </div>\n\n        <div class=\"col-6\">\n          <h3>Token</h3>\n          <p class=\"lead\">Use this to log into the bot. Keep this safe!</p>\n          <input type=\"hidden\" value=\"hidden\" #shown>\n          <div class=\"token\" [hidden]=\"shown.value === 'hidden'\">{{ app.token }}</div>\n          <div class=\"buttons\">\n            <button\n              type=\"button\"\n              class=\"text-info\"\n              (click)=\"shown.value = (shown.value === 'shown') ? 'hidden' : 'shown'\"\n              [textContent]=\"(shown.value === 'shown') ? 'Hide' : 'Show'\"\n              mat-button></button>\n            <button\n              type=\"button\"\n              class=\"text-success\"\n              (click)=\"copyToken()\"\n              mat-button>Copy</button>\n            <button\n              type=\"button\"\n              class=\"text-danger\"\n              (click)=\"regenToken()\"\n              mat-button>Regen</button>\n          </div>\n        </div>\n\n        <div class=\"col-6\">\n          <div>\n            <mat-form-field appearance=\"outline\">\n              <mat-label>Client ID</mat-label>\n              <input [value]=\"app._id\" type=\"text\" disabled matInput>\n            </mat-form-field>\n          </div>\n          <div>\n            <mat-form-field appearance=\"outline\">\n              <mat-label>Bot ID</mat-label>\n              <input [value]=\"app.user._id\" type=\"text\" disabled matInput>\n            </mat-form-field>\n          </div>\n        </div>\n      </div>\n    </form>\n  </div>\n\n  <ng-template\n    class=\"col-6 d-flex justify-content-center\"\n    #loading>\n    <spinner></spinner>\n  </ng-template>\n</div>\n","import { Injectable } from '@angular/core';\r\nimport { AbstractControl, ValidationErrors } from '@angular/forms';\r\n\r\n@Injectable()\r\nexport class PasswordValidators {\r\n  public static passwordsShouldMatch(control: AbstractControl): ValidationErrors | null {\r\n    const password = control.get('password').value;\r\n    const confirmPassword = control.get('confirmPassword').value;\r\n    \r\n    return (password !== confirmPassword)\r\n      ? { passwordMismatch: true }\r\n      : null;\r\n  }\r\n\r\n  public static newPasswordShouldNotMatch(control: AbstractControl): ValidationErrors | null {\r\n    const oldPassword = control.get('oldPassword').value;\r\n    const newPassword = control.get('newPassword').value;\r\n    \r\n    return (oldPassword === newPassword)\r\n      ? { passwordMatch: true }\r\n      : null;\r\n  }\r\n\r\n  public static emailOrUsernameRequired(control: AbstractControl): ValidationErrors | null {\r\n    const username = control.get('username').value;\r\n    const email = control.get('email').value;\r\n    \r\n    return (email || username)\r\n      ? null\r\n      : { emailOrUsernameRequired: true };\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { LogService } from 'src/app/services/log.service';\r\nimport { GuildService } from '../../services/guild.service';\r\nimport { UserService } from '../../services/user.service';\r\n\r\n@Component({\r\n  selector: 'app-auth',\r\n  templateUrl: './auth.component.html',\r\n  styleUrls: ['./auth.component.css']\r\n})\r\nexport class AuthComponent implements OnInit {\r\n  constructor(\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private guildService: GuildService,\r\n    private log: LogService,\r\n    private userService: UserService,\r\n  ) {}\r\n\r\n  public async ngOnInit() {\r\n    try {\r\n      const key = this.route.snapshot.queryParamMap.get('key');\r\n      localStorage.setItem('key', key);\r\n    \r\n      await this.userService.updateSelf();\r\n      await this.guildService.fetchAll();\r\n      \r\n      await this.router.navigate(['/channels/@me']);\r\n    } catch(error) {\r\n      await this.log.error(error.message);\r\n      await this.router.navigate(['/']);\r\n    }\r\n  }\r\n}","<spinner></spinner>","import { Injectable } from '@angular/core';\nimport { getConfig } from '../config';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SoundService {\n  private get sfxEnabled() {\n    return getConfig('sfxEnabled');\n  }\n\n  public async ping() {\n    await this.playSound('ping');\n  }\n  public async message() {\n    await this.playSound('message');\n  }\n  public async success() {\n    await this.playSound('success');\n  }\n  public async error() {\n    await this.playSound('error');\n  }\n\n  private async playSound(name: string) {\n    if (!this.sfxEnabled) return;\n\n    const audio: HTMLAudioElement = document.createElement('audio');\n    audio.setAttribute('src', `assets/audio/${name}.wav`);\n    audio.onended = () => audio.remove();\n    try {\n      await audio.play();\n    } catch {}\n  }\n}\n","const defaultValues = {\n  sfxEnabled: true,\n  memberListExpanded: true,\n  theme: 'HORIZON',\n}\n\nfor (const key in defaultValues) {\n  const currentValue = localStorage.getItem(key);\n  if (currentValue) continue;\n  \n  localStorage.setItem(key, defaultValues[key].toString());\n}\n\nexport function getConfig(key: ConfigKey): boolean {\n  return localStorage.getItem(key as string) == 'true';\n}\nexport function getConfigValue(key: ConfigKey): string {\n  return localStorage.getItem(key as string);\n}\nexport function setConfig(key: ConfigKey, value: any) {\n  localStorage.setItem(key as string, value.toString());\n}\n\ntype ConfigKey = keyof typeof defaultValues;\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { timestamp } from '../utils/utils';\n\n@Pipe({\n  name: 'timestamp'\n})\nexport class TimestampPipe implements PipeTransform {\n  transform(value: Date): string {\n    return timestamp(value);\n  }\n}\n","import { Injectable } from '@angular/core';\r\nimport { getConfigValue, setConfig } from '../config';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class ThemeService {\r\n  public get defaultTheme() {\r\n    return getConfigValue('theme');\r\n  }\r\n\r\n  public changeTheme(theme: string) {\r\n    setConfig('theme', theme);\r\n\r\n    this.updateTheme();\r\n  }\r\n\r\n  public updateTheme() {\r\n    document\r\n      .querySelector('html')\r\n      .setAttribute('theme', getConfigValue('theme'));\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-why',\n  templateUrl: './why.component.html',\n  styleUrls: ['./why.component.css']\n})\nexport class WhyComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'snakeToSentenceCase'\r\n})\r\nexport class SnakeToSentenceCasePipe implements PipeTransform {\r\n  transform(words: string) {\r\n    return words\r\n      ?.split('_')\r\n      .map(w => w[0] + w.slice(1).toLowerCase())\r\n      .join(' ') ?? '';\r\n  }\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule, ErrorHandler, Injectable } from '@angular/core';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { ShowOnDirtyErrorStateMatcher, ErrorStateMatcher } from '@angular/material/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { NavbarComponent } from './components/navbar/navbar.component';\r\nimport { AuthComponent } from './authentication/auth/auth.component';\r\nimport { LoginComponent } from './authentication/login/login.component';\r\nimport { LogoutComponent } from './authentication/logout/logout.component';\r\nimport { DashboardOverviewComponent } from './dashboard/me/me-overview/me-overview.component';\r\nimport { SidebarComponent } from './dashboard/components/sidebar/sidebar.component';\r\nimport { GuildOverviewComponent } from './dashboard/guilds/guild-overview/guild-overview.component';\r\nimport { SpinnerComponent } from './utils/spinner/spinner.component';\r\nimport { HomeComponent } from './pages/home/home.component';\r\nimport { GuildSidebarComponent } from './dashboard/guilds/guild-sidebar/guild-sidebar.component';\r\nimport { MeSidebarComponent } from './dashboard/me/me-sidebar/me-sidebar.component';\r\nimport { MaterialModule } from './material-module';\r\nimport { SaveChangesComponent } from './dashboard/components/save-changes/save-changes.component';\r\nimport { NotFoundComponent } from './pages/not-found/not-found.component';\r\nimport { CleanDateTimePipe } from './pipes/clean-date-time.pipe';\r\nimport { MemberUsernameComponent } from './dashboard/components/member-username/member-username.component';\r\nimport { ZippyComponent } from './utils/zippy/zippy.component';\r\nimport { MiniDatePipe } from './pipes/mini-date.pipe';\r\nimport { environment } from 'src/environments/environment';\r\nimport { SnakeToSentenceCasePipe } from './pipes/snake-to-sentence-case.pipe';\r\nimport { TruncatedPipe } from './pipes/truncated.pipe';\r\nimport { DurationStringPipe } from './pipes/duration-string.pipe';\r\nimport { CamelToSentenceCasePipe } from './pipes/camel-to-sentence-case.pipe';\r\nimport { WavesComponent } from './utils/waves/waves.component';\r\nimport { SignUpComponent } from './authentication/sign-up/sign-up.component';\r\nimport { DashboardNavbarComponent } from './dashboard/components/dashboard-navbar/dashboard-navbar.component';\r\nimport { TextChannelComponent } from './dashboard/guilds/text-channel/text-channel.component';\r\nimport { VoiceChannelComponent } from './dashboard/guilds/voice-channel/voice-channel.component';\r\nimport { CreateInviteComponent } from './dialog/create-invite/create-invite.component';\r\nimport { InfiniteScrollModule } from 'ngx-infinite-scroll';\r\nimport { PickerModule } from '@ctrl/ngx-emoji-mart';\r\nimport { GuildSettingsComponent } from './dashboard/guilds/guild-settings/overview/guild-settings.component';\r\nimport { RolesComponent } from './dashboard/guilds/guild-settings/roles/roles.component';\r\nimport { InvitesComponent } from './dashboard/guilds/guild-settings/invites/invites.component';\r\nimport { FriendsListComponent } from './dashboard/me/friends-list/friends-list.component';\r\nimport { DMComponent } from './dashboard/me/dmchannel/dm.component';\r\nimport { UserSettingsComponent } from './dashboard/me/user-settings/user-settings.component';\r\nimport { BotListComponent } from './dashboard/guilds/guild-settings/bot-list/bot-list.component';\r\nimport { MessageEmbedComponent } from './dashboard/messages/message-embed/message-embed.component';\r\nimport { MessageComponent } from './dashboard/messages/message/message.component';\r\nimport { MemberListComponent } from './dashboard/guilds/member-list/member-list.component';\r\nimport { DevelopersComponent } from './pages/developers/developers.component';\r\nimport { ApplicationComponent } from './pages/developers/application/application.component';\r\nimport { BotUserComponent } from './pages/developers/bot-user/bot-user.component';\r\nimport { AvatarUrlComponent } from './dashboard/components/avatar-url/avatar-url.component';\r\nimport { VerifyComponent } from './authentication/verify/verify.component';\r\nimport { UserAccountComponent } from './dashboard/me/user-account/user-account.component';\r\nimport { SettingsSidebarComponent } from './dashboard/components/settings-sidebar/settings-sidebar.component';\r\nimport { SubmarineComponent } from './cool/submarine/submarine.component';\r\nimport { InviteComponent } from './pages/invite/invite.component';\r\nimport { CountdownPipe } from './countdown.pipe';\r\nimport { CreateChannelComponent } from './dialog/create-channel/create-channel.component';\r\nimport { CreateGuildComponent } from './dialog/create-guild/create-guild.component';\r\nimport { ComingSoonComponent } from './utils/coming-soon/coming-soon.component';\r\nimport { LighthouseComponent } from './cool/lighthouse/lighthouse.component';\r\nimport { ChannelTabComponent } from './dashboard/components/channel-tab/channel-tab.component';\r\nimport { GuildNavbarComponent } from './dashboard/components/guild-navbar/guild-navbar.component';\r\nimport { ProfileComponent } from './dialog/profile/profile.component';\r\nimport { GuildIconComponent } from './dashboard/components/guild-icon/guild-icon.component';\r\nimport { AddFriendComponent } from './dialog/add-friend/add-friend.component';\r\nimport { WhyComponent } from './pages/why/why.component';\r\nimport { TimestampPipe } from './pipes/timestamp.pipe';\r\n\r\n@Injectable()\r\nexport class AlertErrorHandler implements ErrorHandler {\r\n  async handleError(error: Error) {\r\n    try {\r\n      console.log(error.stack);\r\n\r\n      const key = localStorage.getItem('key');\r\n      await fetch(`${environment.endpoint}/error?key=${key}`, {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ message: error.message }),\r\n      });\r\n    } finally {\r\n      throw error;\r\n    }\r\n  }\r\n}\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    NavbarComponent,\r\n    HomeComponent,\r\n    AuthComponent,\r\n    LoginComponent,\r\n    LogoutComponent,\r\n    DashboardOverviewComponent,\r\n    SidebarComponent,\r\n    GuildOverviewComponent,\r\n    SpinnerComponent,\r\n    GuildSidebarComponent,\r\n    MeSidebarComponent,\r\n    SaveChangesComponent,\r\n    NotFoundComponent,\r\n    CleanDateTimePipe,\r\n    MemberUsernameComponent,\r\n    ZippyComponent,\r\n    MiniDatePipe,\r\n    SnakeToSentenceCasePipe,\r\n    TruncatedPipe,\r\n    DurationStringPipe,\r\n    CamelToSentenceCasePipe,\r\n    MessageComponent,\r\n    WavesComponent,\r\n    LoginComponent,\r\n    SignUpComponent,\r\n    DashboardNavbarComponent,\r\n    TextChannelComponent,\r\n    VoiceChannelComponent,\r\n    CreateInviteComponent,\r\n    MessageEmbedComponent,\r\n    GuildSettingsComponent,\r\n    RolesComponent,\r\n    InvitesComponent,\r\n    FriendsListComponent,\r\n    DMComponent,\r\n    UserSettingsComponent,\r\n    BotListComponent,\r\n    MemberListComponent,\r\n    DevelopersComponent,\r\n    ApplicationComponent,\r\n    BotUserComponent,\r\n    AvatarUrlComponent,\r\n    VerifyComponent,\r\n    UserAccountComponent,\r\n    SettingsSidebarComponent,\r\n    SubmarineComponent,\r\n    InviteComponent,\r\n    CountdownPipe,\r\n    CreateChannelComponent,\r\n    CreateGuildComponent,\r\n    ComingSoonComponent,\r\n    LighthouseComponent,\r\n    ChannelTabComponent,\r\n    GuildNavbarComponent,\r\n    ProfileComponent,\r\n    GuildIconComponent,\r\n    AddFriendComponent,\r\n    WhyComponent,\r\n    TimestampPipe,\r\n  ],\r\n  imports: [\r\n    AppRoutingModule,\r\n    BrowserModule.withServerTransition({ appId: 'serverApp' }),\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    BrowserAnimationsModule,\r\n    HttpClientModule,\r\n    MaterialModule,\r\n    InfiniteScrollModule,\r\n    PickerModule\r\n  ],\r\n  providers: [\r\n    { provide: ErrorHandler, useClass: AlertErrorHandler },\r\n    { provide: ErrorStateMatcher, useClass: ShowOnDirtyErrorStateMatcher },\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule {}\r\n","<navbar></navbar>\n\n<waves></waves>\n\n<section class=\"main\">\n  <div *ngIf=\"guild && userService.self\" class=\"text-center\">\n    <p class=\"lead\">You have been invited to</p>\n    <h1>{{ guild._id }}</h1>\n    <hr>\n    <button (click)=\"join()\" class=\"bg-primary\" mat-button>Join</button>\n  </div>\n\n  <div *ngIf=\"guild && !userService.self\" >\n    <p class=\"lead\">You have been invited to</p>\n    <h1>{{ guild._id }}</h1>\n    <hr>\n    <button [routerLink]=\"'/sign-up&redirect=/invite/' + invite._id\" class=\"bg-success\" mat-button>Join</button>\n  </div>\n  \n  <div *ngIf=\"!guild\" class=\"text-center\">\n    <p class=\"lead\">This invite is</p>\n    <h1 class=\"text-danger\">Invalid</h1>\n  </div>\n\n  <app-submarine></app-submarine>\n</section>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { GuildService } from 'src/app/services/guild.service';\nimport { InviteService } from 'src/app/services/invite.service';\nimport { UserService } from 'src/app/services/user.service';\nimport { WSService } from 'src/app/services/ws.service';\nimport { Lean } from 'src/app/types/entity-types';\n\n@Component({\n  selector: 'app-invite',\n  templateUrl: './invite.component.html',\n  styleUrls: ['./invite.component.css']\n})\nexport class InviteComponent implements OnInit {\n  public guild: Lean.Guild;\n  public invite: Lean.Invite;\n\n  constructor(\n    public route: ActivatedRoute,\n    public router: Router,\n    public guildService: GuildService,\n    public userService: UserService,\n    public invites: InviteService,\n    private ws: WSService,\n  ) {}\n\n  public async ngOnInit() {\n    const code = this.route.snapshot.paramMap.get('id');\n    const invite = await this.invites.fetch(code);\n\n    if (this.guildService.getAsync(invite.guildId))\n      return this.router.navigate([`/channels/${invite.guildId}`]);\n  }\n\n  public join() {\n    this.ws.on('GUILD_JOIN', (args) =>\n      this.guildService.upsert(args.guild._id, args.guild), this);\n\n    this.ws.emit('GUILD_MEMBER_ADD', { inviteCode: this.invite._id }, this);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { ChannelService } from '../services/channel.service';\nimport { UserService } from '../services/user.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DMChannelAuthGuard implements CanActivate {\n  constructor(\n    private channelService: ChannelService,\n    private router: Router,\n    private userService: UserService) {}\n\n  public async canActivate(route: ActivatedRouteSnapshot) {\n    await this.userService.init();\n    await this.channelService.init();\n\n    const channelId = route.paramMap.get('channelId');\n    const dmChannelExists = this.channelService.dmChannels.find(c => c._id === channelId);\n      \n    if (!dmChannelExists) {\n      this.router.navigate(['/channels/@me']);\n      return true;\n    }\n    return true;\n  }\n  \n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { UserAuthService } from 'src/app/services/user-auth.service';\n\n@Component({\n  selector: 'app-verify',\n  templateUrl: './verify.component.html',\n  styleUrls: ['./verify.component.css']\n})\nexport class VerifyComponent implements OnInit {\n  public processing = false;\n\n  public form = new FormGroup({\n    code: new FormControl('', [\n      Validators.required,\n      Validators.minLength(7),\n      Validators.maxLength(7),\n    ])\n  });\n\n  constructor(\n    private authService: UserAuthService,\n    private route: ActivatedRoute,\n    private router: Router,\n  ) {}\n\n  public async ngOnInit() {\n    const code = this.route.snapshot.queryParamMap.get('code');\n    if (code) {\n      this.form.get('code').setValue(code);\n      await this.submit();\n    }\n  }\n\n  public async submit() {\n    try {\n      if (this.form.invalid) return;\n  \n      const code = this.form.get('code').value;\n      const key = await this.authService.verify(code);\n      localStorage.setItem('key', key);\n\n      await this.router.navigate(['/channels/@me']);\n    } catch (error) {\n      this.form.setErrors({ invalidCode: error.message });\n    }\n  }\n}\n","<navbar></navbar>\n\n<header class=\"text-center\">\n  <h1 class=\"mt-5\">Enter Code</h1>\n  <p class=\"lead\">Check the email associated with this account for the verification code.</p>\n</header>\n\n<section class=\"text-center\">\n  <form \n  #f=\"ngForm\"\n  [formGroup]=\"form\"\n  (ngSubmit)=\"submit()\">\n    <mat-form-field appearance=\"outline\">\n      <mat-label>Code</mat-label>\n      <input formControlName=\"code\" type=\"text\" matInput>\n    </mat-form-field>\n\n    <div>\n      <div\n        *ngIf=\"form.errors?.invalidCode\"\n        class=\"text-danger m-2\">Code is invalid</div>\n    \n      <button\n        *ngIf=\"!processing\"\n        color=\"success\"\n        mat-button>Verify</button>\n    </div>\n  </form>\n</section>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { DevelopersService } from 'src/app/services/developers.service';\nimport { UserService } from 'src/app/services/user.service';\nimport { environment } from 'src/environments/environment';\n\n@Component({\n  selector: 'app-developers',\n  templateUrl: './developers.component.html',\n  styleUrls: ['./developers.component.css']\n})\nexport class DevelopersComponent implements OnInit {\n  public applications = [];\n  public environment = environment;\n\n  constructor(\n    private router: Router,\n    private service: DevelopersService,\n    public userService: UserService,\n  ) {}\n\n  public async ngOnInit() {\n    this.applications = await this.service.fetchAll();\n  }\n\n  public async create() {\n    try {\n      const app = await this.service.create();\n      \n      await this.router.navigate([`/developers/applications/`, app?._id]);\n    } catch (apiError) {\n      alert(apiError.message);\n    }\n  }\n\n  public getAbbr(name: string) {\n    return name\n      .split(' ')\n      .map(n => n[0].toUpperCase())\n      .slice(0, 3)\n      .join('');\n  }\n}\n","<div class=\"row\">\n  <div class=\"col-3\">\n    <div class=\"developer-sidebar\">\n      <header\n        routerLink=\"/developers\"\n        class=\"cursor-pointer my-5\">\n        <img src=\"/assets/img/icon.png\" alt=\"Accord Icon\">\n        <span class=\"p-2\">Developer Dashboard</span>\n      </header>\n      \n      <nav class=\"side-nav mt-3\">\n        <a routerLinkActive=\"active\"\n          class=\"nav-link\"\n          routerLink=\"/developers\">\n          <i class=\"lni lni-code pt-2\"></i>\n          <span>Apps</span>\n        </a>\n        <a routerLinkActive=\"active\"\n          class=\"nav-link\"\n          [href]=\"environment.docsURL\"\n          target=\"#\">\n          <i class=\"lni lni-library-open pt-2\"></i>\n          <span>Docs</span>\n        </a>\n      </nav>\n    </div>\n  </div>\n\n  <div class=\"col-8\">\n    <div class=\"row mt-2\">\n      <div class=\"col-10\"></div>\n      <div class=\"col-2\">\n        <button mat-button [matMenuTriggerFor]=\"menu\" class=\"p-1\">\n          <app-avatar-url [user]=\"userService.self\"></app-avatar-url>\n          <span class=\"pl-1\">{{ userService.self.username }}</span>\n        </button>\n      </div>\n    </div>\n\n    <mat-menu #menu=\"matMenu\">\n      <button routerLink=\"/channels/@me\" mat-menu-item>\n        <i class=\"lni lni-cog\"></i> Open\n      </button>\n      <hr>\n      <button routerLink=\"/developers\" mat-menu-item>\n        <i class=\"lni lni-code\"></i> Developers\n      </button>\n      <button routerLink=\"/logout\" mat-menu-item>\n        <i class=\"lni lni-sign-out-alt\"></i> Logout\n      </button>\n    </mat-menu>\n    \n    <div class=\"applications\">\n      <header class=\"mt-5\">\n        <button\n          (click)=\"create()\"\n          class=\"float-right round bg-primary-gradient\"\n          matTooltip=\"New Application\"\n          mat-button>\n          <strong><i class=\"lni lni-plus text-light pt-2\"></i></strong>\n        </button>\n        <h1>Applications</h1>\n        <p class=\"lead\">Manage bot applications in the Accord developer dashboard.</p>\n      </header>\n      <div\n        *ngIf=\"applications; else applicationsLoading\"\n        class=\"row pt-2\">\n        <div\n          *ngFor=\"let app of applications\" class=\"col-sm-6 col-lg-3 my-2\"\n          [routerLink]=\"'/developers/applications/' + app._id\">\n          <div\n            [matTooltip]=\"app.name\"\n            class=\"icon rounded-lg cursor-pointer text-center\">{{ getAbbr(app.name) }}</div>\n        </div>\n      </div>\n    </div>\n\n    <ng-template #applicationsLoading>\n      <spinner></spinner>\n    </ng-template>\n  </div>\n</div>\n","import { ActivatedRoute, Router } from '@angular/router';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { SaveChangesComponent } from './save-changes/save-changes.component';\r\nimport { GuildService } from '../../services/guild.service';\r\nimport {  OnDestroy, Directive } from '@angular/core';\r\nimport { MatChipInputEvent } from '@angular/material/chips';\r\nimport { Subscription } from 'rxjs';\r\nimport { WSService } from '../../services/ws.service';\r\nimport { LogService } from '../../services/log.service';\r\nimport { Lean } from 'src/app/types/entity-types';\r\n\r\n@Directive()\r\nexport abstract class ModuleConfig implements OnDestroy {\r\n  public form: FormGroup;\r\n  public guild: Lean.Guild;\r\n  public originalGuild: Lean.Guild;\r\n\r\n  public get guildId() { return this.route.snapshot.paramMap.get('guildId'); }\r\n\r\n  private saveChanges$: Subscription;  \r\n  private valueChanges$: Subscription;  \r\n  \r\n  constructor(\r\n    protected guildService: GuildService,\r\n    protected route: ActivatedRoute,\r\n    public saveChanges: MatSnackBar,\r\n    protected ws: WSService,\r\n    protected log: LogService,\r\n    protected router: Router) {}\r\n\r\n  /**\r\n   * Load all required data for the form, and hook events.\r\n   */\r\n  public async init() {    \r\n    this.guild = this.guildService.getCached(this.guildId);\r\n    this.originalGuild = { ...this.guild };\r\n    \r\n    await this.resetForm();\r\n\r\n    this.valueChanges$ = this.form.valueChanges\r\n      .subscribe(() => this.openSaveChanges());\r\n  }\r\n\r\n  private async resetForm() {   \r\n    this.guild = { ...this.originalGuild };   \r\n    this.form = await this.buildForm(this.guild);\r\n  }\r\n\r\n  /**\r\n   * Build the form to be used.\r\n   * Called when on form init.\r\n   */\r\n  public abstract buildForm(guild: Lean.Guild): FormGroup | Promise<FormGroup>;\r\n  \r\n  public openSaveChanges() {\r\n    const snackBarRef = this.saveChanges._openedSnackBarRef;\r\n    if (this.form.invalid || snackBarRef) return;\r\n\r\n    this.saveChanges$ = this.saveChanges.openFromComponent(SaveChangesComponent).afterOpened()\r\n    .subscribe(() => {\r\n      const component = this.saveChanges._openedSnackBarRef.instance as SaveChangesComponent;\r\n      component.onSave.subscribe(() => this.submit());\r\n      component.onReset.subscribe(() => this.reset());\r\n    });    \r\n  }\r\n\r\n  /**\r\n   * Clean up subscriptions - to prevent memory leak.\r\n   */  \r\n  public ngOnDestroy() {    \r\n    this.valueChanges$?.unsubscribe();\r\n    this.saveChanges$?.unsubscribe();\r\n  }\r\n\r\n  /** Send the form data to the API. */\r\n  public async submit() {\r\n    try {\r\n      if (!this.form.valid) return;\r\n\r\n      await this.ws.emitAsync('GUILD_UPDATE', {\r\n        guildId: this.guildId,\r\n        partialGuild: this.form.value,\r\n      }, this);\r\n    } catch (error) {\r\n      await this.log.error(error.message);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Reset form values, and rebuild form.\r\n   */\r\n  public async reset() {\r\n    await this.resetForm();\r\n    this.guild = { ...this.originalGuild };\r\n    \r\n    this.form.valueChanges\r\n      .subscribe(() => this.openSaveChanges()); \r\n  }\r\n  \r\n  public async deleteGuild() {\r\n    const confirmation = confirm(`Please confirm that you wish to delete ${this.guild.name}.`);\r\n    if (!confirmation) return;\r\n\r\n    this.guildService.deleteGuild(this.guildId);\r\n\r\n    await this.router.navigate(['/channels/@me']);\r\n    await this.log.success();\r\n  }\r\n\r\n  // input events\r\n\r\n  public add(event: MatChipInputEvent, array: any[]) {    \r\n    const { value, input } = event;\r\n  \r\n    if ((value || '').trim())\r\n      array.push(value.trim());\r\n  \r\n    if (input) \r\n      input.value = '';\r\n\r\n    this.openSaveChanges();\r\n  }\r\n  \r\n  public remove(item: any, array: any[]) {\r\n    const index = array.indexOf(item);\r\n    if (index >= 0)\r\n      array.splice(index, 1);\r\n    \r\n    this.openSaveChanges();\r\n  }\r\n\r\n  public getChannel(id: string) {\r\n    return this.guild.channels.find(c => c._id === id);\r\n  }\r\n}","<guild-sidebar>\r\n  <app-guild-navbar\r\n    [activeChannel]=\"textChannel.channel\"\r\n    [guild]=\"guild\"\r\n    (toggleMemberList)=\"memberList.isExpanded = !memberList.isExpanded\"></app-guild-navbar>\r\n\r\n  <div class=\"row\">\r\n    <div\r\n      class=\"text-channel-container\"\r\n      [class]=\"(memberList.isExpanded) ? 'col-lg-7 col-md-5 col-xl-9': 'col-12'\">\r\n      <section\r\n        *ngIf=\"!activeChannel\"\r\n        class=\"jumbotron\">\r\n        <p class=\"lead\">\r\n          <i class=\"lni lni-directions mr-1\"></i>\r\n          <span>Nothing here yet.</span>\r\n        </p>\r\n        <hr>\r\n        <p>No channels here, just emptiness.</p>\r\n      </section>\r\n\r\n      <app-text-channel #textChannel></app-text-channel>\r\n    </div>\r\n\r\n    <div\r\n      [hidden]=\"!memberList.isExpanded\"\r\n      class=\"col-xl-3 col-lg-5 col-md-7\">\r\n      <app-member-list\r\n        [guild]=\"guild\"\r\n        #memberList></app-member-list>\r\n    </div>\r\n  </div>\r\n</guild-sidebar>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { ChannelService } from 'src/app/services/channel.service';\r\nimport { Lean } from 'src/app/types/entity-types';\r\nimport { GuildService } from '../../../services/guild.service';\r\n\r\n@Component({\r\n  selector: 'app-guild-overview',\r\n  templateUrl: './guild-overview.component.html',\r\n  styleUrls: ['./guild-overview.component.css']\r\n})\r\nexport class GuildOverviewComponent implements OnInit {\r\n  public activeChannel: Lean.Channel;\r\n  public guild: Lean.Guild;\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private channelService: ChannelService,\r\n    private guildService: GuildService,\r\n    private router: Router,\r\n  ) {}\r\n\r\n  public async ngOnInit() {\r\n    this.route.paramMap.subscribe(async (paramMap) => {\r\n      const guildId = paramMap.get('guildId');\r\n      const channelId = paramMap.get('channelId');\r\n\r\n      this.guild = this.guildService.getCached(guildId);\r\n      this.activeChannel = await this.channelService.getAsync(channelId);\r\n      \r\n      const defaultChannel = this.guild.channels.filter(c => c.type === 'TEXT')[0];            \r\n      if (defaultChannel && !channelId)\r\n        await this.router.navigate([`/channels/${guildId}/${defaultChannel._id}`]);\r\n    });\r\n  }\r\n}\r\n","import { AfterViewInit, Component, OnInit, ViewChild } from '@angular/core';\nimport { ActivatedRoute, ParamMap } from '@angular/router';\nimport { ChannelService } from 'src/app/services/channel.service';\nimport { UserService } from 'src/app/services/user.service';\nimport { Lean } from 'src/app/types/entity-types';\nimport { TextChannelComponent } from '../../guilds/text-channel/text-channel.component';\n\n@Component({\n  selector: 'app-dm',\n  templateUrl: './dm.component.html',\n  styleUrls: ['./dm.component.css']\n})\nexport class DMComponent implements OnInit {\n  public activeChannel: Lean.Channel;\n\n  constructor(\n    private route: ActivatedRoute,\n    public channelService: ChannelService,\n  ) {}\n\n  public async ngOnInit() {\n    this.route.paramMap.subscribe(async (paramMap) => {\n      const channelId = paramMap.get('channelId');\n      this.activeChannel = this.channelService.getCached(channelId);\n    });\n  }\n}\n","<dashboard-sidebar>\n  <dashboard-navbar>      \n    <i class=\"fas fa-at pr-2 text-muted\"></i>\n    <strong>me</strong>\n\n    <i class=\"lni lni-plus mx-2\"></i>\n    <i class=\"fas fa-at pr-2 text-muted\"></i>\n    <strong>{{ channelService.getRecipient(activeChannel._id)?.username }}</strong>\n  </dashboard-navbar>\n\n  <app-text-channel></app-text-channel>\n</dashboard-sidebar>\n","<div\n  *ngIf=\"perms.can(guild._id, 'VIEW_CHANNELS')\"\n  #menuTrigger=\"matMenuTrigger\"\n  [matMenuTriggerFor]=\"channelMenu\"\n  (contextmenu)=\"openMenu($event, menuTrigger)\">\n  <div *ngIf=\"channel.type === 'TEXT'\">\n    <a (click)=\"$event.stopPropagation()\"\n      class=\"nav-item nav-link\"\n      [routerLink]=\"'/channels/' + guild._id + '/' + channel._id\"\n      routerLinkActive=\"active\">        \n      <span class=\"float-right text-muted p-1\">\n        <i *ngIf=\"pings.isUnread(channel._id)\"\n          matTooltip=\"Unread Pings\"\n          class=\"lni lni-circle\"></i>\n      </span>\n    \n      <i class=\"fas fa-hashtag pr-1\"\n        [ngClass]=\"{\n          'text-muted': userService.self.ignored.channelIds.includes(channel._id),\n          'text-warning': pings.isUnread(channel._id)\n        }\"></i>\n      <span>{{ channel.name }}</span>\n      <span *ngIf=\"pings.isUnread(channel._id)\" class=\"ml-2\">\n        <i class=\"lni lni-circle text-danger\"></i>\n      </span>\n    </a>\n  </div>\n    \n  <div *ngIf=\"channel.type === 'VOICE'\">\n    <voice-channel\n      (click)=\"$event.stopPropagation()\"\n      [channel]=\"channel\"\n      [guild]=\"guild\"></voice-channel>\n  </div>\n</div>\n\n<mat-menu\n  #channelMenu=\"matMenu\"\n  matMenuContent>\n  <h6 class=\"p-2 text-center\">#{{ channel.name }}</h6>\n\n  <div (click)=\"$event.stopPropagation()\">\n    <button\n      *ngIf=\"perms.can(guild._id, 'MANAGE_CHANNELS')\"\n      (click)=\"delete()\"\n      class=\"text-danger\"\n      mat-menu-item>\n      <i class=\"lni lni-trash\" aria-hidden=\"true\"></i>\n      <span class=\"ml-2\">Delete</span>\n    </button>\n    \n    <hr>\n    <div class=\"p-2\">\n      <i class=\"lni lni-dev\"></i>\n      <code> {{ channel._id }}</code>\n    </div>\n  </div>\n</mat-menu>\n","import { Component, Input } from '@angular/core';\nimport { MatMenuTrigger } from '@angular/material/menu';\nimport { Router } from '@angular/router';\nimport { GuildService } from 'src/app/services/guild.service';\nimport { LogService } from 'src/app/services/log.service';\nimport { PermissionsService } from 'src/app/services/permissions.service';\nimport { PingService } from 'src/app/services/ping.service';\nimport { UserService } from 'src/app/services/user.service';\nimport { WSService } from 'src/app/services/ws.service';\nimport { Lean } from 'src/app/types/entity-types';\n\n@Component({\n  selector: 'app-channel-tab',\n  templateUrl: './channel-tab.component.html',\n  styleUrls: ['./channel-tab.component.css']\n})\nexport class ChannelTabComponent {\n  @Input() public channel: Lean.Channel;\n\n  public get guild() {\n    return this.guildService.getCached(this.channel.guildId);\n  }\n\n  constructor(\n    private guildService: GuildService,\n    public perms: PermissionsService,\n    public pings: PingService,\n    public router: Router,\n    public userService: UserService,\n    private ws: WSService,\n  ) {}\n\n  public openMenu(event: MouseEvent, menuTrigger: MatMenuTrigger) {\n    event.preventDefault();\n    menuTrigger.menu.focusFirstItem('mouse');\n    menuTrigger.openMenu();\n  }\n\n  public async delete() {\n    const confirmation = confirm(\n      `Are you sure you want to delete channel '${this.channel.name}'?\\n` +\n      `Messages here will also be deleted, and cannot be recovered.`\n      .trim());\n    if (!confirmation) return;\n\n    await this.ws.emitAsync('CHANNEL_DELETE', { channelId: this.channel._id }, this);\n    await this.router.navigate([`/channels/${this.guild._id}`]);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-coming-soon',\n  templateUrl: './coming-soon.component.html',\n  styleUrls: ['./coming-soon.component.css']\n})\nexport class ComingSoonComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<navbar></navbar>\n\n<app-lighthouse></app-lighthouse>\n<waves></waves>\n\n<section class=\"main\">\n  <div class=\"text-center\">\n    <h1>Coming Soon</h1>\n    <h2 class=\"text-secondary\">...</h2>\n  </div>\n\n  <app-submarine></app-submarine>\n</section>\n","import { Injectable } from '@angular/core';\nimport { ChannelEventService } from './channel-event.service';\nimport { MyEventService } from './my-event.service';\nimport { WSService } from '../ws.service';\nimport { GuildEventService } from './guild-event.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EventService {\n  constructor(\n    private me: MyEventService,\n    private channels: ChannelEventService,\n    private guilds: GuildEventService,\n    private ws: WSService,\n  ) {}\n\n  public init() {\n    this.ws\n      .on('ADD_FRIEND', this.me.addFriend, this.me)\n      .on('CHANNEL_CREATE', this.guilds.addChannel, this.guilds)\n      .on('CHANNEL_DELETE', this.guilds.deleteChannel, this.guilds)\n      .on('GUILD_DELETE', this.guilds.delete, this.guilds)\n      .on('GUILD_JOIN', this.me.joinGuild, this.me)\n      .on('GUILD_LEAVE', this.guilds.delete, this.guilds)\n      .on('GUILD_MEMBER_ADD', this.guilds.addMember, this.guilds)\n      .on('GUILD_MEMBER_UPDATE', this.guilds.updateMember, this.guilds)\n      .on('GUILD_MEMBER_REMOVE', this.guilds.removeMember, this.guilds)\n      .on('GUILD_ROLE_CREATE', this.guilds.createRole, this.guilds)\n      .on('GUILD_ROLE_DELETE', this.guilds.deleteRole, this.guilds)\n      .on('GUILD_ROLE_UPDATE', this.guilds.updateRole, this.guilds)\n      .on('GUILD_UPDATE', this.guilds.update, this.guilds)\n      .on('MESSAGE_CREATE', this.channels.addMessage, this.channels)\n      .on('MESSAGE_UPDATE', this.channels.updateMessage, this.channels)\n      .on('MESSAGE_DELETE', this.channels.deleteMessage, this.channels)\n      .on('PING', this.channels.ping, this.channels)\n      .on('PRESENCE_UPDATE', this.me.updatePresence, this.me)\n      .on('REMOVE_FRIEND', this.me.updateFriends, this.me)\n      .on('TYPING_START', this.channels.startTyping, this.channels)\n      .on('USER_UPDATE', this.me.updateUser, this.me);\n  }\n}","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'truncated'\r\n})\r\nexport class TruncatedPipe implements PipeTransform {\r\n\r\n  transform(words: string, max: number) {\r\n    return words.substring(0, max) + '...';\r\n  }\r\n}\r\n","import { AfterViewInit, Component, OnInit, ViewChild } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { MatSelect } from '@angular/material/select';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { LogService } from 'src/app/services/log.service';\nimport { ThemeService } from 'src/app/services/theme.service';\nimport { UserService } from 'src/app/services/user.service';\nimport { WSService } from 'src/app/services/ws.service';\nimport { UsernameValidators } from 'src/app/authentication/sign-up/username.validators';\nimport { UserConfig } from 'src/app/dashboard/components/user-config';\nimport { environment } from 'src/environments/environment';\nimport { Lean, patterns } from 'src/app/types/entity-types';\nimport faker from 'faker';\nimport { getConfig, setConfig } from 'src/app/config';\n\n@Component({\n  selector: 'app-user-settings',\n  templateUrl: './user-settings.component.html',\n  styleUrls: ['./user-settings.component.css'],\n})\nexport class UserSettingsComponent extends UserConfig implements AfterViewInit {\n  @ViewChild('themeSelect')\n  public themeSelect: MatSelect;\n  public environment = environment;\n  public previewMessages: Lean.Message[] = [];\n\n  public readonly avatarNames = [\n    'avatar_aqua',\n    'avatar_coffee',\n    'avatar_fire',\n    'avatar_gold',\n    'avatar_grey',\n    'avatar_rainbow',\n    'avatar_sky',\n    'avatar_tree',\n  ];\n\n  public get avatarUser() {\n    return {\n      avatarURL: this.form.get('avatarURL').value,\n      username: this.user.username,\n    };\n  }\n  public get currentTheme() {\n    return localStorage.getItem('theme');\n  }\n  public get sfxEnabled() {\n    return getConfig('sfxEnabled');\n  }\n\n  constructor(\n    route: ActivatedRoute,\n    router: Router,\n    userService: UserService,\n    snackbar: MatSnackBar,\n    ws: WSService,\n    log: LogService,\n    public themes: ThemeService,\n    private usernameValidators: UsernameValidators,\n  ) {\n    super(userService, route, snackbar, ws, log, router);\n  }\n\n  public async ngAfterViewInit() {\n    await super.init();\n\n    const messageCount = 3;\n    for (let i = 0; i < messageCount; i++)\n      this.previewMessages.push({\n        authorId: this.user._id,\n        content: faker.lorem.sentence(),\n        channelId: '',\n        createdAt: new Date(),\n      } as any);      \n\n    this.themeSelect\n      ?.writeValue(localStorage\n        .getItem('theme') ?? this.themes.defaultTheme);\n\n    this.themes.updateTheme();    \n  }\n\n  public buildForm(user: Lean.User): FormGroup | Promise<FormGroup> {\n    return new FormGroup({\n      avatarURL: new FormControl(user.avatarURL, [\n        Validators.required,\n      ]),\n      username: new FormControl(user.username, [\n        Validators.required,\n        Validators.maxLength(32),\n        Validators.pattern(patterns.username),\n      ], [ this.usernameValidators.shouldBeUnique.bind(this.usernameValidators) ]),\n    });\n  }\n\n  public toggleSounds(enabled: boolean) {\n    setConfig('sfxEnabled', enabled);\n  }\n\n  public setAvatar(name: string) {        \n    this.form\n      .get('avatarURL')\n      .setValue(`${environment.endpoint}/avatars/${name}.png`);\n  }\n}\n","<app-settings-sidebar\n  *ngIf=\"user\"\n  tabType=\"user\">\n  <div class=\"content\">\n    <h5 class=\"mb-4\">User Overview</h5>\n    <div class=\"row\">\n      <div class=\"col-xl-6 col-12\">\n        <div\n          routerLinkActive=\"active\"\n          class=\"user-icon round\">\n          <app-avatar-url\n            class=\"pl-2 pb-3 ml-4 mt-3\"\n            [user]=\"avatarUser\"\n            size=\"128px\"></app-avatar-url>\n        </div>\n\n        <form\n          *ngIf=\"form\"\n          #f=\"ngForm\"\n          [formGroup]=\"form\">\n          <mat-form-field appearance=\"outline\" class=\"ml-5\">\n            <mat-label>Avatar URL</mat-label>\n            <input formControlName=\"avatarURL\" type=\"url\" matInput>\n          </mat-form-field>\n\n          <mat-form-field appearance=\"outline\" class=\"ml-5\">\n            <mat-label>Username</mat-label>\n            <input formControlName=\"username\" type=\"text\" matInput>\n            <mat-hint *ngIf=\"form.get('username').pending\"><i class=\"lni lni-circle-notch fa-spin\"></i> Checking</mat-hint>\n            <mat-error *ngIf=\"form.get('username').errors?.required\">Username is required.</mat-error>\n            <mat-error *ngIf=\"form.get('username').errors?.minlength\">Username should be minimum {{ form.get('username').errors?.minlength.requiredLength }} characters.</mat-error>\n            <mat-error *ngIf=\"form.get('username').errors?.shouldBeUnique\">Username is already taken.</mat-error>\n            <mat-error *ngIf=\"form.get('username').errors?.pattern\">Username should follow the <a routerLink=\"/docs/usernames\">username rules</a>.</mat-error>\n          </mat-form-field>\n        </form>\n      </div>\n\n      <div class=\"col-lg-6 col-12\">\n        <div class=\"avatars rounded p-3\">\n          <div class=\"row\">\n            <div class=\"col-12\">\n              <h5 class=\"pl-2\">Choose an Avatar</h5>\n            </div>\n            <div\n              *ngFor=\"let name of avatarNames\"\n              class=\"col-xl-3 col-sm-4 col-12\">\n              <img (click)=\"setAvatar(name)\"\n                [src]=\"environment.endpoint + '/avatars/' + name + '.png'\" [alt]=\"name\">\n            </div>\n          </div>\n        </div>\n      </div>\n      \n      <div class=\"col-lg-6 col-12 mt-4\">\n        <h6>Message Preview</h6>\n        <message\n          [message]=\"previewMessages[0]\"\n          [avatarURL]=\"form.get('avatarURL').value\"></message>\n        <message\n          [message]=\"previewMessages[1]\"\n          [isExtra]=\"true\"\n          [avatarURL]=\"form.get('avatarURL').value\"></message>\n        <message\n          [message]=\"previewMessages[2]\"\n          [avatarURL]=\"form.get('avatarURL').value\"></message>\n      </div>\n    </div>\n\n    <hr>\n\n    <div class=\"row\">\n      <div class=\"col-lg-3 col-md-4 col-6\">    \n        <mat-form-field appearance=\"outline\" class=\"ml-3 m-2\">\n          <mat-label>Theme</mat-label>\n          <mat-select\n            [value]=\"currentTheme\"\n            (selectionChange)=\"themes.changeTheme(themeSelect.value)\"\n            #themeSelect>\n              <mat-option value=\"CHOCOLATE\">Chocolate</mat-option>\n              <mat-option value=\"CLONE\">Clone</mat-option>\n              <mat-option value=\"COSMIC\">Cosmic</mat-option>\n              <mat-option value=\"DISCORD\">Discord</mat-option>\n              <mat-option value=\"HORIZON\">Horizon (Default)</mat-option>\n              <mat-option value=\"IONIC\" selected>Ionic</mat-option>\n              <mat-option value=\"PAIN\">Pain</mat-option>\n              <mat-option value=\"TWILIGHT\">Twilight</mat-option>\n          </mat-select>\n        </mat-form-field>\n      </div>\n  \n      <div class=\"col-lg-3 col-md-4 col-6\">\n        <div class=\"pt-4\">\n          <label for=\"sfxEnabled\">Enable Sound Effects</label>\n          <mat-checkbox\n            id=\"sfxEnabled\"\n            (input)=\"toggleSounds(sfxEnabledInput.checked)\"\n            [checked]=\"sfxEnabled\"\n            class=\"ml-2\"\n            #sfxEnabledInput></mat-checkbox>\n        </div>\n      </div>\n    </div>\n  </div>\n</app-settings-sidebar>\n","// REMEMBER: Sync types below with Website project.\n// -> in entity-types.ts\nexport namespace Lean {\n  export interface Application {\n    _id: string;\n    createdAt: Date;\n    description: string;\n    name: string;\n    owner: User;\n    user: User;\n    token: string | never;\n  }\n  export interface Channel {\n    _id: string;\n    createdAt: Date;\n    guildId?: string;\n    memberIds?: string[];\n    name?: string;\n    summary?: string;\n    type: ChannelTypes.Type;\n  }\n  export interface Guild {\n    _id: string;\n    name: string;\n    createdAt: Date;\n    nameAcronym: string;\n    iconURL?: string;\n    ownerId: string;\n    channels: Channel[];\n    members: GuildMember[];\n    roles: Role[];\n  }\n  export interface GuildMember {\n    _id: string;\n    guildId: string;\n    roleIds: string[];\n    userId: string;\n  }  \n  export interface Invite {\n    _id: string;\n    createdAt: Date;\n    options?: InviteTypes.Options;\n    inviterId: string;\n    guildId: string;\n    uses: number;\n  }  \n  export interface Message {\n    _id: string;\n    authorId: string;\n    channelId: string;\n    content: string;\n    createdAt: Date;\n    embed?: MessageTypes.Embed;\n    updatedAt?: Date;\n  }\n  export interface Role {\n    _id: string;\n    color?: string;\n    createdAt: Date;\n    guildId: string;\n    hoisted: boolean;\n    mentionable: boolean;\n    name: string;\n    permissions: number;\n    position: number;\n  }\n  export interface User {\n    _id: string;\n    avatarURL: string;\n    badges: UserTypes.BadgeType[];\n    bot: boolean;\n    createdAt: Date;\n    friendIds: string[];\n    friendRequestIds: string[];\n    guilds: string[] | Lean.Guild[];\n    status: UserTypes.StatusType;\n    username: string;\n    verified?: boolean;\n  } \n}\n\nexport namespace ChannelTypes {\n  export type Type = 'DM' | 'TEXT' | 'VOICE';\n\n  export interface DM extends Lean.Channel {\n    memberIds: string[];\n    guildId: never;\n    summary: never;\n    type: 'DM';\n  }\n  export interface Text extends Lean.Channel {\n    memberIds: never;\n    type: 'TEXT';\n  }\n  export interface Voice extends Lean.Channel {\n    memberIds: string[];\n    summary: never;\n    type: 'VOICE';\n  }\n}\n\nexport namespace GeneralTypes {\n  export interface SnowflakeEntity {\n    _id: string;\n  }\n}\n\nexport namespace InviteTypes {\n  export interface Options {\n    expiresAt?: Date;\n    maxUses?: number;\n  }\n}\n\nexport namespace MessageTypes {\n  export interface Embed {\n    description: string;\n    image: string;\n    title: string;\n    url: string;\n  }\n}\n\nexport namespace PermissionTypes {\n  export enum General {\n    VIEW_CHANNELS = 1024,\n    MANAGE_NICKNAMES = 512,\n    CHANGE_NICKNAME = 256,\n    CREATE_INVITE = 128,\n    KICK_MEMBERS = 64,\n    BAN_MEMBERS = 32,\n    MANAGE_CHANNELS = 16,\n    MANAGE_ROLES = 8,\n    MANAGE_GUILD = 4,\n    VIEW_AUDIT_LOG = 2,\n    ADMINISTRATOR = 1\n  }\n  export enum Text {\n    ADD_REACTIONS = 2048 * 16,\n    MENTION_EVERYONE = 2048 * 8,\n    READ_MESSAGES = 2048 * 4,\n    MANAGE_MESSAGES = 2048 * 2,\n    SEND_MESSAGES = 2048\n  }\n  export enum Voice {\n    MOVE_MEMBERS = 32768 * 8,\n    MUTE_MEMBERS = 32768 * 4,\n    SPEAK = 32768 * 2,\n    CONNECT = 32768\n  }\n  export const All = {\n    ...General,\n    ...Text,\n    ...Voice,\n  }\n  export type Permission = General | Text | Voice;\n\n  export type PermissionString = keyof typeof All;\n  \n  export const defaultPermissions =\n    PermissionTypes.General.VIEW_CHANNELS\n    | PermissionTypes.General.CREATE_INVITE\n    | PermissionTypes.Text.SEND_MESSAGES\n    | PermissionTypes.Text.READ_MESSAGES\n    | PermissionTypes.Text.ADD_REACTIONS\n    | PermissionTypes.Voice.CONNECT\n    | PermissionTypes.Voice.SPEAK;\n}\n\nexport namespace UserTypes {\n  export type BadgeType = 'VIEWER' | 'DEVELOPER';\n  export class Ignored {\n    channelIds: string[] = [];\n    guildIds: string[] = [];\n    userIds: string[] = [];\n  }\n  export type StatusType = 'ONLINE' | 'BUSY' | 'AFK' | 'OFFLINE';\n  export interface Self extends Lean.User {\n    guilds: Lean.Guild[];\n    email: string;\n    verified: true;\n    lastReadMessages: {\n      [k: string]: string\n    };\n    ignored: {\n      channelIds: string[];\n      guildIds: string[];\n      userIds: string[];\n    };\n  }\n}\n\nexport const patterns = {\n  email: /(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9]))\\.){3}(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9])|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])/,\n  hexColor: /^#(?:[0-9a-fA-F]{3}){1,2}$/,\n  password: /(?=.*[a-zA-Z0-9!@#$%^&*])/,\n  snowflake: /^\\d{18}$/,\n  status: /^ONLINE|^BUSY$|^AFK$|^OFFLINE$/,\n  textChannelName: /^[A-Za-z\\-\\d]{2,32}$/,\n  username: /(^(?! |^everyone$|^here$|^me$|^someone$|^discordtag$)[A-Za-z\\d\\-\\_]{2,32}(?<! )$)/,\n}","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { JwtHelperService } from '@auth0/angular-jwt';\nimport { environment } from 'src/environments/environment';\nimport { UserService } from './user.service';\nimport { WSService } from './ws.service';\n\n@Injectable({ providedIn: 'root' })\nexport class UserAuthService {\n  private endpoint = environment.endpoint;\n\n  public get loggedIn() {\n    const expired = new JwtHelperService().isTokenExpired(this.key);\n    return this.userService.self && !expired;\n  }\n  public get key() {\n    return localStorage.getItem('key');\n  }\n\n  public get headers() {\n    return { headers: { 'Authorization': `Bearer ${this.key}` } };\n  }\n\n  constructor(\n    private http: HttpClient,\n    private userService: UserService,\n    private ws: WSService,\n  ) {}\n\n  public async signUp(user: Credentials) {\n    const res: any = await this.http.post(`${this.endpoint}/users`, user).toPromise();\n\n    if (res) {\n      localStorage.setItem('key', res);\n      await this.userService.updateSelf();\n    }\n    return Boolean(res);\n  }\n\n  public async login(user: Credentials) {\n    const res: string | { verify: true } = await this.http\n      .post(`${this.endpoint}/login`, user)\n      .toPromise() as any;      \n\n    if (typeof res !== 'string')\n      return res;\n\n    localStorage.setItem('key', res);\n    await this.userService.init();\n  }\n\n  public async verify(code: string): Promise<string> {\n    const res: string | { message: string } = await this.http\n      .get(`${this.endpoint}/verify-code?code=${code}`)\n      .toPromise() as any;\n    if (typeof res !== 'string')\n      throw res.message;\n    return res;\n  }\n\n  public async sendVerifyEmail(email: string): Promise<boolean> {\n    const res = await this.http.get(`${this.endpoint}/send-verify-email?email=${email}`, this.headers).toPromise() as any;\n    return 'verify' in res;\n  }\n\n  public async changePassword(email: string, oldPassword: string, newPassword: string): Promise<boolean> {\n    const res = await this.http\n      .post(`${this.endpoint}/change-password`, {\n        email,\n        oldPassword,\n        newPassword,\n      }, this.headers)\n      .toPromise() as any;\n\n    localStorage.setItem('key', res);\n    return true;\n  }\n\n  public ready() {\n    return this.ws.emitAsync('READY', { key: localStorage.getItem('key') }, this);\n  }\n}\n\nexport interface Credentials {\n  username?: string;\n  email?: string;\n  password: string;\n}\n","import { Component, OnInit } from '@angular/core';\r\nimport { UserService } from '../../services/user.service';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Component({\r\n  selector: 'navbar',\r\n  templateUrl: './navbar.component.html',\r\n  styleUrls: ['./navbar.component.css']\r\n})\r\nexport class NavbarComponent implements OnInit {\r\n  githubURL = environment.githubURL;\r\n\r\n  get user() { return this.userService.self; }\r\n\r\n  constructor(private userService: UserService) {}\r\n\r\n  async ngOnInit() {\r\n    await this.userService.init();\r\n  }\r\n}\r\n","<nav class=\"navbar navbar-expand-md\">\r\n  <a class=\"navbar-brand\" routerLink=\"/\">\r\n    <h1>\r\n      <span class=\"text-light\">accord</span>\r\n      <span class=\"text-tertiary\">.</span>\r\n      <span class=\"text-secondary\">app</span>\r\n    </h1>\r\n  </a>\r\n  <button\r\n    class=\"navbar-toggler\"\r\n    type=\"button\"\r\n    data-toggle=\"collapse\"\r\n    data-target=\"#navbarSupportedContent\"\r\n    aria-controls=\"navbarSupportedContent\"\r\n    aria-expanded=\"false\"\r\n    aria-label=\"Toggle navigation\">\r\n    <i class=\"lni lni-menu\"></i>\r\n  </button>\r\n\r\n  <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n    <div class=\"nav navbar-nav\">\r\n      <a class=\"nav-item nav-link\" \r\n        routerLink=\"/docs\" \r\n        routerLinkActive=\"active\">\r\n        <i class=\"lni lni-library\" aria-hidden=\"true\"></i> Docs\r\n      </a>\r\n    </div>\r\n  \r\n    <div class=\"nav navbar-nav ml-auto\">\r\n      <div class=\"d-md-none d-block mt-2\"></div>\r\n      <div *ngIf=\"!user\">\r\n        <a class=\"nav-item nav-link\" routerLink=\"/login\">\r\n          <i class=\"lni lni-user\" aria-hidden=\"true\"></i> Login\r\n        </a>\r\n      </div>\r\n      <div *ngIf=\"user\">\r\n        <mat-button\r\n          class=\"nav-item nav-link bg-primary text-light rounded cursor-pointer mr-3\"\r\n          routerLink=\"/channels/@me\">\r\n          <i class=\"lni lni-chevron-right-circle\" aria-hidden=\"true\"></i>\r\n          <strong> Open</strong>\r\n        </mat-button>     \r\n      </div>\r\n    </div>\r\n  </div>\r\n</nav>\r\n\r\n<mat-menu #menu=\"matMenu\">\r\n  <button routerLink=\"/channels/@me\" mat-menu-item>\r\n    <i class=\"lni lni-cog\"></i> Open\r\n  </button>\r\n  <hr>\r\n  <button routerLink=\"/developers\" mat-menu-item>\r\n    <i class=\"lni lni-code\"></i> Developers\r\n  </button>\r\n  <button routerLink=\"/logout\" mat-menu-item>\r\n    <i class=\"lni lni-sign-out-alt\"></i> Logout\r\n  </button>\r\n</mat-menu>\r\n","import { Injectable } from '@angular/core';\r\nimport { SoundService } from './sound.service';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class LogService {\r\n  private hidePopupMs = 3 * 1000;\r\n\r\n  constructor(\r\n    private sounds: SoundService,\r\n  ) {}\r\n\r\n  private get hhMMSS() {\r\n    return new Date()\r\n      .toTimeString()\r\n      .split(' ')[0];\r\n  }\r\n\r\n  public info(message: string, src?: string) {\r\n    console.log(`%c[${this.hhMMSS}]`, 'color: green', `[${src?.toUpperCase() ?? '???'}]`, `${message}`);\r\n  }\r\n\r\n  public warning(message: string, src?: string) {\r\n    console.log(`%c[${this.hhMMSS}]`, 'color: yellow', `[${src?.toUpperCase() ?? '???'}]`, `${message}`);\r\n  }\r\n\r\n  public async success(message?: string) {\r\n    if (message) {\r\n      const popup = document.querySelector('#successPopup') as HTMLDivElement;\r\n      popup.removeAttribute('hidden');\r\n      popup.innerText = message;\r\n\r\n      setTimeout(() => popup.toggleAttribute('hidden'), this.hidePopupMs);\r\n    }     \r\n\r\n    await this.sounds.success();\r\n  }\r\n\r\n  public async error(message?: string) {\r\n    if (message) {\r\n      const popup = document.querySelector('#errorPopup') as HTMLDivElement;\r\n      popup.removeAttribute('hidden');\r\n      popup.innerText = message;\r\n\r\n      setTimeout(() => popup.toggleAttribute('hidden'), this.hidePopupMs);\r\n    }     \r\n\r\n    await this.sounds.error();\r\n  }\r\n\r\n  public consoleWarning() {\r\n    console.log(`%cAttention!`, `color: red; font-size: 32px; font-weight: 900;`);\r\n    console.log(\r\n      `%cIf someone told you to paste something in this console, it's probably against the TOS and could steal your account.`,\r\n      `color: darkred; font-size: 16px; font-weight: 700;`\r\n    );\r\n  }\r\n}","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'spinner',\r\n  templateUrl: './spinner.component.html',\r\n  styleUrls: ['./spinner.component.css']\r\n})\r\nexport class SpinnerComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div id=\"spinner\" class=\"text-center\">\n  <span></span><span></span><span></span><span></span><span></span>\n</div>","<mat-sidenav-container fullscreen>\r\n  <mat-sidenav mode=\"side\" opened #drawer>\r\n    <div class=\"guilds px-2\">\r\n      <div class=\"user\">\r\n        <div\r\n          routerLinkActive=\"active\"\r\n          routerLink=\"/channels/@me\"\r\n          class=\"guild-icon\">\r\n          <app-avatar-url\r\n            [user]=\"user\"\r\n            [size]=\"'52px'\"></app-avatar-url>\r\n        </div>\r\n        <span class=\"d-flex justify-content-center\">\r\n          <h5 class=\"text-muted\">.</h5>\r\n        </span>\r\n      </div>\r\n      <app-guild-icon\r\n        *ngFor=\"let guild of guilds\"\r\n        [guild]=\"guild\"\r\n        [matTooltip]=\"guild.name\"></app-guild-icon>\r\n      <div\r\n        (click)=\"dialog.createGuild()\"\r\n        class=\"guild-icon add-guild bg-transparent cursor-pointer\"\r\n        matTooltip=\"Add a Guild\">\r\n        <span class=\"add-guild pt-0 d-flex justify-content-center flex-column\">+</span>\r\n      </div>\r\n    </div>\r\n    <div class=\"options\">\r\n      <ng-content select=\".side-nav\"></ng-content>\r\n\r\n      <footer class=\"d-flex\">\r\n        <app-avatar-url\r\n          [user]=\"user\"\r\n          size=\"48px\"\r\n          class=\"pt-2\"></app-avatar-url>\r\n        <h6 class=\"username text-overflow-ellipsis\">{{ user.username }}</h6>\r\n\r\n        <div class=\"ml-auto\">\r\n          <button\r\n            id=\"settingsButton\"\r\n            matTooltip=\"Settings\"\r\n            routerLink=\"/channels/@me/settings\"\r\n            class=\"mr-2 p-2\"\r\n            mat-button>\r\n            <i class=\"lni lni-cog\"></i>          \r\n          </button>\r\n        </div>\r\n      </footer>\r\n    </div>\r\n  </mat-sidenav>\r\n  <mat-sidenav-content>\r\n    <ng-content select=\"#content\"></ng-content>\r\n  </mat-sidenav-content>\r\n</mat-sidenav-container>","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { UserService } from '../../../services/user.service';\r\nimport { GuildService } from '../../../services/guild.service';\r\nimport { MatDrawer } from '@angular/material/sidenav';\r\nimport { ChannelService } from 'src/app/services/channel.service';\r\nimport { PingService } from 'src/app/services/ping.service';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { CreateGuildComponent } from 'src/app/dialog/create-guild/create-guild.component';\r\nimport { DialogService } from 'src/app/services/dialog.service';\r\n\r\n@Component({\r\n  selector: 'sidebar',\r\n  templateUrl: './sidebar.component.html',\r\n  styleUrls: ['./sidebar.component.css']\r\n})\r\nexport class SidebarComponent implements OnInit {\r\n  @ViewChild('drawer') drawer: MatDrawer;\r\n\r\n  get guilds() { return this.guildService.guilds || []; }\r\n  get user() { return this.userService.self; }\r\n\r\n  constructor(\r\n    public channelService: ChannelService,\r\n    public guildService: GuildService,\r\n    private userService: UserService,\r\n    public dialog: DialogService,\r\n  ) {}\r\n\r\n  async ngOnInit() {\r\n    await this.channelService.init();\r\n    await this.guildService.init();\r\n  }\r\n\r\n  public toggle() {\r\n    const icon = document.querySelector('#nav-icon1');\r\n    icon.classList.toggle('open');\r\n    this.drawer.toggle();\r\n  }\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\r\nimport {MatCheckboxModule} from '@angular/material/checkbox';\r\nimport {MatChipsModule} from '@angular/material/chips';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport {MatInputModule} from '@angular/material/input';\r\nimport {MatRippleModule} from '@angular/material/core';\r\nimport {MatPaginatorModule} from '@angular/material/paginator';\r\nimport {MatSidenavModule} from '@angular/material/sidenav';\r\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\r\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\r\nimport {MatSelectModule} from '@angular/material/select';\r\nimport {MatTableModule} from '@angular/material/table';\r\nimport {ColorPickerModule} from 'ngx-color-picker';\r\nimport {CdkTableModule} from '@angular/cdk/table';\r\nimport {DragDropModule} from '@angular/cdk/drag-drop';\r\nimport {MatSortModule} from '@angular/material/sort';\r\nimport {MatSliderModule} from '@angular/material/slider';\r\nimport {MatTooltipModule} from '@angular/material/tooltip';\r\nimport {MatMenuModule} from '@angular/material/menu';\r\nimport {MatCardModule} from '@angular/material/card';\r\nimport {MatDialogModule} from '@angular/material/dialog';\r\n\r\n@NgModule({\r\n  exports: [\r\n    ColorPickerModule,\r\n    CdkTableModule,\r\n    // DragDropModule,\r\n    MatButtonModule,\r\n    MatButtonToggleModule,\r\n    MatChipsModule,\r\n    MatCheckboxModule,\r\n    MatDialogModule,\r\n    MatInputModule,\r\n    MatIconModule,\r\n    MatTableModule,\r\n    MatPaginatorModule,\r\n    MatRippleModule,\r\n    MatSortModule,\r\n    MatSidenavModule,\r\n    MatSliderModule,\r\n    MatSlideToggleModule,\r\n    MatSelectModule,\r\n    MatSnackBarModule,\r\n    MatTooltipModule,\r\n    MatMenuModule,\r\n    MatCardModule,\r\n  ]\r\n})\r\nexport class MaterialModule {}\r\n\r\n\r\n/**  Copyright 2019 Google LLC. All Rights Reserved.\r\n    Use of this source code is governed by an MIT-style license that\r\n    can be found in the LICENSE file at http://angular.io/license */","import { AfterViewInit, Component, ElementRef, Input, OnInit, ViewChild } from '@angular/core';\nimport { Lean } from 'src/app/types/entity-types';\nimport { environment } from 'src/environments/environment';\n\n@Component({\n  selector: 'app-avatar-url',\n  templateUrl: './avatar-url.component.html',\n  styleUrls: ['./avatar-url.component.css']\n})\nexport class AvatarUrlComponent implements AfterViewInit {\n  @Input() public user: Lean.User;\n  @Input() public size = '32px';\n\n  @ViewChild('img')\n  private img: ElementRef;\n\n  private unknownImageURL = `${environment.endpoint}/avatars/unknown.png`;\n\n  public ngAfterViewInit() {\n    const image = this.img.nativeElement as HTMLImageElement;\n    image.onerror = () => image.src = this.unknownImageURL; \n  }\n}\n","<img\n  [src]=\"user.avatarURL\" \n  [alt]=\"user.username + '\\'s Avatar'\"\n  [style.width]=\"size\"\n  [style.height]=\"size\"\n  class=\"d-inline cursor-pointer\"\n  #img>\n","<div class=\"cursor-pointer\" hidden>\n  <a (click)=\"join()\" \n    routerLinkActive=\"active\"\n    class=\"nav-item nav-link\">\n    <i class=\"lni lni-volume-up text-muted\"></i> {{ channel.name }}</a>\n    <div *ngFor=\"let id of channel.memberIds\"\n      class=\"ml-4\">\n      <member-username\n        [user]=\"userService.getCached(id)\"\n        [voice]=\"true\"></member-username>\n    </div>\n</div>","import { Component, Input, OnInit } from '@angular/core';\nimport { UserService } from 'src/app/services/user.service';\nimport { WSService } from 'src/app/services/ws.service';\nimport { ChannelTypes, Lean } from 'src/app/types/entity-types';\n\n@Component({\n  selector: 'voice-channel',\n  templateUrl: './voice-channel.component.html',\n  styleUrls: ['./voice-channel.component.css']\n})\nexport class VoiceChannelComponent implements OnInit {\n  @Input() channel: ChannelTypes.Voice;\n  @Input() guild: Lean.Guild;\n\n  constructor(public userService: UserService) {}\n\n  async ngOnInit() {\n    await this.userService.init();\n  }\n  \n  public async join() {\n    alert('join');\n  }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-lighthouse',\n  templateUrl: './lighthouse.component.html',\n  styleUrls: ['./lighthouse.component.css']\n})\nexport class LighthouseComponent {}\n","<!-- https://codepen.io/chrisota/pen/sugId -->\n<div id=\"lighthouse\">\n  <div id=\"top\"></div>\n  <div id=\"glass\"></div>\n  <div id=\"balcony\"></div>\n  <div class=\"row\"></div>\n  <div class=\"row\"></div>\n  <div class=\"row\"></div>\n  <div class=\"row\"></div>\n</div>\n","import { Component, ElementRef, ViewChild } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { LogService } from 'src/app/services/log.service';\nimport { patterns } from 'src/app/types/entity-types';\nimport { Credentials, UserAuthService } from '../../services/user-auth.service';\nimport { PasswordValidators } from '../sign-up/password.validators';\n\n@Component({\n  selector: 'login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent {\n  @ViewChild('loginWith')\n  public loginWith: ElementRef;\n\n  constructor(\n    private auth: UserAuthService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private log: LogService,\n  ) {}\n\n  public form = new FormGroup({\n    username: new FormControl('', [\n      Validators.pattern(patterns.username),\n    ]),\n    email: new FormControl('', [\n      Validators.pattern(patterns.email),\n    ]),\n    password: new FormControl('', [\n      Validators.required,\n      Validators.pattern(patterns.password),\n    ]),\n  }, [ PasswordValidators.emailOrUsernameRequired ]);\n  processing = false;\n\n  public get email() { return this.form.get('email'); }\n  public get password() { return this.form.get('password'); }\n  public get username() { return this.form.get('username'); }\n\n  public get redirect() {\n    return this.route.snapshot.queryParamMap.get('redirect')\n      ?? '/channels/@me';\n  }\n\n  public async login() {\n    const user: Credentials = this.form.value;    \n    if (this.form.invalid) return;\n\n    try {\n      this.processing = true;\n      const res = await this.auth.login(user);\n      if (res.verify)        \n        return this.router.navigate([`/auth/verify`]); \n\n      this.router.navigate([ this.redirect ]);\n    } catch (error) {\n      this.processing = false;\n      this.form.setErrors({ invalidLogin: true });\n\n      await this.log.error(error.message);\n    }\n  }\n\n  public toggleLoginWith() {\n    const value = this.loginWith.nativeElement.value;\n    const email = this.form.get('email');\n    const username = this.form.get('username');\n\n    if (value === 'email') {\n      username.setValue(email.value);\n      email.reset();\n    }\n    else {\n      email.setValue(username.value);\n      username.reset();\n    }\n    \n    this.loginWith.nativeElement.value = (value === 'email')\n      ? 'username'\n      : 'email';\n  }\n}\n","<navbar></navbar>\n<section class=\"container text-center pb-5\">\n  <div class=\"py-2 mt-5 d-none d-sm-block\"></div>\n\n  <h2 class=\"display-4 mb-4 mt-5\">Login</h2>\n\n  <form\n    #f=\"ngForm\"\n    [formGroup]=\"form\"\n    (ngSubmit)=\"login()\">\n    <input\n      value=\"username\"\n      type=\"hidden\"\n      #loginWith>\n\n    <div class=\"form-group\">\n      <mat-form-field\n        *ngIf=\"loginWith.value === 'username'\"\n        appearance=\"outline\">\n        <mat-label for=\"username\">Username</mat-label>\n        <input formControlName=\"username\"\n          id=\"username\" type=\"text\" autocomplete=\"username\" matInput>\n        <mat-error *ngIf=\"username.errors?.pattern\">Username is invalid.</mat-error>\n      </mat-form-field>\n\n      <mat-form-field\n        *ngIf=\"loginWith.value === 'email'\"\n        appearance=\"outline\">\n        <mat-label for=\"email\">Email</mat-label>\n        <input formControlName=\"email\"\n          id=\"email\" type=\"email\" autocomplete=\"email\" matInput>\n        <mat-error *ngIf=\"email.errors?.pattern\">Email is invalid.</mat-error>\n      </mat-form-field>\n\n      <a (click)=\"toggleLoginWith()\"\n        class=\"cursor-pointer d-block\">\n        Login with {{ (loginWith.value === 'email') ? 'Username' : 'Email' }}\n      </a>\n    </div>\n    <div class=\"form-group\">\n      <mat-form-field appearance=\"outline\">\n        <mat-label for=\"password\">Password</mat-label>\n        <input formControlName=\"password\"\n          id=\"password\" type=\"password\" autocomplete=\"current-password\" matInput>\n        <mat-error *ngIf=\"password.errors\">Password is required.</mat-error>\n      </mat-form-field>\n    </div>\n\n    <button\n      [disabled]=\"processing\"\n      class=\"bg-primary mb-2\"\n      type=\"submit\"\n      mat-button>\n      <span\n        *ngIf=\"processing\"\n        class=\"spinner-border spinner-border-sm\"\n        role=\"status\"\n        aria-hidden=\"true\"></span>\n      Login\n    </button>\n    <div>Or <a\n      [routerLink]=\"['/sign-up']\"\n      [queryParams]=\"{ redirect: redirect }\">create an account</a>.</div>\n  </form>\n</section>","<app-settings-sidebar\n  tabType=\"guild\"\n  [id]=\"guild?._id\">\n  <div class=\"content\">\n    <h5 class=\"mb-4\">Invites</h5>\n    <div class=\"row\">\n      <div\n        *ngFor=\"let invite of invites\"\n        class=\"col-12\">\n        <zippy [title]=\"invite._id\">\n          <div class=\"row\">\n            <div class=\"col-md-4\">\n              <span>Created By</span>\n              <member-username [user]=\"userService.getCached(invite.inviterId)\"></member-username>              \n            </div>\n            <div class=\"col-md-2\">\n              <div><strong>Uses</strong></div>\n              <code>{{ usesString(invite) }}</code>\n            </div>\n            <div class=\"col-md-2\">\n              <div><strong>Created At</strong></div>\n              <code>{{ invite.createdAt | date:'medium' }}</code>\n            </div>\n            <div class=\"col-md-2\">\n              <div><strong>Expires</strong></div>\n              <code>{{ (invite.options.expiresAt | date) || 'Never' }}</code>\n            </div>\n            <div class=\"col-md-2\">\n              <div\n                (click)=\"delete(invite._id)\"\n                matTooltip=\"Delete\"\n                class=\"float-right\">\n                <button class=\"bg-danger\" mat-button>\n                  <i class=\"lni lni-close text-light\"></i>\n                </button>\n              </div>\n            </div>\n          </div>\n        </zippy>\n      </div>\n\n      <div *ngIf=\"invites?.length <= 0\">\n        <span>\n          <i class=\"fas fa-info-circle mr-2\"></i>\n          <span>No invites created yet.</span>\n        </span>\n      </div>\n    </div>\n  </div>\n</app-settings-sidebar>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { GuildService } from 'src/app/services/guild.service';\nimport { LogService } from 'src/app/services/log.service';\nimport { UserService } from 'src/app/services/user.service';\nimport { WSService } from 'src/app/services/ws.service';\nimport { Lean } from 'src/app/types/entity-types';\n\n@Component({\n  selector: 'app-invites',\n  templateUrl: './invites.component.html',\n  styleUrls: ['./invites.component.css', '../overview/guild-settings.component.css']\n})\nexport class InvitesComponent implements OnInit {\n  public invites: Lean.Invite[];\n  public guild: Lean.Guild;\n\n  constructor(\n    private route: ActivatedRoute,\n    private guildService: GuildService,\n    public log: LogService,\n    public userService: UserService,\n    public ws: WSService,\n  ) {}\n\n  public async ngOnInit() {\n    const guildId = this.route.snapshot.paramMap.get('guildId');\n    this.guild = this.guildService.getCached(guildId);\n    this.invites = await this.guildService.getInvites(guildId);\n\n    this.hookWSEvents();\n  }\n\n  public usesString(invite: Lean.Invite) {\n    return (invite.options.maxUses)\n      ? `${invite.uses}/${invite.options.maxUses}`\n      : invite.uses;\n  }\n\n  private hookWSEvents() {\n    this.ws.on('INVITE_DELETE', async ({ inviteCode }) => {\n      await this.log.success();\n\n      const index = this.invites.findIndex(i => i._id === inviteCode);\n      this.invites.splice(index, 1);\n    }, this);\n  }\n\n  public delete(inviteCode: string) {\n    this.ws.emit('INVITE_DELETE', { inviteCode }, this);\n  }\n}\n","import { hacker } from 'faker';\r\n\r\nexport function toIterable(length: number) {\r\n  const array = [];\r\n  for (let i = 0; i < length; i++)\r\n    array.push(i);\r\n  return array;\r\n}\r\n\r\nexport function camelToSentenceCase(words: string) {\r\n  const regex = /([A-Z])(?=[a-z][A-Z])|([a-z])(?=[A-Z])/g;\r\n  return words\r\n      .replace(regex, '$& ')[0]\r\n      .toUpperCase() +\r\n    words\r\n      .replace(regex, '$& ')\r\n      .slice(1);\r\n}\r\n\r\nexport function sentenceToCamelCase(words: string) {\r\n  const capitalized = words\r\n    .replace(/\\s+(.)/g, (match, group) => group.toUpperCase());\r\n  return capitalized[0].toLowerCase() + capitalized.slice(1);\r\n}\r\n\r\nexport function kebabToCamelCase(words: string) {\r\n  const arr = words.split('-');\r\n  const capital = arr.map((item, index) =>\r\n    index ? item.charAt(0).toUpperCase() + item.slice(1).toLowerCase() : item);\r\n\r\n  const capitalized = capital.join('');\r\n  return capitalized[0].toLowerCase() + capitalized.slice(1);\r\n}\r\n\r\nexport function generateUsername() {\r\n  return `${hacker\r\n    .adjective()\r\n    .replace(/ /, '')}-${hacker\r\n    .noun()\r\n    .replace(/ /, '')}`\r\n}\r\n\r\nexport function uuid() {\r\n  const s4 = () => Math\r\n    .floor((1 + Math.random()) * 0x10000)\r\n    .toString(16)\r\n    .substring(1);  \r\n  return 'u' + new Array(8)\r\n    .fill('')\r\n    .map(s4)\r\n    .join('');  \r\n}\r\n\r\nexport function timestamp(date: Date) { \r\n  date = new Date(date);\r\n  const timestamp = date.toTimeString().slice(0, 5);\r\n  \r\n  if (getDaysAgo(date))\r\n    return `Today at ${timestamp}`;\r\n  else if (getDaysAgo(date, -1))\r\n    return `Yesterday at ${timestamp}`;\r\n  else if (getDaysAgo(date, 1))\r\n    return `Tomorrow at ${timestamp}`;\r\n\r\n  return date\r\n    .toJSON()\r\n    .slice(0,10)\r\n    .split('-')\r\n    .reverse()\r\n    .join('/');\r\n}\r\nfunction getDaysAgo(date: Date, days = 0) {\r\n  return date.getDate() === new Date().getDate() + days\r\n    && date.getMonth() === new Date().getMonth()\r\n    && date.getFullYear() === new Date().getFullYear()\r\n}\r\n\r\nexport const array = {\r\n  ascendingBy: (key: string) => (a, b) => (a[key] > b[key]) ? 1 : -1,\r\n  descendingBy: (key: string) => (a, b) => (a[key] < b[key]) ? 1 : -1,\r\n  distinctBy: (key: string) => (value, index, self) => self.findIndex(v => v[key] === value[key]) === index,\r\n};\r\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ModuleConfig } from 'src/app/dashboard/components/module-config';\nimport { DevelopersService } from 'src/app/services/developers.service';\nimport { GuildService } from 'src/app/services/guild.service';\nimport { LogService } from 'src/app/services/log.service';\nimport { WSService } from 'src/app/services/ws.service';\nimport { Lean } from 'src/app/types/entity-types';\n\n@Component({\n  selector: 'app-bot-list',\n  templateUrl: './bot-list.component.html',\n  styleUrls: [\n    './bot-list.component.css',\n    '../../guild-settings/overview/guild-settings.component.css'\n  ]\n})\nexport class BotListComponent extends ModuleConfig implements OnInit {\n  public apps: Lean.Application[];\n  public selectedApp: Lean.Application;\n\n  public get botInGuild() {\n    return this.guild.members.some(m => m.userId === this.selectedApp._id);\n  }\n\n  constructor(\n    route: ActivatedRoute,\n    router: Router,\n    guildService: GuildService,\n    snackbar: MatSnackBar,\n    ws: WSService,\n    log: LogService,\n    private dev: DevelopersService,\n  ) {\n    super(guildService, route, snackbar, ws, log, router);\n  }\n\n  public async ngOnInit() {\n    await super.init();\n    \n    this.apps = await this.dev.fetchAll();\n    this.selectedApp = this.apps[0];\n  }\n\n  public buildForm() {\n    return new FormGroup({});\n  }\n\n  public async addBot(botId: string) {    \n    await this.guildService.addBot(this.guildId, botId);\n    await this.guildService.fetchAll();\n  }\n\n  public async removeBot(botId: string) {\n    const member = this.guildService.getMember(this.guildId, botId);\n    await this.guildService.kick(this.guildId, member._id);\n    await this.guildService.fetchAll();\n  }\n}\n","<app-settings-sidebar\n  tabType=\"guild\"\n  [id]=\"guild?._id\">\n  <div class=\"content\">\n    <div class=\"row\">\n      <div class=\"col-3 side-nav navbar-dark\">\n        <div class=\"navbar-nav\">\n          <!-- TODO: use member-username -->\n          <a\n            *ngFor=\"let app of apps\"\n            (click)=\"selectedApp = app\"\n            routerLinkActive=\"active\"\n            class=\"nav-item nav-link\">{{ app.user.username }}</a>\n          <div class=\"float-right\"></div>\n        </div>\n\n        <hr class=\"my-4\">\n\n        <p class=\"text-muted\">Bots can do <code>cool</code> things for your guilds.</p>\n      </div>\n      <div\n        *ngIf=\"selectedApp\"\n        class=\"col-9 role-details\">\n        <img\n          [src]=\"selectedApp.user.avatarURL\"\n          [alt]=\"selectedApp.user.username + ' Avatar'\"\n          class=\"rounded-lg float-left mr-4\">\n        <h1>{{ selectedApp.user.username }}</h1>\n        <hr>\n        <p class=\"lead text-muted\">{{ selectedApp.description }}</p>\n        \n        <div class=\"mt-3\">\n          <button\n            *ngIf=\"!botInGuild\"\n            (click)=\"addBot(selectedApp.user._id)\"\n            class=\"bg-success rounded\"\n            mat-button>Add</button>\n          <button\n            *ngIf=\"botInGuild\"\n            (click)=\"removeBot(selectedApp.user._id)\"\n            class=\"bg-danger rounded\"\n            mat-button>Remove</button>\n        </div>\n      </div>\n    </div>\n  </div>\n</app-settings-sidebar>","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ChannelService } from '../channel.service';\nimport { GuildService } from '../guild.service';\nimport { UserService } from '../user.service';\nimport { Args } from '../ws.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MyEventService {\n  constructor(\n    private channelService: ChannelService,\n    private guildService: GuildService,\n    private router: Router,\n    private userService: UserService,\n  ) {}\n\n  public async addFriend({ sender, friend, dmChannel }: Args.AddFriend) {\n    this.updateFriends({ sender, friend });\n    if (dmChannel)\n      this.channelService.add(dmChannel);\n  }\n  public updateFriends({ sender, friend }: Args.RemoveFriend) {\n    this.userService.upsert(sender._id, sender);    \n    this.userService.upsert(friend._id, friend);\n  }\n\n  public async joinGuild({ guild }: Args.GuildJoin) {\n    await this.userService.fetchAll();\n    this.guildService.add(guild);\n\n    await this.router.navigate([`/channels/${guild._id}`]);\n  }\n\n  public updatePresence({ userId, status }: Args.PresenceUpdate) {\n    this.userService.upsert(userId, { status });\n  }\n\n  public updateUser({ partialUser }: Args.UserUpdate) {\n    const user = this.userService.self;\n    this.userService.upsert(user._id, partialUser);\n  }\n}\n","import { Component, Input } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { PermissionsService } from 'src/app/services/permissions.service';\nimport { PermissionTypes } from 'src/app/types/entity-types';\nimport { UserService } from 'src/app/services/user.service';\nimport { GuildService } from 'src/app/services/guild.service';\n\n@Component({\n  selector: 'app-settings-sidebar',\n  templateUrl: './settings-sidebar.component.html',\n  styleUrls: ['./settings-sidebar.component.css'],\n})\nexport class SettingsSidebarComponent {\n  @Input() public tabType: TabType;\n  @Input('id') public guildId: string;\n\n  public readonly tabs: Tabs = {\n    guild: [\n      {\n        name: 'General', \n        icon: 'lni lni-eye', \n        href: () => `/channels/${this.guildId}/settings`,\n        permission: PermissionTypes.General.MANAGE_GUILD, \n      },\n      // {\n      //   name: 'Bots',\n      //   icon: 'fas fa-robot',\n      //   href: () => `/channels/${this.guildId}/bots`,\n      //   permission: PermissionTypes.General.MANAGE_GUILD, \n      // },\n      {\n        name: 'Invites',\n        icon: 'lni lni-user',\n        href: () => `/channels/${this.guildId}/invites`,\n        permission: PermissionTypes.General.MANAGE_GUILD, \n      },\n      {\n        name: 'Roles',\n        icon: 'fas fa-at',\n        href: () => `/channels/${this.guildId}/roles`,\n        permission: PermissionTypes.General.MANAGE_ROLES, \n      },\n    ],\n    user: [\n      { name: 'Overview', icon: 'lni lni-eye', href: () => '/channels/@me/settings' },\n      { name: 'Account', icon: 'lni lni-lock', href: () => '/channels/@me/settings/account' },\n    ],\n  };\n\n  public get categories() {\n    return Object.keys(this.tabs);\n  }\n\n  public get tabCategory() {\n    return (this.tabType === 'guild')\n      ? this.guildService.getCached(this.guildId)?.name\n      : this.userService.self.username;\n  }\n\n  constructor(\n    private guildService: GuildService,\n    private perms: PermissionsService,\n    private router: Router,\n    private userService: UserService,\n  ) {\n    document.body.onkeyup = ({ key }) => {\n      if (key === 'Escape')\n        this.close();\n    };\n  }\n\n  public async close() {\n    await this.router.navigate([`/channels/${this.guildId ?? '@me'}`]);\n  }\n\n  public canAccess(tab: Tab) {\n    return !tab.permission || this.perms.can(this.guildId, tab.permission);\n  }\n}\n\nexport type TabType = 'guild' | 'user';\nexport interface Tab {\n  icon: string;\n  href: (id: string) => string;\n  name: string;\n  permission?: PermissionTypes.Permission;\n}\ntype Tabs = { [k in TabType]: Tab[] };","<div class=\"side side-nav navbar-dark\">\n  <div class=\"navbar-nav float-right\">\n    <h2 class=\"category text-secondary overflow-ellipsis\">{{ tabCategory }}</h2>\n\n    <a *ngFor=\"let tab of tabs[tabType]\"\n      [routerLinkActiveOptions]=\"{ exact: true }\"\n      [routerLink]=\"canAccess(tab) ? tab.href() : './'\"\n      [class.disabled]=\"!canAccess(tab)\"\n      routerLinkActive=\"active\"\n      class=\"nav-item nav-link\">\n      <i class=\"mr-1\" [class]=\"tab.icon\"></i>\n      <span>{{ tab.name }}</span>\n    </a>\n\n    <div *ngIf=\"tabType === 'user'\">\n      <hr>\n      <a routerLink=\"/logout\"\n        class=\"text-danger nav-item nav-link\">\n        <i class=\"lni lni-user text-danger\"></i>\n        <span> Logout</span>\n      </a>\n    </div>\n  </div>\n</div>\n\n<div class=\"main\">\n  <div class=\"close-container\">\n    <div\n      (click)=\"close()\"\n      class=\"close round btn float-right\"\n      mat-button><i class=\"lni lni-close\"></i></div>\n  </div>\n\n  <div class=\"main-content\">\n    <ng-content select=\".content\"></ng-content></div>\n</div>","import { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { Lean, UserTypes } from '../types/entity-types';\nimport { array } from '../utils/utils';\nimport { HTTPWrapper } from './http-wrapper';\n\n@Injectable({ providedIn: 'root' })\nexport class UserService extends HTTPWrapper<Lean.User> {\n  public self: UserTypes.Self;\n  public endpoint = `${environment.endpoint}/users`;\n  protected _arr: Lean.User[] = [];\n\n  public get friends() {\n    return this.self.friendIds.map(id => this.getCached(id));\n  }\n  public get friendRequests() {\n    const isOutgoing = (u: Lean.User) => u.friendRequestIds.includes(this.self._id);    \n\n    return this._arr\n      .filter(isOutgoing)\n      .concat(this.self.friendRequestIds\n        .map(id => this.getCached(id))\n      )\n      .filter(array.distinctBy('_id'));\n  }\n  \n  public avatarURL(id: string) {\n    return `${this.endpoint}/${id}/avatar`;\n  }\n\n  public getBots(): Promise<Lean.User[]> {\n    return this.http.get(`${this.endpoint}/bots`).toPromise() as any;\n  }\n\n  public async updateSelf(): Promise<Lean.User> {\n    return this.self = await this.http.get(`${this.endpoint}/self`, this.headers).toPromise() as any;\n  }\n\n  public async checkUsername(username: string): Promise<boolean> {\n    return this.http.get(`${this.endpoint}/check-username?value=${username}`).toPromise() as any;\n  }\n  public async checkEmail(email: string): Promise<boolean> {\n    return this.http.get(`${this.endpoint}/check-email?value=${email}`).toPromise() as any;\n  }\n\n  public block(userId: string) {\n    const userIds = this.self.ignored?.userIds.concat(userId)\n      ?? [userId];\n\n    this.ws.emit('USER_UPDATE', {\n      partialUser: {\n        ...this.self,\n        ignored: { ...this.self.ignored, userIds }\n      },\n      key: localStorage.getItem('key'),\n    }, this);\n  }\n\n  public unblock(userId: string) {\n    const index = this.self.ignored?.userIds.indexOf(userId);\n    this.self.ignored?.userIds.splice(index, 1);\n\n    this.ws.emit('USER_UPDATE', {\n      partialUser: {\n        ignored: this.self.ignored,\n      },\n      key: localStorage.getItem('key'),\n    }, this);\n  }\n}\n","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\n\r\n@Component({\r\n  selector: 'save-changes',\r\n  templateUrl: './save-changes.component.html',\r\n  styleUrls: ['./save-changes.component.css']\r\n})\r\nexport class SaveChangesComponent implements OnInit {\r\n  @Output() onReset = new EventEmitter();\r\n  @Output() onSave = new EventEmitter();\r\n\r\n  constructor(private snackBar: MatSnackBar) {}\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  reset() {\r\n    this.onReset.emit();\r\n    this.close();\r\n  }\r\n\r\n  save() {\r\n    this.onSave.emit();\r\n    this.close();\r\n  }\r\n\r\n  close() {\r\n    this.snackBar.dismiss();\r\n    \r\n    this.onReset.unsubscribe();\r\n    this.onSave.unsubscribe();\r\n  }\r\n}\r\n","<div class=\"row\">\r\n  <div class=\"text col-lg-8 col-sm-12 p-lg-1\">\r\n    Careful - You have unsaved changes!\r\n  </div>\r\n  <div class=\"col-lg-4 col-sm-12 d-flex justify-content-center\">\r\n    <button\r\n    (click)=\"reset()\"\r\n      id=\"reset\"\r\n      type=\"submit\" \r\n      class=\"text-danger\"\r\n      mat-button>Reset</button>\r\n    <button\r\n      (click)=\"save()\"\r\n      id=\"save\"\r\n      type=\"submit\"\r\n      mat-button>Save</button>\r\n  </div>\r\n</div>","import { Component, Inject, OnInit } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { ChannelService } from 'src/app/services/channel.service';\nimport { LogService } from 'src/app/services/log.service';\nimport { UserService } from 'src/app/services/user.service';\nimport { WSService } from 'src/app/services/ws.service';\nimport { Lean } from 'src/app/types/entity-types';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent {\n  public get mutualFriends(): Lean.User[] {\n    const otherFriendIds = this.data.user.friendIds;\n    return this.users.self.friendIds\n      .filter(id => otherFriendIds.includes(id))\n      .map(id => this.users.getCached(id));\n  }\n  public get mutualGuilds(): Lean.Guild[] {\n    const otherGuilds = this.data.user.guilds;    \n    return this.users.self.guilds\n      .filter(ug => otherGuilds.some(og => og._id === ug._id));\n  }\n\n  public get isSelf() {\n    return this.users.self._id === this.data.user._id;\n  }\n  public get isFriend() {\n    return this.users.self.friendIds.includes(this.data.user._id);\n  }\n  public get sentRequest() {\n    return this.users.self.friendRequestIds.includes(this.data.user._id);\n  }\n  public get dmChannel() {\n    return this.channels.getDM(this.data.user._id);\n  }\n\n  constructor(\n    public dialogRef: MatDialogRef<ProfileComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: { user: Lean.User },\n    private channels: ChannelService,\n    private log: LogService,\n    private users: UserService,\n    private ws: WSService,\n  ) {}\n\n  public async addFriend() {\n    await this.ws.emitAsync('ADD_FRIEND', {\n      username: this.data.user.username,\n    }, this);\n  }\n\n  public async removeFriend() {\n    await this.ws.emitAsync('REMOVE_FRIEND', {\n      friendId: this.data.user._id,\n    }, this);\n  }\n}\n","<div\n  *ngIf=\"!isSelf\"\n  class=\"d-flex justify-content-center float-right\">\n  <button\n    *ngIf=\"!isFriend && !sentRequest\"\n    (click)=\"addFriend()\"\n    matTooltip=\"Add Friend\"\n    class=\"bg-success mr-2\"\n    mat-button>\n    <i class=\"lni lni-user text-dark\"></i>\n    <span></span>\n  </button>\n  <button\n    *ngIf=\"isFriend || sentRequest\"\n    (click)=\"removeFriend()\"\n    [matTooltip]=\"(isFriend) ? 'Remove Friend' : 'Cancel Request'\"\n    class=\"bg-danger mr-2\"\n    mat-button>\n    <i class=\"lni lni-close\"></i>\n    <span></span>\n  </button>\n\n  <button\n    [routerLink]=\"'/channels/@me/' + dmChannel?._id\"\n    [disabled]=\"!isFriend\"\n    matTooltip=\"Message\"\n    class=\"bg-primary\"\n    mat-button>\n    <i class=\"lni lni-bubble\"></i>\n    <span></span>\n  </button>\n</div>\n\n<app-avatar-url\n  [user]=\"data.user\"\n  class=\"mr-2\"></app-avatar-url>\n<h1 mat-dialog-title>{{ data.user.username }}</h1>\n\n<hr>\n\n<div\n  *ngIf=\"mutualGuilds.length\"\n  mat-dialog-content>\n  <h6>Mutual Guilds—{{ mutualGuilds.length }}</h6>\n  <div class=\"ml-4\">\n    <app-guild-icon \n      *ngFor=\"let guild of mutualGuilds; else noMutualGuilds\"\n      class=\"float-left\"\n      style=\"margin-left: -25px;\"\n      [matTooltip]=\"guild.name\"\n      [guild]=\"guild\"></app-guild-icon>\n  </div>\n  <hr>\n</div>\n\n<hr>\n\n<div\n  *ngIf=\"mutualFriends.length\"\n  mat-dialog-content>\n  <h6>Mutual Friends—{{ mutualFriends.length }}</h6>\n  <div class=\"ml-4\">\n    <app-avatar-url \n      *ngFor=\"let friend of mutualFriends\"\n      class=\"float-left cursor-pointer\"\n      size=\"52px\"\n      style=\"margin-left: -25px;\"\n      [matTooltip]=\"friend.username\"\n      [user]=\"friend\"></app-avatar-url>\n  </div>\n</div>\n","import { Injectable } from '@angular/core';\r\nimport { CanDeactivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { ModuleConfig } from '../dashboard/components/module-config';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CanDeactivateDashboard implements CanDeactivate<ModuleConfig> {\r\n  canDeactivate(\r\n    component: ModuleConfig,\r\n    currentRoute: ActivatedRouteSnapshot,\r\n    currentState: RouterStateSnapshot,\r\n    nextState?: RouterStateSnapshot) {\r\n    return !Boolean(component.saveChanges?._openedSnackBarRef);\r\n  }\r\n  \r\n}\r\n","<dashboard-sidebar>\r\n  <dashboard-navbar>\r\n    <i class=\"lni lni-users pr-2\"></i>\r\n    <strong>Friends</strong>\r\n\r\n    <span class=\"mx-3 py-1\"></span>\r\n\r\n    <ul class=\"nav nav-pills float-right\">\r\n      <li class=\"nav-item\">\r\n        <a (click)=\"tab = 'ONLINE'\" \r\n          [class.active]=\"tab === 'ONLINE'\"\r\n          class=\"nav-link active\">\r\n          <span>Online</span>\r\n        </a>\r\n      </li>\r\n      <li class=\"nav-item\">\r\n        <a (click)=\"tab = 'ALL'\" \r\n          [class.active]=\"tab === 'ALL'\"\r\n          class=\"nav-link\">\r\n          <span>All</span>\r\n        </a>\r\n      </li>\r\n      <li class=\"nav-item\">\r\n        <a (click)=\"tab = 'PENDING'\" \r\n          [class.active]=\"tab === 'PENDING'\"\r\n          class=\"nav-link\">\r\n          <span>Pending</span>\r\n          <strong\r\n            *ngIf=\"friendsList.users.friendRequests.length\"\r\n            class=\"text-primary\"> {{ friendsList.users.friendRequests.length }}</strong>\r\n        </a>\r\n      </li>\r\n      <li class=\"nav-item\">\r\n        <a (click)=\"tab = 'BLOCKED'\" \r\n          [class.active]=\"tab === 'BLOCKED'\"\r\n          class=\"nav-link text-warning\">\r\n          <span>Blocked</span>\r\n          <strong\r\n            *ngIf=\"friendsList.blockedUsers.length\"\r\n            class=\"text-primary\"> {{ friendsList.blockedUsers.length }}</strong>\r\n        </a>\r\n      </li>\r\n      <li class=\"nav-item\">\r\n        <a (click)=\"dialog.addFriend()\"\r\n          class=\"nav-link bg-success text-dark\">Add Friend</a>\r\n      </li>\r\n    </ul>\r\n  </dashboard-navbar>\r\n\r\n  <friends-list\r\n    [tab]=\"tab\"\r\n    #friendsList></friends-list>\r\n</dashboard-sidebar>\r\n","import { Component } from '@angular/core';\r\nimport { DialogService } from 'src/app/services/dialog.service';\r\nimport { TabType } from '../friends-list/friends-list.component';\r\n\r\n@Component({\r\n  selector: 'app-dashboard',\r\n  templateUrl: './me-overview.component.html',\r\n  styleUrls: ['./me-overview.component.css']\r\n})\r\nexport class DashboardOverviewComponent { \r\n  public tab: TabType = 'ONLINE';\r\n\r\n  constructor(public dialog: DialogService) {\r\n    document.title = 'Accord - Dashboard';\r\n\r\n    this.tab = 'ONLINE';\r\n  }\r\n}","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { Lean } from '../types/entity-types';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class InviteService {\n  private endpoint = `${environment.rootEndpoint}/invites`;\n\n  private get headers() {\n    return {\n      headers: {\n        'Authorization': `Bearer ${localStorage.getItem('key')}`,\n      }\n    }\n  }\n\n  constructor(\n    private http: HttpClient,\n  ) {}\n\n  public fetch(id: string): Promise<Lean.Invite> {\n    return this.http.get(`${this.endpoint}/${id}`, this.headers).toPromise() as any;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Lean, PermissionTypes } from '../types/entity-types';\nimport { GuildService } from './guild.service';\nimport { UserService } from './user.service';\n\n@Injectable({ providedIn: 'root' })\nexport class PermissionsService {\n  constructor(\n    private guildService: GuildService,\n    private userService: UserService,\n  ) {}\n\n  public can(guildId: string, permission: PermissionTypes.PermissionString) {\n    const guild = this.guildService.getCached(guildId);\n    if (!guild)\n      throw new TypeError('Guild Not Found');\n\n    const member = this.guildService.getSelfMember(guildId);\n      \n    return guild.ownerId == member?.userId\n      || this.hasPermission(\n          this.getTotalPerms(guild, member),\n          PermissionTypes.All[permission] as number\n        );\n  }\n  public getTotalPerms(guild: Lean.Guild, member: Lean.GuildMember) {\n    return guild.roles\n      .filter(r => member?.roleIds.includes(r._id))\n      .reduce((acc, value) => value.permissions | acc, 0);\n  }\n  public hasPermission(totalPerms: number, permission: number) {\n    return Boolean(totalPerms & permission)\n      || Boolean(totalPerms & PermissionTypes.General.ADMINISTRATOR);\n  }\n\n  public canManage(guildId: string, userId: string, permission: PermissionTypes.PermissionString) {\n    const userMember = this.guildService.getMember(guildId, userId);\n    if (!userMember) return false;\n\n    return this.can(guildId, permission)\n      && (this.userService.self._id === userMember.userId\n      || (this.isHigher(guildId, userMember.roleIds)));\n  }\n\n  public canPunish(guildId: string, userId: string, permission: PermissionTypes.PermissionString) {\n    return this.userService.self._id !== userId\n      && this.can(guildId, permission)\n      && this.canManage(guildId, userId, permission);\n  }\n\n  public isHigher(guildId: string, roleIds: string[]) {\n    const selfMember = this.guildService.getSelfMember(guildId);\n    const guild = this.guildService.getCached(guildId);\n\n    const joinedRoles = roleIds.concat(selfMember.roleIds);\n    const roles = guild.roles.filter(r => joinedRoles.includes(r._id));\n\n    const highestRole = roles[roles.length - 1];\n    \n    return selfMember.userId === guild.ownerId\n      || (selfMember.roleIds.includes(highestRole._id)\n      && !roleIds.includes(highestRole._id));\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { Lean } from '../types/entity-types';\nimport { HTTPWrapper } from './http-wrapper';\nimport { WSService } from './ws.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MessageService extends HTTPWrapper<Lean.Message> {\n  protected readonly endpoint = environment.endpoint + '/channels';\n  private cached = new Map<string, Lean.Message[]>();\n  public self = undefined;\n\n  protected _arr: Lean.Message[];\n  public get messages(): Lean.Message[] {\n    return this._arr = Array\n      .from(this.cached.values())\n      .flat();\n  }\n\n  constructor(\n    http: HttpClient,\n    ws: WSService,\n  ) { super(http, ws); }\n\n  public async getAllAsync(channelId: string): Promise<Lean.Message[]> {    \n    return this.cached.get(channelId)\n      ?? await this.overrideFetchAll(channelId);\n  }\n\n  public getAllCached(channelId: string): Lean.Message[] {\n    return this.cached.get(channelId)\n      ?? this.cached\n        .set(channelId, [])\n        .get(channelId);\n  }\n\n  // TODO: eventually use override keyword\n  public overrideAdd(messages: Lean.Message[]): Lean.Message[] {    \n    const channelId = messages[0]?.channelId;\n    if (!channelId) return [];\n\n    const cached = this.getAllCached(channelId);\n    cached.push(...messages);\n    return cached;\n  }\n\n  // TODO: eventually use override keyword\n  public async overrideFetchAll(channelId: string, options?: LazyLoadOptions): Promise<Lean.Message[]> {\n    const query = `?start=${options?.start ?? 0}&end=${options?.end ?? 25}`;\n    const messages = await this.http\n      .get(`${this.endpoint}/${channelId}/messages${query}`, this.headers)\n      .toPromise() as any;\n    \n    return this.overrideAdd(messages);\n  }\n}\n\ninterface LazyLoadOptions { start: number, end: number }\n","import { ActivatedRoute, Router } from '@angular/router';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { SaveChangesComponent } from './save-changes/save-changes.component';\r\nimport { OnDestroy, Directive } from '@angular/core';\r\nimport { MatChipInputEvent } from '@angular/material/chips';\r\nimport { Subscription } from 'rxjs';\r\nimport { WSService } from '../../services/ws.service';\r\nimport { LogService } from '../../services/log.service';\r\nimport { UserService } from '../../services/user.service';\r\nimport { Lean, UserTypes } from 'src/app/types/entity-types';\r\n\r\n@Directive()\r\nexport abstract class UserConfig implements OnDestroy {\r\n  public form: FormGroup;\r\n  public user: UserTypes.Self;\r\n  public originalUser: UserTypes.Self;\r\n\r\n  private saveChanges$: Subscription;  \r\n  private valueChanges$: Subscription;  \r\n  \r\n  constructor(\r\n    protected userService: UserService,\r\n    protected route: ActivatedRoute,\r\n    public saveChanges: MatSnackBar,\r\n    protected ws: WSService,\r\n    protected log: LogService,\r\n    protected router: Router,\r\n  ) {}\r\n\r\n  /**\r\n   * Load all required data for the form, and hook events.\r\n   */\r\n  public async init() {\r\n    await this.userService.init();\r\n    \r\n    this.user = this.userService.self;\r\n    this.originalUser = JSON.parse(JSON.stringify(this.user));\r\n    \r\n    await this.resetForm();\r\n\r\n    this.valueChanges$ = this.form.valueChanges\r\n      .subscribe(() => this.openSaveChanges()); \r\n  }\r\n\r\n  private async resetForm() {   \r\n    this.user = JSON.parse(JSON.stringify(this.originalUser));   \r\n    this.form = await this.buildForm(this.user);\r\n  }\r\n\r\n  /**\r\n   * Build the form to be used.\r\n   * Called when on form init.\r\n   */\r\n  public abstract buildForm(user: Lean.User): FormGroup | Promise<FormGroup>;\r\n  \r\n  public openSaveChanges() {    \r\n    const snackBarRef = this.saveChanges._openedSnackBarRef;   \r\n    if (this.form.invalid || snackBarRef) return;\r\n\r\n    this.saveChanges$ = this.saveChanges\r\n      .openFromComponent(SaveChangesComponent)\r\n      .afterOpened()\r\n      .subscribe(() => {\r\n        const component: SaveChangesComponent = this.saveChanges._openedSnackBarRef.instance;\r\n        component.onSave.subscribe(() => this.submit());\r\n        component.onReset.subscribe(() => this.reset());\r\n      });    \r\n  }\r\n\r\n  /**\r\n   * Clean up subscriptions - to prevent memory leak.\r\n   */  \r\n  public ngOnDestroy() {    \r\n    this.valueChanges$?.unsubscribe();\r\n    this.saveChanges$?.unsubscribe();\r\n  }\r\n\r\n  /**\r\n   * Send the form data to the API.\r\n   */\r\n  public async submit() {\r\n    if (this.form.invalid) return;\r\n\r\n    this.userService.self = Object.assign(this.user, this.form.value);\r\n\r\n    this.ws.emitAsync('USER_UPDATE', {\r\n      key: localStorage.getItem('key'),\r\n      partialUser: this.form.value,\r\n    }, this);\r\n  }\r\n\r\n  /**\r\n   * Reset form values, and rebuild form.\r\n   */\r\n  public async reset() {\r\n    await this.resetForm();\r\n    this.user = JSON.parse(JSON.stringify(this.originalUser));\r\n    \r\n    this.form.valueChanges\r\n      .subscribe(() => this.openSaveChanges()); \r\n  }\r\n\r\n  // input events\r\n\r\n  public add(event: MatChipInputEvent, array: any[]) {    \r\n    const { value, input } = event;\r\n  \r\n    if ((value || '').trim())\r\n      array.push(value.trim());\r\n  \r\n    if (input) \r\n      input.value = '';\r\n\r\n    this.openSaveChanges();\r\n  }\r\n  \r\n  public remove(item: any, array: any[]) {\r\n    const index = array.indexOf(item);\r\n    if (index >= 0)\r\n      array.splice(index, 1);\r\n    \r\n    this.openSaveChanges();\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-not-found',\r\n  templateUrl: './not-found.component.html',\r\n  styleUrls: ['./not-found.component.css']\r\n})\r\nexport class NotFoundComponent {}\r\n","<div class=\"stars\">\r\n  <div class=\"central-body\">\r\n    <h1 class=\"text-light\">404</h1>\r\n    <p class=\"text-light\">Looks like you are lost in space...</p>\r\n    <a class=\"btn-go-home\" routerLink=\"/\">RETURN HOME</a>\r\n  </div>\r\n  <div class=\"objects\">\r\n    <img class=\"object_rocket\" src=\"/assets/img/rocket.svg\" width=\"40px\">\r\n    <div class=\"earth-moon\">\r\n      <img class=\"object_earth\" src=\"/assets/img/earth.svg\" width=\"100px\">\r\n      <img class=\"object_moon\" src=\"/assets/img/moon.svg\" width=\"80px\">\r\n      <img class=\"object_mars\" src=\"/assets/img/mars.svg\">\r\n    </div>\r\n    <div class=\"box_astronaut\">\r\n      <img class=\"object_astronaut\" src=\"/assets/img/2pg-plus-avatar-transparent.png\" width=\"140px\">\r\n    </div>\r\n  </div>\r\n  <div class=\"glowing_stars\">\r\n    <div class=\"star\"></div>\r\n    <div class=\"star\"></div>\r\n    <div class=\"star\"></div>\r\n    <div class=\"star\"></div>\r\n    <div class=\"star\"></div>\r\n  </div>\r\n</div>\r\n<footer>\r\n  <p class=\"float-right text-muted\"><strong>SVGs</strong>: Saleh Riaz + photo3idea_studio from www.flaticon.com</p>\r\n</footer>","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'durationString'\r\n})\r\nexport class DurationStringPipe implements PipeTransform {\r\n\r\n  transform(value: number | string) {\r\n    const seconds = Number(value);\r\n    return `${Math.floor(seconds / 60)}:${Math.floor(seconds % 60).toString().padStart(2, '0')}`;\r\n  }\r\n}\r\n","import { Component, Input } from '@angular/core';\r\nimport { expandCollapse } from './zippy.component.animations';\r\n\r\n@Component({\r\n  selector: 'zippy',\r\n  templateUrl: './zippy.component.html',\r\n  styleUrls: ['./zippy.component.css'],\r\n  animations: [ expandCollapse ]\r\n})\r\nexport class ZippyComponent {\r\n  @Input() public title = 'Title';\r\n\r\n  public expanded = false;\r\n\r\n  public toggle = () => this.expanded = !this.expanded;\r\n}\r\n","<ng-container>\r\n  <div class=\"zippy\">\r\n    <div class=\"zippy-heading\"\r\n      [class.expanded]=\"expanded\" \r\n      (click)=\"toggle()\">\r\n      {{ title }}\r\n      <span>\r\n        <i class=\"float-right lni lni-down-chevron\"></i>\r\n      </span>\r\n    </div>\r\n    <div\r\n      class=\"zippy-body\"\r\n      [@expandCollapse]=\"(expanded) ? 'expanded' : 'collapsed'\">\r\n      <ng-content></ng-content>\r\n    </div>\r\n  </div>\r\n</ng-container>","import { Component, NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { HomeComponent } from './pages/home/home.component';\r\nimport { NotFoundComponent } from './pages/not-found/not-found.component';\r\nimport { AuthComponent } from './authentication/auth/auth.component';\r\nimport { LoginComponent } from './authentication/login/login.component';\r\nimport { LogoutComponent } from './authentication/logout/logout.component';\r\nimport { DashboardOverviewComponent } from './dashboard/me/me-overview/me-overview.component';\r\nimport { GuildOverviewComponent } from './dashboard/guilds/guild-overview/guild-overview.component';\r\nimport { DashboardAuthGuard } from './guards/dashboard-auth.guard';\r\nimport { GuildAuthGuard } from './guards/guild-auth.guard';\r\nimport { CanDeactivateDashboard } from './guards/can-deactivate-dashboard.guard';\r\nimport { SignUpComponent } from './authentication/sign-up/sign-up.component';\r\nimport { TextChannelComponent } from './dashboard/guilds/text-channel/text-channel.component';\r\nimport { GuildSettingsComponent } from './dashboard/guilds/guild-settings/overview/guild-settings.component';\r\nimport { InvitesComponent } from './dashboard/guilds/guild-settings/invites/invites.component';\r\nimport { RolesComponent } from './dashboard/guilds/guild-settings/roles/roles.component';\r\nimport { DMChannelAuthGuard } from './guards/dmchannel-auth.guard';\r\nimport { DMComponent } from './dashboard/me/dmchannel/dm.component';\r\nimport { UserSettingsComponent } from './dashboard/me/user-settings/user-settings.component';\r\nimport { DevelopersComponent } from './pages/developers/developers.component';\r\nimport { ApplicationComponent } from './pages/developers/application/application.component';\r\nimport { BotUserComponent } from './pages/developers/bot-user/bot-user.component';\r\nimport { DevelopersAuthGuard } from './guards/developers-auth.guard';\r\nimport { VerifyComponent } from './authentication/verify/verify.component';\r\nimport { UserAccountComponent } from './dashboard/me/user-account/user-account.component';\r\nimport { InviteComponent } from './pages/invite/invite.component';\r\nimport { externalRedirect } from './utils/external-redirect';\r\nimport { environment } from 'src/environments/environment';\r\nimport { ComingSoonComponent } from './utils/coming-soon/coming-soon.component';\r\nimport { WhyComponent } from './pages/why/why.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: HomeComponent, },\r\n  { path: 'auth/verify', component: VerifyComponent, },\r\n  { path: 'auth', component: AuthComponent, },\r\n  { path: 'changelog', component: externalRedirect(`${environment.docsURL}/general/changelog`), },\r\n  { path: 'docs', component: externalRedirect(`${environment.docsURL}`), },\r\n  { path: 'privacy', component: externalRedirect(`${environment.docsURL}/legal/privacy`), },\r\n  { path: 'terms', component: externalRedirect(`${environment.docsURL}/legal/terms`), },\r\n  {\r\n    path: 'channels/@me',\r\n    component: DashboardOverviewComponent,\r\n    canActivate: [DashboardAuthGuard],\r\n  },\r\n  {\r\n    path: 'channels/@me/settings',\r\n    component: UserSettingsComponent,\r\n    canActivate: [DashboardAuthGuard],\r\n  },\r\n  {\r\n    path: 'channels/@me/settings/account',\r\n    component: UserAccountComponent,\r\n    canActivate: [DashboardAuthGuard],\r\n  },\r\n  {\r\n    path: 'channels/@me/:channelId',\r\n    component: DMComponent,\r\n    canActivate: [DashboardAuthGuard, DMChannelAuthGuard],\r\n  },\r\n  {\r\n    path: 'channels/:guildId',\r\n    component: GuildOverviewComponent,\r\n    canActivate: [DashboardAuthGuard, GuildAuthGuard],\r\n    canDeactivate: [CanDeactivateDashboard],\r\n  },\r\n  {\r\n    path: 'channels/:guildId/settings',\r\n    component: GuildSettingsComponent,\r\n    canActivate: [DashboardAuthGuard, GuildAuthGuard],\r\n    canDeactivate: [CanDeactivateDashboard],\r\n  },\r\n  {\r\n    path: 'channels/:guildId/roles',\r\n    component: RolesComponent,\r\n    canActivate: [DashboardAuthGuard, GuildAuthGuard],\r\n    canDeactivate: [CanDeactivateDashboard],\r\n  },\r\n  {\r\n    path: 'channels/:guildId/bots',\r\n    component: ComingSoonComponent,\r\n    // component: BotListComponent,\r\n    // canActivate: [DashboardAuthGuard, GuildAuthGuard],\r\n    // canDeactivate: [CanDeactivateDashboard],\r\n  },\r\n  {\r\n    path: 'channels/:guildId/invites',\r\n    component: InvitesComponent,\r\n    canActivate: [DashboardAuthGuard, GuildAuthGuard],\r\n    canDeactivate: [CanDeactivateDashboard],\r\n  },\r\n  {\r\n    path: 'channels/:guildId/:channelId',\r\n    component: GuildOverviewComponent,\r\n    canActivate: [DashboardAuthGuard, GuildAuthGuard],\r\n    canDeactivate: [CanDeactivateDashboard],\r\n  },\r\n  { path: 'developers', component: ComingSoonComponent, },\r\n  {\r\n    path: `developers/applications/:id/user`,\r\n    canActivate: [DevelopersAuthGuard],\r\n    component: BotUserComponent,\r\n  },\r\n  {\r\n    path: `developers/applications/:id`,\r\n    canActivate: [DevelopersAuthGuard],\r\n    component: ApplicationComponent,\r\n  },\r\n  { path: `developers/applications`, redirectTo: 'developers', },\r\n  {\r\n    path: 'developers',\r\n    canActivate: [DevelopersAuthGuard],\r\n    component: DevelopersComponent,\r\n  },\r\n  { path: 'invite/:id', component: InviteComponent, },\r\n  { path: 'login', component: LoginComponent, },\r\n  { path: 'logout', component: LogoutComponent, },\r\n  { path: 'sign-up', component: SignUpComponent, },\r\n  { path: '**', component: NotFoundComponent, },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes, {\r\n    initialNavigation: 'enabled',\r\n    relativeLinkResolution: 'legacy',\r\n  })],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule {}\r\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\nimport { UserService } from '../services/user.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DevelopersAuthGuard implements CanActivate {\n  constructor(\n    private router: Router,\n    private userService: UserService,\n  ) {}\n\n  public async canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot) {\n    await this.userService.init();\n\n    if (!this.userService.self)\n      this.router.navigate(['/login'], {\n        queryParams: { redirect: route.url },\n      });\n    return true;\n  }  \n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-submarine',\n  templateUrl: './submarine.component.html',\n  styleUrls: ['./submarine.component.css']\n})\nexport class SubmarineComponent {}\n","<!-- credit: https://codepen.io/akhil_001/details/gQwJPJ -->\n<div class=\"seaContainer\">\n  <div class=\"submarine__container\">\n    <div class=\"submarine__sail\">\n      <div class=\"submarine__sail-shadow dark1\">\n      </div>\n      <div class=\"submarine__sail-shadow light1\"></div>\n      <div class=\"submarine__sail-shadow dark2\"></div>\n    </div>\n    <div class=\"submarine__body\">\n      <div class=\"submarine__window one\">\n\n      </div>\n      <div class=\"submarine__window two\">\n\n      </div>\n      <div class=\"submarine__shadow-dark\"></div>\n      <div class=\"submarine__shadow-light\"></div>\n      <div class=\"submarine__shadow-arcLight\"></div>\n    </div>\n    <div class=\"bubbles__container\">\n      <span class=\"bubbles bubble-1\"></span>\n      <span class=\"bubbles bubble-2\"></span>\n      <span class=\"bubbles bubble-3\"></span>\n      <span class=\"bubbles bubble-4\"></span>\n    </div>\n    <div class=\"submarine__propeller\">\n      <div class=\"propeller__perspective\">\n      <div class=\"submarine__propeller-parts darkOne\"></div>\n      <div class=\"submarine__propeller-parts lightOne\"></div>\n      </div>        \n    </div>\n  </div>\n</div>","import { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'waves',\r\n  templateUrl: './waves.component.html',\r\n  styleUrls: ['./waves.component.css']\r\n})\r\nexport class WavesComponent {\r\n  @Input() inverted = false;\r\n  @Input() color = 'var(--background-secondary)';\r\n}\r\n","<svg\r\n  class=\"waves\"\r\n  xmlns=\"http://www.w3.org/2000/svg\"\r\n  xmlns:xlink=\"http://www.w3.org/1999/xlink\"\r\n  viewBox=\"0 24 150 28\"\r\n  preserveAspectRatio=\"none\"\r\n  shape-rendering=\"auto\"\r\n  [style.transform]=\"inverted ? 'rotate(180deg)' : ''\">\r\n  <defs>\r\n    <path [attr.fill]=\"color\" id=\"gentle-wave\" d=\"M-160 44c30 0 58-18 88-18s 58 18 88 18 58-18 88-18 58 18 88 18 v44h-352z\" />\r\n  </defs>\r\n  <g class=\"parallax\">\r\n    <use id=\"wave1\" xlink:href=\"#gentle-wave\" x=\"48\" y=\"0\" />\r\n    <use id=\"wave2\" xlink:href=\"#gentle-wave\" x=\"48\" y=\"3\" />\r\n    <use id=\"wave3\" xlink:href=\"#gentle-wave\" x=\"48\" y=\"5\" />\r\n    <use id=\"wave4\" xlink:href=\"#gentle-wave\" x=\"48\" y=\"7\" />\r\n  </g>\r\n</svg>","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\ndocument.addEventListener('DOMContentLoaded', () => {\r\n  platformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n});\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";","import { Component, Inject, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { WSService } from 'src/app/services/ws.service';\nimport { Lean } from 'src/app/types/entity-types';\n\n@Component({\n  selector: 'app-create-invite',\n  templateUrl: './create-invite.component.html',\n  styleUrls: ['./create-invite.component.css']\n})\nexport class CreateInviteComponent implements OnInit {\n  public invite: Lean.Invite;\n  public recentlyUpdated = false;\n\n  public form = new FormGroup({\n    maxUses: new FormControl('', [ Validators.required, Validators.min(1), Validators.max(1000) ]),\n    expiresAt: new FormControl('', [ Validators.required ]),\n  });\n\n  constructor(\n    public dialogRef: MatDialogRef<CreateInviteComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: {\n      guild: Lean.Guild,\n    },\n    private ws: WSService,\n  ) {}\n\n  public ngOnInit() {\n    this.ws.emit('INVITE_CREATE', {\n      guildId: this.data.guild._id,\n      options: this.form.value,\n    }, this);\n\n    this.ws.on('INVITE_CREATE', ({ invite }) => this.invite = invite, this);\n\n    this.form.valueChanges\n      .subscribe(() => this.recentlyUpdated = this.form.valid);\n  }\n\n  public onNoClick() {\n    this.dialogRef.close();\n  }\n\n  public updateInvite() {\n    if (this.form.invalid) return;\n\n    this.recentlyUpdated = true;\n\n    this.ws.emit('INVITE_DELETE', { inviteCode: this.invite._id }, this);\n    this.ws.emit('INVITE_CREATE', {\n      guildId: this.data.guild._id,\n      options: this.form.value,\n    }, this);    \n  }\n\n  public copyToClipboard() {\n    navigator.clipboard.writeText(this.invite?._id);\n  }\n}\n","<h1 mat-dialog-title>Invite Friends to {{ data.guild.name }}</h1>\n\n<div class=\"text-center\" mat-dialog-content>\n  <mat-form-field appearance=\"outline\" class=\"float-left\">\n    <mat-label>Invite Link</mat-label>\n    <input type=\"text\"\n      [value]=\"invite?._id\" matInput>\n  </mat-form-field>\n\n  <div class=\"ml-3 float-left\">\n    <button\n      (click)=\"copyToClipboard()\"\n      matTooltip=\"Copy\"\n      class=\"btn p-3 mt-1 bg-primary\"\n      color=\"primary\">\n      <i class=\"lni lni-clipboard\"></i>\n    </button>\n  </div>\n</div>\n\n<hr>\n\n<a (click)=\"showOptions.value = true\"\n  *ngIf=\"!showOptions.value\"\n  class=\"cursor-pointer\">Show Options</a>\n\n<input type=\"hidden\" #showOptions>\n\n<div *ngIf=\"showOptions.value\">\n  <h6 class=\"text-center\">Options</h6>\n  <form #f=\"ngForm\" [formGroup]=\"form\">\n    <mat-form-field appearance=\"outline\">\n      <mat-label>Max Uses</mat-label>\n      <input\n        type=\"number\"\n        formControlName=\"maxUses\" matInput>\n    </mat-form-field>\n\n    <mat-form-field appearance=\"outline\" class=\"ml-2\">\n      <mat-label>Expires At</mat-label>\n      <input\n        type=\"datetime-local\"\n        formControlName=\"expiresAt\" matInput>\n    </mat-form-field>\n  </form>\n\n  <div class=\"d-flex justify-content-center\" mat-dialog-actions>\n    <button\n      [disabled]=\"!recentlyUpdated\"\n      class=\"bg-success text-dark\"\n      matTooltip=\"Update\"\n      (click)=\"updateInvite()\"\n      mat-button><i class=\"lni lni-save text-dark\"></i></button>\n  </div>\n</div>"],"sourceRoot":"webpack:///"}